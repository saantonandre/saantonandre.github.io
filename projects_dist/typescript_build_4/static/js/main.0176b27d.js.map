{"version":3,"file":"static/js/main.0176b27d.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","modules/entity/Sprite.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","modules/physics/checkCollisions.ts","modules/physics/index.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","modules/text/Text.ts","modules/vfxManager/vfxs.ts","modules/vfxManager/VfxManager.ts","modules/soundManager/SoundManager.ts","modules/entity/Entity.ts","modules/controls/Controls.ts","modules/mouse/Mouse.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","modules/debug/Debug.ts","modules/actors/player/Player.ts","modules/camera/Camera.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","modules/canvas/GameCanvas.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","modules/entity/SpriteStack.ts","modules/entity/Stacked.ts","modules/meta/Meta.ts","game/game.ts","index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","// Default spritesheet\r\nimport spritesheet from \"assets/sheet.png\";\r\nconst sheet = new Image();\r\nsheet.src = spritesheet;\r\n\r\n/** Class representing a sprite,\r\n * i.e. an object capable of iterating through a set of image frames, creating the illusion of animation.\r\n */\r\nexport class Sprite {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  /** Each entity has the same spritesheet by default, but it can be changed */\r\n  sheet: HTMLImageElement = sheet;\r\n  /** The animation currently rendering (defaults to 'idle') */\r\n  animation: string = \"idle\";\r\n  /** Whenever a new animation is created, it will end up here */\r\n  animations: any = {};\r\n  /** Toggle used to skip this entity's rendering, for a reason or another */\r\n  display: boolean = true;\r\n  /** Defines if this sprite is facing to the left */\r\n  left: number = 0;\r\n  /** Represents the current frame of the current sprite animation */\r\n  frame: number = 0;\r\n  /** Counts the amount of rendering iterations since the last animation frame change */\r\n  frameCounter: number = 0;\r\n  removed: boolean = false;\r\n  rot: number = 0;\r\n  /**\r\n   * Creates a new Sprite object at the given coordinates and of the specified size.\r\n   * Commonly used as an extension to children classes, like entities or visual effects.\r\n   *\r\n   * *Note: Coordinates and sizes are expressed in tilesize units*\r\n   * @param {Number} x Horizontal coordinate relative to the drawing environment\r\n   * @param {Number} y Vertical coordinate relative to the drawing environment\r\n   * @param {Number} w Width\r\n   * @param {Number} h Height\r\n   */\r\n  constructor(x: number, y: number, w: number = 1, h: number = 1) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n    // eg. setting an animation:\r\n    //this.setAnimation(\"idle\", [0], [0]);\r\n  }\r\n  /** Returns true if the animation has changed, false otherwise\r\n   *  Usage example: this.loadAnimation('attack')\r\n   */\r\n  loadAnimation(label: string) {\r\n    if (this.animation === label) {\r\n      return false;\r\n    }\r\n    this.frameCounter = 0;\r\n    this.frame = 0;\r\n    this.animation = label;\r\n    return true;\r\n  }\r\n  /**\r\n   * What happens after the current animation ends.\r\n   * Entities/vfxs will overwrite this function when needed, to add functionalities.\r\n   * If no actions are specified, then the current animation will loop endlessly.\r\n   *\r\n   */\r\n  onAnimationEnd() {\r\n    /**\r\n     * Example code inside this function:\r\n     *\r\n     *  switch(this.animation){\r\n     *      case 'death':\r\n     *          this.removed=true;\r\n     *          break;\r\n     *      case 'attack':\r\n     *          this.loadAnimation('idle');\r\n     *          break;\r\n     *  }\r\n     *\r\n     */\r\n  }\r\n\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ): void {\r\n  }\r\n  /** Renders the base sprite, not animated, as a static icon in a specific location */\r\n  renderItem(\r\n    x: number,\r\n    y: number,\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    w = 1,\r\n    h = 1\r\n  ) {\r\n    context.drawImage(\r\n      this.sheet, // source of the sprite\r\n      this.animations[\"idle\"].keyframesX[0][0] * tilesize, // x pos of the sprite\r\n      this.animations[\"idle\"].keyframesY[0][0] * tilesize, // y pos of the sprite\r\n      this.animations[\"idle\"].w * tilesize, // width of the sprite\r\n      this.animations[\"idle\"].h * tilesize, // height of the sprite\r\n      x * tilesize * ratio, // x of the entity\r\n      y * tilesize * ratio, // y of the entity\r\n      w * tilesize * ratio, // width of the entity\r\n      h * tilesize * ratio // height of the entity\r\n    );\r\n  }\r\n  /** Progresses the sprite animation\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateSprite(deltaTime: number = 1) {\r\n    this.frameCounter += deltaTime;\r\n    if (this.frameCounter >= this.animations[this.animation].slowness) {\r\n      this.frame++;\r\n      this.frameCounter = 0;\r\n    }\r\n    // If the current frame exceeded the current animation's length:\r\n    if (\r\n      this.frame >= this.animations[this.animation].keyframesX[this.left].length\r\n    ) {\r\n      this.frame = 0;\r\n      this.frameCounter = 0;\r\n      this.onAnimationEnd();\r\n    }\r\n  }\r\n  /** Adds or overwrites an animation\r\n   *\r\n   * @param {String} label The name of the animation (using an already existing name will overwrite the animation)\r\n   * @param {Number[]} keyframesX The positions of the sprite frames in the spritesheet (horizontal), expressed in tilesize\r\n   * @param {Number[]} keyframesY The positions of the sprite frames in the spritesheet (vertical), expressed in tilesize\r\n   * @param {0 | 1} left If set to 1 it will create a different animation whenever this object is facing to the left (has this.left = 1)\r\n   *\r\n   * @example\r\n   * this.setAnimation('attack',[0,0,0],[1,2,3])  // Creates an animation labeled 'attack' composed of 3 animation frames\r\n   *\r\n   * this.setAnimation('attack',[1,1,1],[1,2,3], 1) // Sets a different animation for whenever the sprite faces to the left (optional)\r\n   *\r\n   */\r\n  setAnimation(\r\n    label: string,\r\n    keyframesX: number[],\r\n    keyframesY: number[],\r\n    left: 0 | 1 = 0\r\n  ) {\r\n    if (!this.animations[label]) {\r\n      this.animations[label] = new Animation(this);\r\n    }\r\n    if (left) {\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    } else {\r\n      /** If left-facing animation was not specified use the keyframes for both ways */\r\n      this.animations[label].keyframesX[0] = keyframesX;\r\n      this.animations[label].keyframesY[0] = keyframesY;\r\n\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    }\r\n  }\r\n  /**\r\n   * Renders this sprite current animation, at the given coordinates\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSprite(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      //console.log('rendering a removed entity!!!')\r\n    }\r\n\r\n    if (this.rot) {\r\n      /** Rotated Rendering */\r\n      context.save();\r\n      context.translate(\r\n        ((this.x +\r\n          this.animations[this.animation].offsetX +\r\n          pivot.x +\r\n          camera.x) *\r\n          tilesize *\r\n          ratio) |\r\n          0,\r\n        ((this.y +\r\n          this.animations[this.animation].offsetY +\r\n          pivot.y +\r\n          camera.y) *\r\n          tilesize *\r\n          ratio) |\r\n          0\r\n      );\r\n      context.rotate(this.rot);\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        (-pivot.x * tilesize * ratio) | 0, // x of the entity\r\n        (-pivot.y * tilesize * ratio) | 0, // y of the entity\r\n        (this.animations[this.animation].w * tilesize * ratio) | 0, // width of the entity\r\n        (this.animations[this.animation].h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n      /** Default Rendering */\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        ((this.x + this.animations[this.animation].offsetX + camera.x) *\r\n          tilesize *\r\n          ratio) |\r\n          0, // x of the entity\r\n        ((this.y + this.animations[this.animation].offsetY + camera.y) *\r\n          tilesize *\r\n          ratio) |\r\n          0, // y of the entity\r\n        (this.animations[this.animation].w * tilesize * ratio) | 0, // width of the entity\r\n        (this.animations[this.animation].h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * Disregards the animation and renders an entity as a filled square,\r\n   * can be used for debugging or as a placeholder.\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {Object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {Object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSquare(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      console.log(\"rendering a removed entity!!!\");\r\n    }\r\n    if (this.rot) {\r\n      // Rotated Rendering\r\n      context.save();\r\n      context.translate(\r\n        ((this.x + pivot.x + camera.x) * tilesize * ratio) | 0,\r\n        ((this.y + pivot.y + camera.y) * tilesize * ratio) | 0\r\n      );\r\n      context.rotate(this.rot);\r\n      context.fillRect(\r\n        (-pivot.x * tilesize * ratio) | 0, // x of the entity\r\n        (-pivot.y * tilesize * ratio) | 0, // y of the entity\r\n        (this.w * tilesize * ratio) | 0, // width of the entity\r\n        (this.h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n      // Default Rendering\r\n      console.log(\"rendering player\",((this.x + camera.x) * tilesize * ratio) | 0, // x of the entity\r\n      ((this.y + camera.y) * tilesize * ratio) | 0, // y of the entity\r\n      (this.w * tilesize * ratio) | 0, // width of the entity\r\n      (this.h * tilesize * ratio) | 0 // height of the entity\r\n      )\r\n      context.fillRect(\r\n        ((this.x + camera.x) * tilesize * ratio) | 0, // x of the entity\r\n        ((this.y + camera.y) * tilesize * ratio) | 0, // y of the entity\r\n        (this.w * tilesize * ratio) | 0, // width of the entity\r\n        (this.h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n    }\r\n  }\r\n}\r\nclass Animation {\r\n  keyframesX: never[][];\r\n  keyframesY: never[][];\r\n  slowness: number;\r\n  w: any;\r\n  h: any;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  constructor(entity: { x: number; y: number; w: number; h: number }) {\r\n    /** X positions on the spritesheet */\r\n    this.keyframesX = [[], []];\r\n    /** Y positions on the spritesheet */\r\n    this.keyframesY = [[], []];\r\n    /** Defines how many game-frames should be skipped before each next animation-frame */\r\n    this.slowness = 6;\r\n\r\n    // The size of the sprite defaults to the entity size, but can be changed\r\n    this.w = entity.w;\r\n    this.h = entity.h;\r\n\r\n    // Some Animations may need an offset relative to the Entity position\r\n    this.offsetX = (entity.w - this.w) / 2;\r\n    this.offsetY = (entity.h - this.h) / 2;\r\n  }\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/** Gets called after the velocities have been set\r\n *\r\n * Contains my own javascript implementation of the SWEPT AABB algorithm, after taking to account many resources on the matter:\r\n * @link https://www.youtube.com/watch?v=8JJ-4JgR7Dg\r\n * @link https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/swept-aabb-collision-detection-and-response-r3084/\r\n * @link https://blog.hamaluik.ca/posts/swept-aabb-collision-using-minkowski-difference/\r\n */\r\n// import { debug } from '../debug/debug.js'\r\nimport { Point, Rect, EntityLike } from \"./\";\r\n\r\nexport function checkCollisions(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[],\r\n  deltaTime = 1\r\n) {\r\n  if (!obj.solid) {\r\n    // return false if the object calling this function is not solid\r\n    return false;\r\n  }\r\n  // Decides if the col should be checked normally, without vectors\r\n  simpleCollisionCheck(obj, entities);\r\n  if (obj.xVel + obj.xVelExt === 0 && obj.yVel + obj.yVelExt === 0) {\r\n    return;\r\n  }\r\n\r\n  // Broad Phase\r\n  // Step 1: Create a broad hitbox with the added size of the velocities\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  /** If the object has an hitbox property, check collision with that */\r\n  let objHitbox = obj.hitbox ? obj.hitbox : obj;\r\n\r\n  /** Bigger hitbox for the broad phase */\r\n  let broadHitbox = {\r\n    x: velocitiesX > 0 ? objHitbox.x : objHitbox.x + velocitiesX * deltaTime,\r\n    y: velocitiesY > 0 ? objHitbox.y : objHitbox.y + velocitiesY * deltaTime,\r\n    w:\r\n      velocitiesX > 0\r\n        ? objHitbox.w + velocitiesX * deltaTime\r\n        : objHitbox.w - velocitiesX * deltaTime,\r\n    h:\r\n      velocitiesY > 0\r\n        ? objHitbox.h + velocitiesY * deltaTime\r\n        : objHitbox.h - velocitiesY * deltaTime,\r\n  };\r\n\r\n  /** debug player dir*/\r\n  //debug.drawLine({ x: obj.centerX, y: obj.centerY }, { x: obj.centerX + velocitiesX * deltaTime, y: obj.centerY + velocitiesY * deltaTime }, \"white\")\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(broadHitbox, \"cyan\")\r\n\r\n  /** Vector containing pairs of (ID, contactTime) */\r\n  let colPointsVector = [];\r\n  /** Contact Time */\r\n  const ct = { value: 0.0 };\r\n  /** Contact Point */\r\n  const cp = { x: 0, y: 0 };\r\n  /** Contact normal */\r\n  const cn = { x: 0, y: 0 };\r\n\r\n  /** Defines if the level has been changed */\r\n  let levelChange = false;\r\n  // Step 2:\r\n  for (let i = 0; i < entities.length; i++) {\r\n    let entity = entities[i];\r\n    // Skip collision exceptions\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    // BROAD\r\n    // Checks broad hitbox collisions with entities\r\n    if (collided(broadHitbox, entity)) {\r\n      // Checks corner points collisions\r\n\r\n      // NARROW\r\n      // If the entity has an hitbox, use it instead\r\n      let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n      // Swept collision check\r\n      if (\r\n        dynamicRectVsRect(\r\n          objHitbox,\r\n          entityHitbox,\r\n          velocitiesX,\r\n          velocitiesY,\r\n          deltaTime,\r\n          cp,\r\n          cn,\r\n          ct\r\n        )\r\n      ) {\r\n        // Handles eventual collision events\r\n        if (obj.onCollision) {\r\n          obj.onCollision(entity, entities);\r\n        }\r\n        // Skip resolve exceptions\r\n        if (resolveException(obj, entity)) {\r\n          continue;\r\n        }\r\n        colPointsVector.push({ id: i, ct: ct.value });\r\n\r\n        // Compute point colliders\r\n      }\r\n    }\r\n  }\r\n  if (levelChange) {\r\n    // Entities are changed, no point in resolving\r\n    return;\r\n  }\r\n  if (colPointsVector.length === 0) {\r\n    //console.log('No colliders were found, obj xVel = ', obj.xVel)\r\n    return;\r\n  }\r\n  // Do the sort\r\n  colPointsVector.sort((a, b) => {\r\n    return a.ct - b.ct;\r\n  });\r\n  // Now resolve the collision in correct order\r\n  for (let rect of colPointsVector) {\r\n    resolveDynamicRectVsRect(obj, deltaTime, entities[rect.id]);\r\n  }\r\n\r\n  /**\r\n   * Fixes slide direction change in case velocities were initially diagonal\r\n   * (Its' implied that at least one of the velocities isn't 0)\r\n   * (Its' also implied there has been a collision at this point)\r\n   *\r\n   */\r\n  if (velocitiesX !== 0 && velocitiesY !== 0) {\r\n    //console.log(\"Recursion happened\");\r\n    // checkCollisions(obj, entities, deltaTime);\r\n  }\r\n}\r\n\r\nclass PointsCollider {\r\n  entity: EntityLike | undefined;\r\n  offset = -0.01;\r\n  /** Top left collider */\r\n  TL = { x: 0, y: 0, col: false };\r\n  /** Top right collider */\r\n  TR = { x: 0, y: 0, col: false };\r\n  /** Bottom left collider */\r\n  BL = { x: 0, y: 0, col: false };\r\n  /** Bottom right collider */\r\n  BR = { x: 0, y: 0, col: false };\r\n\r\n  constructor() {}\r\n  /** Sets the collision points on each corner of the entity */\r\n  setColPoints(entity: EntityLike) {\r\n    this.entity = entity;\r\n    let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n    this.TL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.TR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.BL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n    this.BR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n  }\r\n  /** Checks Points collision */\r\n  checkCols(collider: EntityLike) {\r\n    if (!this.TL.col) this.TL.col = pointRectCol(this.TL, collider);\r\n    if (!this.TR.col) this.TR.col = pointRectCol(this.TR, collider);\r\n    if (!this.BL.col) this.BL.col = pointRectCol(this.BL, collider);\r\n    if (!this.BR.col) this.BR.col = pointRectCol(this.BR, collider);\r\n  }\r\n  /** Move the entity depending on the collided points */\r\n  resolveCollisions() {\r\n    if (!this.entity) {\r\n      return;\r\n    }\r\n    //debug.drawPoint(this.TL, this.TL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.TR, this.TR.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BL, this.BL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BR, this.BR.col ? 'red' : 'yellow')\r\n    if (this.TL.col || this.BL.col) {\r\n      if (this.entity.xVel < 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt < 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TR.col || this.BR.col) {\r\n      if (this.entity.xVel > 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt > 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TL.col || this.TR.col) {\r\n      if (this.entity.yVel < 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt < 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n    if (this.BL.col || this.BR.col) {\r\n      if (this.entity.yVel > 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt > 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveDynamicRectVsRect(\r\n  obj: EntityLike,\r\n  deltaTime: number,\r\n  rectB: EntityLike\r\n) {\r\n  let contactPoint = { x: 0, y: 0 };\r\n  let contactNormal = { x: 0, y: 0 };\r\n  let contactTime = { value: 0.0 };\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  let objHitbox1 = obj.hitbox ? obj.hitbox : obj;\r\n  let objHitbox2 = rectB.hitbox ? rectB.hitbox : rectB;\r\n  //debug.drawRect(objHitbox2, 'cyan')\r\n  if (\r\n    dynamicRectVsRect(\r\n      objHitbox1,\r\n      objHitbox2,\r\n      velocitiesX,\r\n      velocitiesY,\r\n      deltaTime,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //if (contactNormal.x < 0) { obj.col.R = -contactNormal.x * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n    //if (contactNormal.x > 0) { obj.col.L = contactNormal.x * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y < 0) { obj.col.B = -contactNormal.y * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y > 0) { obj.col.T = contactNormal.y * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n\r\n    // console.log('resolved a collision, old xVel = ', obj.xVel)\r\n    // To avoid weird JS numbers behaviour\r\n    let overlapFixMultiplier = 1.001;\r\n    obj.xVel +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVel +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.xVelExt +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVelExt +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n\r\n    //obj.xVel = 0;\r\n    //obj.yVel = 0;\r\n    // console.log('new xVel', obj.xVel)\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/** Swaps 2 values */\r\nfunction dynamicRectVsRect(\r\n  rectA: Rect,\r\n  rectB: Rect,\r\n  xVel: number,\r\n  yVel: number,\r\n  deltaTime: number,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  contactTime: { value: any }\r\n) {\r\n  // Check if dynamic rectangle is actually moving\r\n  // we assume rectangles are NOT in collision to start\r\n  if (xVel == 0 && yVel == 0) {\r\n    return false;\r\n  }\r\n  contactTime.value = 0;\r\n  // Expand target rectangle by source dimensions\r\n  let expanded = {\r\n    x: rectB.x - rectA.w / 2,\r\n    y: rectB.y - rectA.h / 2,\r\n    w: rectB.w + rectA.w,\r\n    h: rectB.h + rectA.h,\r\n  };\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(expanded, \"orange\")\r\n  let centerRectA = {\r\n    x: rectA.x + rectA.w / 2,\r\n    y: rectA.y + rectA.h / 2,\r\n  };\r\n  let direction = {\r\n    x: xVel * deltaTime,\r\n    y: yVel * deltaTime,\r\n  };\r\n  if (\r\n    rayVsRect(\r\n      centerRectA,\r\n      direction,\r\n      expanded,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //console.log('ray v rect returned ct', contactTime.value)\r\n    return contactTime.value >= 0 && contactTime.value < 1;\r\n  } else {\r\n    //console.log('ray v rect returned false')\r\n    return false;\r\n  }\r\n}\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox = false\r\n) {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction rayVsRect(\r\n  origin: Point,\r\n  direction: Point,\r\n  target: Rect,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  timeHitNear: { value: number }\r\n) {\r\n  contactPoint.x = 0;\r\n  contactPoint.y = 0;\r\n\r\n  contactNormal.x = 0;\r\n  contactNormal.y = 0;\r\n\r\n  // Cache division\r\n  let inverseDir = {\r\n    x: 1 / direction.x,\r\n    y: 1 / direction.y,\r\n  };\r\n  // Calculate intersections with rectangle bounding axes\r\n  let timeNear = {\r\n    x: (target.x - origin.x) * inverseDir.x,\r\n    y: (target.y - origin.y) * inverseDir.y,\r\n  };\r\n  let timeFar = {\r\n    x: (target.x + target.w - origin.x) * inverseDir.x,\r\n    y: (target.y + target.h - origin.y) * inverseDir.y,\r\n  };\r\n  if (isNaN(timeFar.y) || isNaN(timeFar.x)) {\r\n    return false;\r\n  }\r\n  if (isNaN(timeNear.y) || isNaN(timeNear.x)) {\r\n    return false;\r\n  }\r\n\r\n  // Sort distances\r\n  if (timeNear.x > timeFar.x) {\r\n    let temp = timeNear.x;\r\n    timeNear.x = timeFar.x;\r\n    timeFar.x = temp;\r\n  }\r\n  if (timeNear.y > timeFar.y) {\r\n    let temp = timeNear.y;\r\n    timeNear.y = timeFar.y;\r\n    timeFar.y = temp;\r\n  }\r\n\r\n  // Early rejection\r\n  if (timeNear.x > timeFar.y || timeNear.y > timeFar.x) {\r\n    return false;\r\n  }\r\n\r\n  // Closest 'time' will be the first contact\r\n  timeHitNear.value = Math.max(timeNear.x, timeNear.y);\r\n\r\n  // Furthest 'time' is contact on opposite side of target\r\n  let timeHitFar = Math.min(timeFar.x, timeFar.y);\r\n\r\n  // Reject if ray direction is pointing away from object\r\n  if (timeHitFar < 0) {\r\n    return false;\r\n  }\r\n\r\n  // Contact point of collision from parametric line equation\r\n  contactPoint.x = origin.x + timeHitNear.value * direction.x;\r\n  contactPoint.y = origin.y + timeHitNear.value * direction.y;\r\n\r\n  if (timeNear.x > timeNear.y) {\r\n    if (inverseDir.x < 0) {\r\n      contactNormal.x = 1;\r\n      contactNormal.y = 0;\r\n    } else {\r\n      contactNormal.x = -1;\r\n      contactNormal.y = 0;\r\n    }\r\n  } else if (timeNear.x < timeNear.y) {\r\n    if (inverseDir.y < 0) {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = 1;\r\n    } else {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = -1;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/** Defines whether the collision check is unnecessary */\r\nfunction collisionException(obj: EntityLike, entity: EntityLike) {\r\n  if (entity.removed || entity == obj) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n/** Defines whether the collision resolve should be avoided */\r\nfunction resolveException(obj: EntityLike, entity: EntityLike) {\r\n  if (\r\n    !entity.solid ||\r\n    entity.removed ||\r\n    entity == obj ||\r\n    (entity.grounded && !obj.grounded)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collided(a: Rect, b: Rect, forceSpriteBox = false) {\r\n  let rect1 = a.hitbox && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = b.hitbox && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/** Gets called if a more advanced colcheck is not necessary */\r\nexport function simpleCollisionCheck(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[]\r\n) {\r\n  for (let entity of entities) {\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    if (collided(obj, entity)) {\r\n      if (obj.onCollision) {\r\n        obj.onCollision(entity);\r\n      }\r\n      if (entity.onCollision) {\r\n        entity.onCollision(obj);\r\n      }\r\n      if (resolveException(obj, entity)) {\r\n        continue;\r\n      }\r\n      colCheck(obj, entity);\r\n    }\r\n  }\r\n}\r\nexport function colCheck(\r\n  shapeA: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  shapeB: EntityLike\r\n) {\r\n  if (shapeA == null || shapeB == null) {\r\n    return true;\r\n  }\r\n  // get the vectors to check against\r\n  var shapeAA = shapeA.hitbox || shapeA,\r\n    shapeBB = shapeB.hitbox || shapeB;\r\n  var vX = shapeAA.x + shapeAA.w / 2 - (shapeBB.x + shapeBB.w / 2),\r\n    vY = shapeAA.y + shapeAA.h / 2 - (shapeBB.y + shapeBB.h / 2),\r\n    // add the half widths and half heights of the objects\r\n    hWidths = shapeAA.w / 2 + shapeBB.w / 2,\r\n    hHeights = shapeAA.h / 2 + shapeBB.h / 2,\r\n    colDir = \"\";\r\n\r\n  // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\r\n  if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\r\n    // figures out on which side we are colliding (top, bottom, left, or right)\r\n    var oX = hWidths - Math.abs(vX),\r\n      oY = hHeights - Math.abs(vY);\r\n    if (oX >= oY) {\r\n      if (vY > 0) {\r\n        colDir = \"t\";\r\n        if (shapeA.col.T < oY) {\r\n          if (oY > 0.01) shapeA.col.T += oY;\r\n        }\r\n      } else {\r\n        colDir = \"b\";\r\n        if (shapeA.col.B < oY) {\r\n          if (oY > 0.01) shapeA.col.B += oY;\r\n        }\r\n      }\r\n    } else {\r\n      if (vX > 0) {\r\n        colDir = \"l\";\r\n        if (shapeA.col.L < oX) {\r\n          if (oX > 0.01) shapeA.col.L += oX;\r\n        }\r\n      } else {\r\n        colDir = \"r\";\r\n        if (shapeA.col.R < oX) {\r\n          if (oX > 0.01) shapeA.col.R += oX;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return colDir;\r\n}\r\n","export type Line = {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n};\r\n\r\nexport type Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nexport type Rect = Point & {\r\n  w: number;\r\n  h: number;\r\n  hitbox?: Rect;\r\n};\r\nexport type EntityLike = Rect & {\r\n  hitbox?: Rect;\r\n  grounded: boolean;\r\n  removed: boolean;\r\n  onCollision?: Function;\r\n  yVelExt: number;\r\n  yVel: number;\r\n  xVelExt: number;\r\n  xVel: number;\r\n  solid: boolean;\r\n  col?: {\r\n    L: number;\r\n    R: number;\r\n    T: number;\r\n    B: number;\r\n  };\r\n};\r\n/**\r\n *  To use this:\r\n *  - Check for all the simple collisions\r\n *  - Send the collided entities' array and the colliding object\r\n *\r\n * @returns {Rect[]} An array of the merged colliders.\r\n */\r\nexport function assembleChunk(chunk: Rect[], obj: EntityLike): Rect[] {\r\n  let assembledChunks: Rect[] = [];\r\n  let brokenChunk: Rect[] = [];\r\n  if (chunk.length == 1) {\r\n    return chunk;\r\n  }\r\n  for (let i = 0; i < chunk.length; i++) {\r\n    for (let j = 0; j < chunk[i].w; j++) {\r\n      for (let k = 0; k < chunk[i].h; k++) {\r\n        let part: Rect = {\r\n          x: chunk[i].x + j,\r\n          y: chunk[i].y + k,\r\n          w: 1,\r\n          h: 1,\r\n        };\r\n        if (collided(obj, part)) {\r\n          brokenChunk.push(part);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (brokenChunk.length == 0) {\r\n    return [] as Rect[];\r\n  }\r\n  let firstBlock = {\r\n    x: brokenChunk[0].x,\r\n    y: brokenChunk[0].y,\r\n    w: brokenChunk[0].w,\r\n    h: brokenChunk[0].h,\r\n  };\r\n  assembledChunks.push(firstBlock);\r\n  let a: Rect, b: Rect;\r\n  for (let i = 0; i < brokenChunk.length; i++) {\r\n    for (let j = 0; j < assembledChunks.length; j++) {\r\n      a =\r\n        brokenChunk[i].hitbox !== undefined\r\n          ? brokenChunk[i].hitbox!\r\n          : brokenChunk[i];\r\n      b = assembledChunks[j];\r\n      if (a.y == b.y && a.h == b.h) {\r\n        if (a.x + a.w > b.x + b.w) {\r\n          b.w = a.x + a.w - b.x;\r\n        }\r\n        if (a.x < b.x) {\r\n          b.w += b.x - a.x;\r\n          b.x = a.x;\r\n        }\r\n      } else if (a.x == b.x && a.w == b.w) {\r\n        if (a.y + a.h > b.y + b.h) {\r\n          b.h = a.y + a.h - b.y;\r\n        }\r\n        if (a.y < b.y) {\r\n          b.h += b.y - a.y;\r\n          b.y = a.y;\r\n        }\r\n      } else {\r\n        let temp = {\r\n          x: a.x,\r\n          y: a.y,\r\n          w: a.w,\r\n          h: a.h,\r\n        };\r\n        assembledChunks.push(temp);\r\n      }\r\n    }\r\n  }\r\n  return assembledChunks;\r\n}\r\n/**\r\n *  Checks whether two rect-shaped objects are colliding\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if the rects are colliding, false otherwise\r\n */\r\nexport function collided(\r\n  a: Rect,\r\n  b: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect1 = typeof a.hitbox !== \"undefined\" && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = typeof b.hitbox !== \"undefined\" && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Checks if a point is contained withing a rectangle shaped object\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if contained, false otherwise\r\n */\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n/**\r\n * Checks for intersections between a line and a rect shaped object\r\n * @returns {boolean} True if there's an intersection, false otherwise\r\n */\r\nexport function lineRectCol(line: Line, sq: Rect): boolean {\r\n  let squareLines = getRectSides(sq);\r\n  for (let i = 0; i < squareLines.length; i++) {\r\n    if (\r\n      intersect(\r\n        squareLines[i].x1,\r\n        squareLines[i].y1,\r\n        squareLines[i].x2,\r\n        squareLines[i].y2,\r\n        line.x1,\r\n        line.y1,\r\n        line.x2,\r\n        line.y2\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Given two lines(expressed in 8 coordinates of 4 points), checks whether there's an intersection between them\r\n *\r\n * @returns {Point | false} The coords of the intersection or false if there's no contact\r\n */\r\nexport function intersect(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  x4: number,\r\n  y4: number\r\n): Point | false {\r\n  // Check if none of the lines are of length 0\r\n  if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n    return false;\r\n  }\r\n\r\n  let denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n\r\n  if (denominator === 0) {\r\n    return false;\r\n  }\r\n\r\n  let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n  let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\r\n\r\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n    return false;\r\n  }\r\n\r\n  let x = x1 + ua * (x2 - x1);\r\n  let y = y1 + ua * (y2 - y1);\r\n\r\n  return {\r\n    x,\r\n    y,\r\n  };\r\n}\r\n/**\r\n *\r\n * @returns {Line[]} Array containing each line of the rect as 2 points coordinates\r\n */\r\nexport function getRectSides(rect: Rect): Line[] {\r\n  let sides = [];\r\n  let sq = rect;\r\n  if (rect.hitbox !== undefined) {\r\n    sq = rect.hitbox;\r\n  }\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y,\r\n  });\r\n\r\n  return sides;\r\n}\r\n\r\n/**\r\n * Computes the angle between the given points coordinates\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getAngle({ x1, y1, x2, y2 }: Line): number {\r\n  let deltaX = x2 - x1;\r\n  let deltaY = y2 - y1;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n/**\r\n * Computes the angle between the centers of two rectangles\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getRectsAngle(\r\n  { x: x1, w: w1, y: y1, h: h1 }: Rect,\r\n  { x: x2, w: w2, y: y2, h: h2 }: Rect\r\n): number {\r\n  let deltaX = x2 + w2 / 2 - (x1 + w2 / 2);\r\n  let deltaY = y2 + h2 / 2 - (y1 + h2 / 2);\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n/**\r\n * Computes the Cosine and Sine between 2 points\r\n *\r\n * @returns {number[]} Array containing the cosine and sine values, respectively.\r\n */\r\nexport function cosSin({ x1, y1, x2, y2 }: Line): number[] {\r\n  let rotation = getAngle({ x1, y1, x2, y2 });\r\n  let cosine = Math.cos(rotation);\r\n  let sine = Math.sin(rotation);\r\n  return [cosine, sine];\r\n}\r\n/**\r\n * Given two rectangles, returns the angle between their center point\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getRotation(obj1: Rect, obj2: Rect): number {\r\n  let x1 = obj1.x + obj1.w / 2;\r\n  let y1 = obj1.y + obj1.h / 2;\r\n  let x2 = obj2.x + obj2.w / 2;\r\n  let y2 = obj2.y + obj2.h / 2;\r\n  return getAngle({ x1, y1, x2, y2 });\r\n}\r\n\r\n/**\r\n * Returns the distance between the center of two rect shaped objects\r\n *\r\n * @returns {number} Distance between the rectangles centers.\r\n */\r\nexport function distance(\r\n  obj1: Point & { w?: number; h?: number },\r\n  obj2: Point & { w?: number; h?: number }\r\n): number {\r\n  let x1 = obj1.w ? obj1.x + obj1.w / 2 : obj1.x;\r\n  let y1 = obj1.h ? obj1.y + obj1.h / 2 : obj1.y;\r\n\r\n  let x2 = obj2.w ? obj2.x + obj2.w / 2 : obj2.x;\r\n  let y2 = obj2.h ? obj2.y + obj2.h / 2 : obj2.y;\r\n\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n}\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","\r\nexport class Text {\r\n    content:string | string[] = '';\r\n    x:number;\r\n    y :number;\r\n    color:string;\r\n    align:CanvasTextAlign;\r\n    baseline:CanvasTextBaseline;\r\n    fontSize = 7;\r\n    font = 'Consolas, monaco, monospace';\r\n    shadow = false;\r\n    shadowColor = '#14182e';\r\n    strokeWidth = 0.3;\r\n    stroke:boolean;\r\n    strokeColor: string | CanvasGradient | CanvasPattern;\r\n    constructor(x:number, y:number, color = '#ad2f45', align = \"center\" as CanvasTextAlign, baseline = \"middle\" as CanvasTextBaseline) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = color;\r\n        this.align = align;\r\n        this.stroke=false;\r\n        this.baseline = baseline;\r\n        this.strokeColor=\"#ffffff\"\r\n\r\n    }\r\n    get shadowOffsetX() {\r\n        return this.fontSize / 200;\r\n    }\r\n    get shadowOffsetY() {\r\n        return this.fontSize / 200;\r\n    }\r\n    canvasFont(ratio:number) {\r\n        return 'bold ' + Math.round(this.fontSize * ratio) + 'px ' + this.font\r\n    }\r\n    render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera = { x: 0, y: 0 }) {\r\n        if (this.stroke) {\r\n            context.lineWidth = this.strokeWidth * ratio;\r\n            context.strokeStyle = this.strokeColor;\r\n        }\r\n        context.textBaseline = this.baseline;\r\n        context.textAlign = this.align;\r\n        context.fillStyle = this.color;\r\n        context.font = this.canvasFont(ratio);\r\n        if (typeof this.content !== \"string\") {\r\n            // Content is split into an array of lines\r\n            for (let i = 0; i < this.content.length; i++) {\r\n                if (this.stroke) {\r\n                    context.strokeText(\r\n                        this.content[i],\r\n                        (this.x + camera.x) * tilesize * ratio,\r\n                        ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                if (this.shadow) {\r\n                    context.fillStyle = this.shadowColor;\r\n                    context.fillText(\r\n                        this.content[i],\r\n                        (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                        ((this.y + camera.y + this.shadowOffsetY) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                context.fillStyle = this.color;\r\n                context.fillText(\r\n                    this.content[i],\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                );\r\n            }\r\n\r\n        } else {\r\n            /** Stroke rendering */\r\n            if (this.stroke) {\r\n                context.strokeText(\r\n                    this.content,\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    (this.y + camera.y) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Shadow rendering */\r\n            if (this.shadow) {\r\n                context.fillStyle = this.shadowColor;\r\n                context.fillText(\r\n                    this.content,\r\n                    (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                    (this.y + camera.y + this.shadowOffsetY) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Fill rendering */\r\n            context.fillStyle = this.color;\r\n            context.fillText(\r\n                this.content,\r\n                (this.x + camera.x) * tilesize * ratio,\r\n                (this.y + camera.y) * tilesize * ratio\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Text;","import { Sprite, Entity } from \"../entity\";\r\nimport { Text } from \"../text\";\r\n/**\r\n * Basic vfx class\r\n */\r\nexport class SpriteVfx extends Sprite {\r\n  source: Entity;\r\n  type = \"vfx\";\r\n  name = \"proto\";\r\n  removed = false;\r\n  randomPos = false;\r\n  randomAmount = 0.5;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx is attached\r\n   */\r\n  constructor(source: Entity) {\r\n    super(source.centerX, source.centerY);\r\n    this.source = source;\r\n  }\r\n  resolveCollisions() {}\r\n  renderShadow() {}\r\n  /** Moves this vfx coordinates in a random direction within a range defined by this.randomAmount */\r\n  randomizePos() {\r\n    this.x += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n    this.y += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n  }\r\n  /** Returns the vfx to its original state\r\n   *\r\n   * @param {Entity} source Defines the entity to which this vfx is related to\r\n   */\r\n  reset(source: Entity) {\r\n    this.source = source;\r\n    this.moveAtSource();\r\n\r\n    if (this.randomPos) {\r\n      this.randomizePos();\r\n    }\r\n    this.removed = false;\r\n    this.frame = 0;\r\n    this.frameCounter = 0;\r\n    this.additionalResetOperations();\r\n  }\r\n  /** Each vfx may have different reset options */\r\n  additionalResetOperations() {}\r\n  moveAtSource() {\r\n    this.x = this.source.centerX - this.w / 2;\r\n    this.y = this.source.centerY - this.h / 2;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n  onAnimationEnd() {\r\n    this.removed = true;\r\n  }\r\n}\r\n/** DmgVfxs have 4 random animations and 4 random rotations */\r\nexport class DmgVfx extends SpriteVfx {\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"DmgVfx\";\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.randomPos = true;\r\n    this.randomizePos();\r\n    this.setAnimation(\"boom\", [17, 17, 17, 17], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut\", [18, 18, 18, 18], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut_long\", [20, 20, 20, 20], [0, 1, 2, 3]);\r\n    this.animations[\"cut_long\"].w = 2;\r\n    this.additionalResetOperations();\r\n  }\r\n  additionalResetOperations() {\r\n    let animations = Object.entries(this.animations);\r\n    /** Assign a random animation */\r\n    this.animation = animations[(Math.random() * animations.length) | 0][0];\r\n    let rotations = [0, 90, 180, -90];\r\n    this.rot = rotations[(Math.random() * rotations.length) | 0];\r\n  }\r\n}\r\n/** Represents a single particle */\r\nclass Particle extends Sprite {\r\n  verticalSpeed = -0.03;\r\n  x: number;\r\n  y: number;\r\n  source: Entity;\r\n  lifeCycles: number;\r\n  remainingCycles: number;\r\n  constructor(source: Entity, particleDuration = 5) {\r\n    super(source.x, source.y);\r\n    this.setAnimation(\"idle\", [19, 19, 19, 19], [0, 1, 2, 3]);\r\n    this.source = source;\r\n    this.lifeCycles = particleDuration;\r\n    this.remainingCycles = this.lifeCycles;\r\n    this.x = source.x + source.w / 2 + Math.random() * 1.5 - 0.75 - this.w / 2;\r\n    this.y = source.y + source.h / 2 + Math.random() * 1.5 - 0.75 - this.h / 2;\r\n    this.x -= this.w / 2;\r\n    this.y -= this.h / 2;\r\n  }\r\n  get randomX() {\r\n    return (\r\n      this.source.x +\r\n      this.source.w / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.w / 2\r\n    );\r\n  }\r\n  get randomY() {\r\n    return (\r\n      this.source.y +\r\n      this.source.h / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.h / 2\r\n    );\r\n  }\r\n  reset(source: Entity, lifeCycles: number) {\r\n    this.source = source;\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n    this.removed = false;\r\n    this.remainingCycles = lifeCycles || this.lifeCycles;\r\n  }\r\n  onAnimationEnd() {\r\n    this.remainingCycles--;\r\n    if (this.remainingCycles <= 0) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.y += this.verticalSpeed * deltaTime;\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: 0; y: 0 }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n/** Holds multiple Particle objects, which on death respawns for a said amount of times */\r\nexport class ParticlesVfx extends SpriteVfx {\r\n  particlesDuration = 5;\r\n  /** The numbers of particles */\r\n  particlesAmount = 5;\r\n  particles:Particle[] = [];\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"ParticlesVfx\";\r\n    /** Amount of particles lifetime */\r\n    this.particlesDuration = 5;\r\n    /** The numbers of particles */\r\n    this.particlesAmount = 5;\r\n    this.particles = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    /** Creates the particles */\r\n    for (let i = 0; i < this.particlesAmount; i++) {\r\n      this.particles.push(new Particle(this.source, this.particlesDuration));\r\n    }\r\n  }\r\n  additionalResetOperations() {\r\n    for (let particle of this.particles) {\r\n      particle.reset(this.source, this.particlesDuration);\r\n    }\r\n  }\r\n  compute(deltaTime:number) {\r\n    let removedCount = 0;\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        removedCount++;\r\n        continue;\r\n      }\r\n      particle.compute(deltaTime);\r\n    }\r\n    if (removedCount === this.particles.length) {\r\n      this.removed = true;\r\n    }\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        continue;\r\n      }\r\n      particle.render(context, tilesize, ratio, camera);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Displays text in the form of a vfx\r\n */\r\nexport class TextVfx extends SpriteVfx {\r\n    name = \"TextVfx\";\r\n    text = new Text(0, 0);\r\n    progress = 0;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx attaches\r\n   */\r\n  constructor(source:Entity) {\r\n    super(source);\r\n    this.text.content = \"\";\r\n    // Red by default\r\n    this.text.color = \"#ad2f45\";\r\n    this.text.shadow = true;\r\n    this.text.fontSize = 10;\r\n  }\r\n  reset(source:Entity, content = \"\") {\r\n    this.removed = false;\r\n    this.progress = 0;\r\n    this.text.content = content;\r\n    this.source = source;\r\n  }\r\n  compute(deltaTime:number) {\r\n    this.progress += (Math.PI / 60) * deltaTime;\r\n    if (this.progress >= Math.PI) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.source.centerX + this.progress / 10;\r\n    this.y = this.source.centerY - Math.sin(this.progress);\r\n    this.text.x = this.x;\r\n    this.text.y = this.y;\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    this.text.render(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n","/** \r\n *  Acts as intermediate between the manager and the entities,\r\n *  the entities have a reference to this class OBJECT \r\n */\r\nimport * as Vfxs from \"./vfxs\";\r\nimport { Entity} from \"../entity\"\r\n\r\ntype VfxClass= keyof typeof Vfxs\r\n/** Singleton */\r\nclass VfxManager {\r\n    /** Instead of being deleted, removed Vfxs gets moved here to be reused later, gets populated by the gameDirector */\r\n    recyclePool:Vfxs.SpriteVfx[] = [];\r\n    environment:Vfxs.SpriteVfx[] = [];\r\n    /** Contains vfx classes declarations */\r\n    vfxClasses = {...Vfxs};\r\n    constructor() {\r\n    }\r\n    setEnvironment(environment:Vfxs.SpriteVfx[]) {\r\n        this.environment = environment;\r\n    }\r\n    /** Returns a recycled vfx or FALSE */\r\n    getRecycledVfx(vfxName:string, source:Entity) {\r\n        for (let i = this.recyclePool.length - 1; i >= 0; i--) {\r\n            if (this.recyclePool[i].name === vfxName) {\r\n                /** Found a matching Vfx */\r\n                this.recyclePool[i].reset(source);\r\n                return this.recyclePool.splice(i, 1)[0];\r\n            }\r\n        }\r\n        /** Matching Vfx was not found */\r\n        return false;\r\n    }\r\n    /** Returns a Vfx of the requested type and pushes it into the current level entities, this function gets imported and called by entities */\r\n    create = (vfxName:VfxClass, source:Entity) => {\r\n        let vfx = this.getRecycledVfx(vfxName, source) || new this.vfxClasses[vfxName](source);\r\n        this.environment.push(vfx);\r\n        return vfx;\r\n    }\r\n}\r\nconst vfxManager = new VfxManager();\r\nexport { vfxManager, Vfxs };","\r\nclass SoundManager {\r\n    playbackRate:number = 1;\r\n    volume:number = 1;\r\n    sounds:any = {\r\n        playRandom: (soundsArray:string[]) => {\r\n            this.sounds[soundsArray[(Math.random() * soundsArray.length | 0)]].play()\r\n        }\r\n    };\r\n    soundsBaseUrl = 'assets/soundFxs/';\r\n    constructor() {\r\n    }\r\n    /** takes an argument the sound file name (without extension) from the relative path in soundsBaseUrl */\r\n    createSound = (relativeUrl:string, loop = false, volume = 1, playbackRate = 1) => {\r\n        let fullUrl = `${this.soundsBaseUrl}${relativeUrl}.mp3`;\r\n        let splittedUrl = relativeUrl.split('/');\r\n        /** Extrapolates the name from the url */\r\n        let name = splittedUrl[splittedUrl.length - 1];\r\n        this.sounds[name] = new CustomAudio(fullUrl, loop, volume, playbackRate);\r\n    }\r\n}\r\nclass CustomAudio {\r\n    audio:HTMLAudioElement;\r\n    loop:boolean = false;\r\n    volume:number = 1;\r\n    playbackRate:number = 1;\r\n    calledPlayPromise = false;\r\n    constructor(url:string, loop = false, volume = 1, playbackRate = 1) {\r\n        this.audio = new Audio(url);\r\n        this.loop = loop;\r\n        this.volume = volume;\r\n        this.playbackRate = playbackRate;\r\n    }\r\n    play = (customVolume = 1, customPlaybackRate = 1) => {\r\n        if (this.calledPlayPromise) {\r\n            /** A play promise has been already called, do nothing */\r\n            return false;\r\n        }\r\n        /** Sets the audio volume */\r\n        this.audio.volume = this.volume * customVolume;\r\n        /** Sets the audio volume */\r\n        this.audio.loop = this.loop;\r\n        /** Sets the audio speed */\r\n        this.audio.playbackRate = this.playbackRate * customPlaybackRate;\r\n\r\n        if (this.audio.paused) {\r\n            /** If the audio is paused, just play it */\r\n            if (!this.audio.loop) {\r\n                /** If it isn't a loop reset the time */\r\n                this.audio.currentTime = 0;\r\n            }\r\n        } else {\r\n            /** If the audio is already running */\r\n            if (this.audio.loop) {\r\n                /** If it is a loop, do nothing */\r\n                return;\r\n            }\r\n            this.audio.pause();\r\n            this.audio.currentTime = 0;\r\n        }\r\n        /** Call the play promise */\r\n        let promise = this.audio.play();\r\n        this.calledPlayPromise = true;\r\n        if (promise !== undefined) {\r\n            promise.catch((e)=>{\r\n                /** Error response */\r\n                console.warn(\"there was an audio error!\", e)\r\n                this.calledPlayPromise = false;\r\n            }).then(() => {\r\n                this.calledPlayPromise = false;\r\n            })\r\n        }\r\n    }\r\n}\r\nconst soundManager = new SoundManager();\r\nexport { soundManager };\r\nexport default soundManager;\r\n/** Player sounds */\r\n// eg. sound creation\r\n// soundManager.createSound('sword-attack');\r\n// soundManager.createSound('sword-hit');\r\n// soundManager.createSound('pick-up');\r\n// soundManager.createSound('damaged');","import { checkCollisions } from \"../physics/checkCollisions\";\r\nimport * as Physics from \"../physics\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { vfxManager } from \"../vfxManager\";\r\nimport { soundManager } from \"../soundManager\";\r\nexport class Entity extends Sprite {\r\n  xVel: number = 0;\r\n  yVel: number = 0;\r\n  // External velocities (velocities acquired from external sources, like a strong hit)\r\n  xVelExt: number = 0;\r\n  yVelExt: number = 0;\r\n  speed: number = 0.1;\r\n  friction: number = 0;\r\n  type: string = \"entity\";\r\n  state: string = \"idle\";\r\n  sounds: { playRandom: (soundsArray: any[]) => void } = soundManager.sounds;\r\n  stats: Stats = new Stats();\r\n  /** Defines whether this entity has low rendering order priority */\r\n  background: boolean = false;\r\n  /** Defines whether this entity is attached to the ground*/\r\n  grounded: boolean = false;\r\n  damaged: number = 0;\r\n  shadow: boolean = false;\r\n  solid: boolean = true;\r\n\r\n  /** Ignores computing and rendering of this entity */ \r\n  removed: boolean = false;\r\n\r\n  /** Cannot be moved by other entities */ \r\n  immovable: boolean = false;\r\n\r\n  /** The id of the room where this entity is stored */\r\n  // currentRoom: number = -1;\r\n\r\n  drops: any[] = [];\r\n  offsetX: number = 0;\r\n  offsetY: number = 0;\r\n  Physics: typeof Physics = Physics;\r\n  hasHpBar: boolean = false;\r\n  hasDisplayName: boolean = false;\r\n  /** Object containing the collisions amounts */\r\n  col: {\r\n    L: number; // Left side\r\n    R: number; // Right side\r\n    T: number; // Top side\r\n    B: number;\r\n  } = { L: 0, R: 0, T: 0, B: 0 };\r\n  /** Object representing the hitbox used for collision computations */\r\n  hitbox: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n  /** Represents the offsets of the hitbox, which may change based on current animation/state */\r\n  hitboxOffset: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n  createVfx: (vfxName: any, source: any) => any = vfxManager.create;\r\n  checkCollisions: (\r\n    obj: any,\r\n    entities: any,\r\n    deltaTime?: number\r\n  ) => false | undefined = checkCollisions;\r\n  constructor(x: number = 0, y: number = 0) {\r\n    super(x, y);\r\n\r\n    this.updateHitbox();\r\n  }\r\n  /** Returns the stats.atk value */\r\n  get atk() {\r\n    return this.stats.atk;\r\n  }\r\n\r\n  /** Returns the stats.hp value */\r\n  get hp() {\r\n    return this.stats.hp;\r\n  }\r\n\r\n  /** Returns the stats.maxHp value */\r\n  set hp(value) {\r\n    this.stats.hp = value;\r\n  }\r\n\r\n  get centerX() {\r\n    return this.x + this.w / 2;\r\n  }\r\n  get centerY() {\r\n    return this.y + this.h / 2;\r\n  }\r\n  get centerPoint() {\r\n    return {x:this.centerX,y:this.centerY}\r\n  }\r\n\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties */\r\n  updateHitbox() {\r\n    this.hitbox.x = this.x + this.hitboxOffset.x;\r\n    this.hitbox.y = this.y + this.hitboxOffset.y;\r\n    this.hitbox.w = this.w + this.hitboxOffset.w;\r\n    this.hitbox.h = this.h + this.hitboxOffset.h;\r\n  }\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties\r\n   * @param {Entity} collider A reference to the entity collided to this one\r\n   */\r\n  onCollision(collider: Entity) {\r\n    // Collision events gets defined by children classes\r\n  }\r\n\r\n  /** Adjusts this entity's velocities according to collisions */\r\n  resolveCollisions() {\r\n    // Checks wether the entity is traveling against eventual colliding sides\r\n    if (this.col.L && this.xVel + this.xVelExt < 0) {\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.R && this.xVel + this.xVelExt > 0) {\r\n\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.T && this.yVel + this.yVelExt < 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    if (this.col.B && this.yVel + this.yVelExt > 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    // Resets the collision properties\r\n    this.col.L = 0;\r\n    this.col.R = 0;\r\n    this.col.T = 0;\r\n    this.col.B = 0;\r\n  }\r\n  /**\r\n   * Similar to the *onCollision* method, gets called whenever this entity collides with a damaging Entity,\r\n   * which could be a spell, an attack, or an obstacle\r\n   * @param {Entity} source The source of the attack\r\n   */\r\n  onHit(source: Entity) {\r\n    this.xVelExt = source.xVel;\r\n    this.yVelExt = source.yVel;\r\n  }\r\n  /**\r\n   * Updates the external velocities according to the friction\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateVelocities(deltaTime: number) {\r\n    if (this.xVelExt !== 0) {\r\n      this.xVelExt *= Math.pow(this.friction, deltaTime);\r\n      if (Math.abs(this.xVelExt) < 0.001) {\r\n        this.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.yVelExt !== 0) {\r\n      this.yVelExt *= Math.pow(this.friction, deltaTime);\r\n      if (Math.abs(this.yVelExt) < 0.001) {\r\n        this.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n  /** Moves this entity according to its velocities\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updatePosition(deltaTime: number) {\r\n    this.resolveCollisions();\r\n    this.x += (this.xVel + this.xVelExt) * deltaTime;\r\n    this.y += (this.yVel + this.yVelExt) * deltaTime;\r\n  }\r\n\r\n  /**\r\n   * Handles the computational aspects of the entity\r\n   * @param {Number} deltaTime Time multiplier\r\n   * @param {Entity[]} deltaTime Time multiplier\r\n   */\r\n  compute(deltaTime: number, environment:Entity[]=[]) {}\r\n\r\n  /**\r\n   * Handles the rendering of this entity and eventual renderable children (e.g. Equipment, Shadow, etc..)\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    //this.renderSprite(context, tilesize, ratio, camera);\r\n    this.renderSprite(context, tilesize, ratio, camera,pivot);\r\n  }\r\n\r\n  /** Used for debugging, displays the entity's hitbox\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    context.strokeStyle = \"red\";\r\n    context.beginPath();\r\n    context.strokeRect(\r\n      (this.hitbox.x + camera.x) * tilesize * ratio,\r\n      (this.hitbox.y + camera.y) * tilesize * ratio,\r\n      this.hitbox.w * tilesize * ratio,\r\n      this.hitbox.h * tilesize * ratio\r\n    );\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n\r\n  /** Casts an elliptical shadow just below this entity\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderShadow(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    if (!this.shadow || this.removed) {\r\n      return;\r\n    }\r\n    // Provisional shadow rendering\r\n    context.fillStyle = \"#14182e\";\r\n    context.globalAlpha = 0.6;\r\n    context.strokeStyle = \"#ffffff\";\r\n    context.beginPath();\r\n    context.ellipse(\r\n      (this.x + camera.x + this.w / 2) * tilesize * ratio,\r\n      (this.y + this.h + camera.y) * tilesize * ratio,\r\n      (this.w / 2) * tilesize * ratio,\r\n      (this.w / 4) * tilesize * ratio,\r\n      0,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n    context.closePath();\r\n    context.fill();\r\n    context.globalAlpha = 1;\r\n  }\r\n}\r\n\r\n/** Class representing the basic stats of an entity */\r\nclass Stats {\r\n  lv: number;\r\n  maxHp: number;\r\n  hp: any;\r\n  maxExp: number;\r\n  exp: number;\r\n  maxMana: number;\r\n  mana: any;\r\n  atk: number;\r\n  atkSpeed: number;\r\n  expValue: number;\r\n  constructor() {\r\n    /* The current level, level augments every other stat */\r\n    this.lv = 1;\r\n    /* Maximum hit points */\r\n    this.maxHp = 10;\r\n    /* Current hit points, hp <= 0 will result in an entity's death  */\r\n    this.hp = this.maxHp;\r\n    /* Threshold experience */\r\n    this.maxExp = 10;\r\n    /* Current experience, reaching the threshold will result in a level up */\r\n    this.exp = 0;\r\n    /* Maximum mana */\r\n    this.maxMana = 15;\r\n    /* Current mana, the mana is a currency used to cast spells/perform special actions */\r\n    this.mana = this.maxMana;\r\n\r\n    /* The attack stat, represents how many hit points will get subtracted to other entities when getting attacked by this one */\r\n    this.atk = 1;\r\n    /* Multiplier of the rate at which this entity attacks, the higher it is, the lower the intervals */\r\n    this.atkSpeed = 1;\r\n    /* The experience value that this entity will transfer to the killer entity */\r\n    this.expValue = 1;\r\n  }\r\n}\r\nexport default Entity;\r\n","/**\r\n * The Controls class initializes the input listeners and tracks changes.\r\n */\r\nexport class Controls {\r\n  up: boolean;\r\n  down: boolean;\r\n  left: boolean;\r\n  right: boolean;\r\n  upR: boolean;\r\n  downR: boolean;\r\n  leftR: boolean;\r\n  rightR: boolean;\r\n  spacebar: boolean;\r\n  e: boolean;\r\n  lClickDown: boolean;\r\n  mClickDown: boolean;\r\n  rClickDown: boolean;\r\n  test: string;\r\n  currentPos: number;\r\n  lastDir: number;\r\n  mouseX: number;\r\n  mouseY: number;\r\n  constructor() {\r\n    this.up = false;\r\n    this.down = false;\r\n    this.left = false;\r\n    this.right = false;\r\n    this.upR = false;\r\n    this.downR = false;\r\n    this.leftR = false;\r\n    this.rightR = false;\r\n    this.spacebar = false;\r\n    this.e = false;\r\n    this.lClickDown = false;\r\n    this.mClickDown = false;\r\n    this.rClickDown = false;\r\n    this.test = \"test\";\r\n    this.currentPos = 0;\r\n    this.lastDir = 0;\r\n    this.mouseX = 0;\r\n    this.mouseY = 0;\r\n    this.initListeners();\r\n  }\r\n  initListeners() {\r\n    document.addEventListener(\"mousedown\", handleMouseEvt);\r\n    document.addEventListener(\"mouseup\", handleMouseEvt);\r\n    document.addEventListener(\"touchstart\", handleTouchEvt);\r\n    document.addEventListener(\"touchend\", handleTouchEvt);\r\n    document.addEventListener(\"keydown\", handleKeyboardEvt);\r\n    document.addEventListener(\"keyup\", handleKeyboardEvt);\r\n    const that = this;\r\n    function handleKeyboardEvt(evt: KeyboardEvent) {\r\n      const isDown = evt.type === \"keydown\";\r\n      switch (evt.key) {\r\n        case \"w\": //up\r\n          that.up = isDown;\r\n          break;\r\n        case \"s\": //down\r\n          that.down = isDown;\r\n          break;\r\n        case \"a\": //left\r\n          that.left = isDown;\r\n          break;\r\n        case \"d\": //right\r\n          that.right = isDown;\r\n          break;\r\n        case \"ArrowUp\": //down\r\n          that.upR = isDown;\r\n          break;\r\n        case \"ArrowDown\": //down\r\n          that.downR = isDown;\r\n          break;\r\n        case \"ArrowLeft\": //left\r\n          that.leftR = isDown;\r\n          break;\r\n        case \"ArrowRight\": //right\r\n          that.rightR = isDown;\r\n          break;\r\n        case \" \":\r\n          that.spacebar = isDown;\r\n          break;\r\n        case \"e\": //e\r\n          that.e = isDown;\r\n          break;\r\n        case \"Escape\": // Escape\r\n          break;\r\n        case \"y\": //y\r\n          //toggleFullScreen();\r\n          break;\r\n        //debug\r\n        default:\r\n          console.log(`Pressed \"${evt.key}\" key`);\r\n          break;\r\n      }\r\n    }\r\n    function handleTouchEvt(evt: TouchEvent) {\r\n      console.log(evt);\r\n      const isDown = evt.type === \"touchstart\";\r\n      that.lClickDown = isDown;\r\n      if (!isDown) {\r\n        return;\r\n      }\r\n      that.mouseX = evt.touches[0].clientX;\r\n      that.mouseY = evt.touches[0].clientY;\r\n    }\r\n    function handleMouseEvt(evt: MouseEvent) {\r\n      const isDown = evt.type === \"mousedown\";\r\n      switch (evt.button) {\r\n        case 0:\r\n          that.lClickDown = isDown;\r\n          break;\r\n        case 1:\r\n          that.mClickDown = isDown;\r\n          break;\r\n        case 2:\r\n          that.rClickDown = isDown;\r\n          break;\r\n      }\r\n      that.mouseX = evt.clientX;\r\n      that.mouseY = evt.clientY;\r\n    }\r\n  }\r\n}\r\nexport default Controls;\r\n","export type MetaLike = {\r\n  tilesize: number;\r\n  ratio: number;\r\n};\r\nexport type CameraLike = {\r\n  x: number;\r\n  y: number;\r\n  rot: number;\r\n};\r\nexport class Mouse {\r\n  x = 0;\r\n  y = 0;\r\n  gui = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n  guiRef = {\r\n    ratio: 1,\r\n  };\r\n  canvas: HTMLCanvasElement | undefined;\r\n  meta: MetaLike;\r\n  camera: CameraLike;\r\n  /** Absolute position of the mouse (doesn't take to account the camera offsets) */\r\n  absolute = {\r\n    x: 0,\r\n    y: 0,\r\n    /** Defines if the mouse is hovering an user interface element */\r\n    hoverUI: false,\r\n    /** Defines if the mouse is currently dragging an user interface element */\r\n    dragging: false,\r\n    /** A reference to whatever the mouse is currently dragging */\r\n    slot: {},\r\n  };\r\n  lastMouseX = 0;\r\n  lastMouseY = 0;\r\n  /**\r\n   * Creates a Mouse object\r\n   * @param {HTMLCanvasElement} canvas The canvas HTML element\r\n   * @param {Meta} meta  Meta informations\r\n   * @param {Camera | any} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  constructor(\r\n    canvas: HTMLCanvasElement | undefined,\r\n    meta: MetaLike,\r\n    camera: CameraLike\r\n  ) {\r\n    this.canvas = canvas;\r\n    this.meta = meta;\r\n    this.camera = camera;\r\n    document.addEventListener(\"mousemove\", this.updatePos);\r\n    document.addEventListener(\"touchstart\", this.updatePosMobile);\r\n  }\r\n  setCanvas = (canvas: HTMLCanvasElement) => {\r\n    this.canvas = canvas;\r\n  };\r\n  /**\r\n   * Translates the mouse event coordinates into canvas coordinates, relatively to the tilesize/ratio multipliers and the camera offsets\r\n   * @param {*} evt Event object containing information about the mouse pointer position within the browser\r\n   */\r\n  updatePos = (\r\n    evt: { clientX: number; clientY: number } = {\r\n      clientX: this.lastMouseX,\r\n      clientY: this.lastMouseY,\r\n    }\r\n  ) => {\r\n    if (!this.canvas) {\r\n      // Needs a canvas to be specified\r\n      return;\r\n    }\r\n    this.lastMouseX = evt.clientX;\r\n    this.lastMouseY = evt.clientY;\r\n    this.absolute.x =\r\n      (evt.clientX - this.canvas.offsetLeft) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n    this.absolute.y =\r\n      (evt.clientY - this.canvas.offsetTop) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n\r\n    this.x = this.absolute.x - this.camera.x;\r\n    this.y = this.absolute.y - this.camera.y;\r\n\r\n    this.gui.x = (this.absolute.x * this.meta.ratio) / this.guiRef.ratio;\r\n    this.gui.y = (this.absolute.y * this.meta.ratio) / this.guiRef.ratio;\r\n  };\r\n  /**\r\n   * Translates the mouse event coordinates into canvas coordinates, relatively to the tilesize/ratio multipliers and the camera offsets\r\n   * @param {*} evt Event object containing information about the mouse pointer position within the browser\r\n   */\r\n  updatePosMobile = (evt: TouchEvent) => {\r\n    if (!this.canvas) {\r\n      // Needs a canvas to be specified\r\n      return;\r\n    }\r\n    if (evt.touches.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.lastMouseX = evt.touches[0].clientX;\r\n    this.lastMouseY = evt.touches[0].clientY;\r\n    this.absolute.x =\r\n      (evt.touches[0].clientX - this.canvas.offsetLeft) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n    this.absolute.y =\r\n      (evt.touches[0].clientY - this.canvas.offsetTop) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n\r\n    this.x = this.absolute.x - this.camera.x;\r\n    this.y = this.absolute.y - this.camera.y;\r\n\r\n    this.gui.x = (this.absolute.x * this.meta.ratio) / this.guiRef.ratio;\r\n    this.gui.y = (this.absolute.y * this.meta.ratio) / this.guiRef.ratio;\r\n  };\r\n}\r\nexport default Mouse;\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Meta from \"modules/meta\";\r\nimport { CameraLike } from \"modules/mouse\";\r\n\r\nclass Debug {\r\n  div: HTMLDivElement;\r\n  activateButton: HTMLButtonElement;\r\n  window: Window | null;\r\n  active: boolean;\r\n  times: number[];\r\n  drawLater: (ColoredPoint | ColoredRect | ColoredLine)[];\r\n  constructor() {\r\n    this.div = this.createDiv();\r\n    this.active = false;\r\n    this.times = [];\r\n    this.drawLater = [];\r\n    this.window = null;\r\n    this.activateButton = this.createActivateButton();\r\n    // this.activate();\r\n  }\r\n  drawRect = (rect: Rect, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"rect\",\r\n      x: rect.x,\r\n      y: rect.y,\r\n      w: rect.w,\r\n      h: rect.h,\r\n    });\r\n  };\r\n  drawPoint = (point: Point, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"point\",\r\n      x: point.x - 0.1,\r\n      y: point.y - 0.1,\r\n      w: 0.2,\r\n      h: 0.2,\r\n    });\r\n  };\r\n  drawLine = (pointA: Point, pointB: Point, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"line\",\r\n      x1: pointA.x,\r\n      y1: pointA.y,\r\n      x2: pointB.x,\r\n      y2: pointB.y,\r\n    });\r\n  };\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: CameraLike,\r\n  ) => {\r\n    if (!this.active) return;\r\n    for (let draw of this.drawLater) {\r\n      context.beginPath();\r\n      context.strokeStyle = draw.color;\r\n      switch (draw.type) {\r\n        case \"point\":\r\n        case \"rect\":\r\n          context.save();\r\n          context.translate(\r\n            (camera.x+draw.x+draw.w/2) * tilesize * ratio,\r\n            (camera.y+draw.y+draw.h/2) * tilesize * ratio\r\n          );\r\n          context.rotate(camera.rot);\r\n          context.rect(\r\n            (-draw.w/2) * tilesize * ratio,\r\n            (-draw.h/2) * tilesize * ratio,\r\n            draw.w * tilesize * ratio,\r\n            draw.h * tilesize * ratio\r\n          );\r\n          context.closePath();\r\n          context.stroke();\r\n          context.restore();\r\n          break;\r\n        case \"line\":\r\n          context.save();\r\n          context.translate(\r\n            (camera.x+draw.x1) * tilesize * ratio,\r\n            (camera.y+draw.y1) * tilesize * ratio\r\n          );\r\n          context.rotate(camera.rot);\r\n          context.moveTo(\r\n            (0) * tilesize * ratio,\r\n            (0) * tilesize * ratio\r\n          );\r\n          context.lineTo(\r\n            (draw.x2 -draw.x1+0.5) * tilesize * ratio,\r\n            (draw.y2 -draw.y1+0.5) * tilesize * ratio\r\n          );\r\n          context.closePath();\r\n          context.stroke();\r\n          context.restore();\r\n          break;\r\n      }\r\n    }\r\n    this.drawLater.length = 0;\r\n  };\r\n  printTime = () => {\r\n    if (!this.active) return;\r\n    this.div.innerHTML = `Function time: ${this.averageTime().toFixed(4)}ms`;\r\n    this.times.length = 0;\r\n  };\r\n  /** Used to view the content of an object in the debugger window */\r\n  inspect = (obj: object) => {\r\n    if (!this.active) return;\r\n    this.div.innerHTML = `<table style=\"color:white;\">\r\n        ${Object.entries(obj).reduce<string>((acc, [name, value]) => {\r\n          if ([\"object\", \"function\"].includes(typeof value)) return acc;\r\n          return acc + `<tr><td>${name}</td><td>${value}</td></tr>`;\r\n        }, \"\")}\r\n      </table>\r\n      `;\r\n  };\r\n  // Measures the time a function takes to complete(ms)\r\n  measureTime = (callback: Function, ...args: any[]) => {\r\n    if (!this.active) return;\r\n    if (!this.active) {\r\n      this.activate();\r\n    }\r\n    let start = performance.now();\r\n    callback(...args);\r\n    this.times.push(performance.now() - start);\r\n  };\r\n  private activate = () => {\r\n    this.createWindow(600, 600);\r\n    this.active = true;\r\n    this.activateButton.onclick = this.deactivate;\r\n    this.activateButton.innerText = \"DEACTIVATE DEBUG\";\r\n  };\r\n  private deactivate = () => {\r\n    this.window = null;\r\n    this.active = false;\r\n    this.activateButton.onclick = this.activate;\r\n    this.activateButton.innerText = \"ACTIVATE DEBUG\";\r\n  };\r\n  private averageTime = () => {\r\n    let sum = 0;\r\n    for (let time of this.times) {\r\n      sum += time;\r\n    }\r\n    return sum / this.times.length;\r\n  };\r\n  /** Creates a window attached to this Debug instance */\r\n  private createWindow = (width: number, height: number) => {\r\n    this.window = window.open(\r\n      \"\",\r\n      \"targetWindow\",\r\n      `noopener=false,noreferrer=false,popup,width=${width},height=${height}`\r\n    );\r\n    if (this.window) {\r\n      this.active = true;\r\n      this.window.document.body.style.margin = \"0\";\r\n      this.window.document.body.style.padding = \"0\";\r\n      this.window.window.document.body.style.boxSizing = \"border-box\";\r\n      this.window.window.document.body.style.backgroundColor = \"black\";\r\n      this.window.window.document.body.style.color = \"white\";\r\n      this.window.window.document.body.style.padding = \"10px\";\r\n      this.window.document.title = \"debugger\";\r\n      this.window.document.body.innerHTML = \"\";\r\n      this.window.document.body.appendChild(this.div);\r\n      this.window.onbeforeunload = this.deactivate;\r\n      this.window.addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"F2\") {\r\n          this.window?.close();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  /** Creates a div which will eventually display data */\r\n  private createDiv = () => {\r\n    let div = document.createElement(\"div\");\r\n    div.style.position = \"absolute\";\r\n    div.style.inset = \"0\";\r\n    div.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\r\n    return div;\r\n  };\r\n  /** Creates a button used to activate/deactivate debug mode */\r\n  private createActivateButton = () => {\r\n    let button = document.createElement(\"button\");\r\n    button.innerText = \"ACTIVATE DEBUG\";\r\n    button.style.position = \"absolute\";\r\n    button.style.top = \"20px\";\r\n    button.style.right = \"20px\";\r\n    button.onclick = () => this.activate();\r\n    window.document.body.appendChild(button);\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"F2\") {\r\n        const clickEvent = new MouseEvent(\"click\", {\r\n          view: window,\r\n          bubbles: true,\r\n          cancelable: true,\r\n        });\r\n        button.dispatchEvent(clickEvent);\r\n      }\r\n    });\r\n    return button;\r\n  };\r\n}\r\nexport const debug = new Debug();\r\nexport default debug;\r\n","import { Entity } from \"../../entity\";\r\nimport { Controls } from \"../../controls\";\r\nimport { Mouse, MetaLike, CameraLike } from \"../../mouse\";\r\nimport debug from \"modules/debug\";\r\nimport Camera from \"modules/camera\";\r\nexport class Player extends Entity {\r\n  controls: Controls;\r\n  mouse: Mouse;\r\n  camera: Camera;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    canvas: HTMLCanvasElement,\r\n    meta: MetaLike,\r\n    camera: Camera\r\n  ) {\r\n    super(x, y);\r\n    this.mouse = new Mouse(canvas, meta, camera);\r\n    this.controls = new Controls();\r\n    this.camera = camera;\r\n    this.w = 1;\r\n    this.h = 1;\r\n  }\r\n  resolveInputs = () => {\r\n    // Moves\r\n    if (this.controls.up && !this.controls.down) {\r\n      this.xVel = Math.cos(-this.rot+Math.PI/2) * -this.speed;\r\n      this.yVel = Math.sin(-this.rot+Math.PI/2) * -this.speed;\r\n    }\r\n    if (this.controls.down && !this.controls.up) {\r\n      this.xVel = Math.cos(-this.rot+Math.PI/2) * this.speed;\r\n      this.yVel = Math.sin(-this.rot+Math.PI/2) * this.speed;\r\n    }\r\n    if (!this.controls.up&&!this.controls.down) {\r\n      this.xVel = 0;\r\n      this.yVel = 0;\r\n    }\r\n  };\r\n  compute = (deltaTime: number) => {\r\n    this.mouse.updatePos();\r\n    this.rot =\r\n      this.Physics.getAngle({\r\n        x1: this.x + this.w / 2,\r\n        y1: this.y + this.h / 2,\r\n        x2: this.mouse.x,\r\n        y2: this.mouse.y,\r\n      }) +\r\n      Math.PI * 2;\r\n    this.resolveInputs();\r\n    this.updateVelocities(deltaTime);\r\n    this.updatePosition(deltaTime);\r\n    this.updateHitbox();\r\n    debug.inspect(this);\r\n    debug.drawPoint(this.centerPoint);\r\n    debug.drawPoint(this.mouse, \"green\");\r\n  };\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera?: {\r\n      x: number;\r\n      y: number;\r\n    },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) => {\r\n    const rot = this.rot;\r\n    this.rot = 0;\r\n    this.renderSquare(context, tilesize, ratio, camera, pivot);\r\n    this.rot = rot;\r\n    context.fillStyle = \"red\";\r\n    context.fillStyle = \"black\";\r\n  };\r\n}\r\nexport default Player;\r\n","import Entity from \"modules/entity\";\r\nimport { Meta } from \"modules/meta\";\r\nexport class Camera {\r\n  focus: (Rect & { rot: number }) | Entity;\r\n  lockedAngles = false;\r\n  zoom = false;\r\n  x: number;\r\n  y: number;\r\n  rot: number = 0;\r\n  shake = 0;\r\n  constructor(focus = { x: 0, y: 0, w: 0, h: 0, rot: 0 }) {\r\n    this.focus = focus;\r\n    this.x = focus.x;\r\n    this.y = focus.y;\r\n  }\r\n  changeFocus(actor: Rect & { rot: number }, smoothly = false) {\r\n    this.focus = actor;\r\n    if (!smoothly) {\r\n      this.x = -this.focus.x;\r\n      this.y = -this.focus.y;\r\n    }\r\n  }\r\n  /**\r\n   * Updates the camera position\r\n   *\r\n   * @param {MetaLike} meta\r\n   * @param {Object} boundingSq A square defining the map boundaries\r\n   */\r\n  compute(\r\n    meta: Meta,\r\n    boundingSq: Rect = {\r\n      x: -Infinity,\r\n      y: +Infinity,\r\n      w: Infinity,\r\n      h: Infinity,\r\n    }\r\n  ) {\r\n    this.rot = this.focus.rot;\r\n    let boundingBox = boundingSq;\r\n    if (boundingBox && boundingBox.w < meta.tilesWidth + 1) {\r\n      boundingBox.x -= (meta.tilesWidth + 1 - boundingBox.w) / 2;\r\n      boundingBox.w = meta.tilesWidth + 1;\r\n    }\r\n    if (boundingBox && boundingBox.h < meta.tilesHeight + 1) {\r\n      boundingBox.y -= (meta.tilesHeight + 1 - boundingBox.h) / 2;\r\n      boundingBox.h = meta.tilesHeight + 1;\r\n    }\r\n    // Compute the ratio\r\n    if (this.zoom) {\r\n      meta.changeRatio(\r\n        meta.ratio + ((meta.baseRatio - meta.ratio) / 22) * meta.deltaTime\r\n      );\r\n    } else {\r\n      /*\r\n      if (meta.ratio !== meta.baseRatio) {\r\n        meta.ratio = meta.baseRatio;\r\n        meta.tilesWidth = meta.baseTilesWidth;\r\n        meta.tilesHeight = meta.baseTilesHeight;\r\n      }\r\n      */\r\n    }\r\n    // Updates meta pos\r\n\r\n    /** Target new x position */\r\n    let xx = 0;\r\n    /** Target new y position */\r\n    let yy = 0;\r\n    if (this.focus) {\r\n      xx = -(this.focus.x + this.focus.w / 2 - meta.tilesWidth / 2);\r\n      yy = -(this.focus.y + this.focus.h / 2 - meta.tilesHeight / 2);\r\n      this.x += ((xx - this.x) / 15) * meta.deltaTime;\r\n      this.y += ((yy - this.y) / 15) * meta.deltaTime;\r\n    }\r\n    if (this.lockedAngles && boundingBox) {\r\n      // left boundary\r\n      let xChanged = false;\r\n      let yChanged = false;\r\n      if (-this.x < boundingBox.x) {\r\n        xx = -boundingBox.x;\r\n        xChanged = true;\r\n      }\r\n      // top boundary\r\n\r\n      if (-this.y < boundingBox.y) {\r\n        yy = -boundingBox.y;\r\n        yChanged = true;\r\n      }\r\n\r\n      // Right boundary\r\n      if (-this.x > boundingBox.x + boundingBox.w - meta.tilesWidth) {\r\n        xx = -(boundingBox.x + boundingBox.w - meta.tilesWidth);\r\n        xChanged = true;\r\n      }\r\n      // Down boundary\r\n      if (-this.y > boundingBox.y + boundingBox.h - meta.tilesHeight) {\r\n        yy = -(boundingBox.y + boundingBox.h - meta.tilesHeight);\r\n        yChanged = true;\r\n      }\r\n      /* Describe what does this do\r\n      if (xChanged) {\r\n        this.x += ((xx - this.x) / 6) * meta.deltaTime;\r\n      }\r\n      if (yChanged) {\r\n        this.y += ((yy - this.y) / 6) * meta.deltaTime;\r\n      }\r\n      */\r\n    }\r\n\r\n    if (this.shake > 0) {\r\n      this.x += Math.random() / 2 - 0.25;\r\n      this.y += Math.random() / 2 - 0.25;\r\n      this.shake -= meta.deltaTime;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Camera;\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Creates the canvas element and exports it\r\n\r\nexport class GameCanvas extends HTMLCanvasElement {\r\n    context: CanvasRenderingContext2D;\r\n    constructor(width: number = 800, height: number = 600) {\r\n      super();\r\n      this.width = width;\r\n      this.height = height;\r\n      this.context = this.getContext(\"2d\")!;\r\n      this.style.outline=\"22px inset black\"\r\n      this.initialize();\r\n    }\r\n    /** Moves the canvas to the center by giving it an offset to the top/left sides */\r\n    center = () => {\r\n      this.style.position = \"absolute\";\r\n      this.style.left = (window.innerWidth - this.width) / 2 + \"px\";\r\n      this.style.top = (window.innerHeight - this.height) / 2 + \"px\";\r\n    };\r\n    clear = () => {\r\n      this.context.clearRect(0, 0, this.width, this.height);\r\n    };\r\n    initialize = () => {\r\n      /* Calls the centerCanvas function every time the window size changes */\r\n      window.addEventListener(\"resize\", () => this.center());\r\n      this.center();\r\n      document.body.appendChild(this);\r\n      // Disables anti aliasing\r\n      this.context.imageSmoothingEnabled = false;\r\n    };\r\n    /** Right clicks menu are prevented from appearing on the canvas */\r\n    oncontextmenu = (event: MouseEvent) => {\r\n      event.preventDefault();\r\n    };\r\n  }\r\n\r\n  // Mandatory define\r\n  customElements.define('game-canvas', GameCanvas, {extends: 'canvas'});\r\n\r\n  export default GameCanvas;\r\n  ","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import Entity from \"modules/entity/Entity\";\r\nimport { Sprite } from \"modules/entity/Sprite\";\r\n\r\nexport class SpriteStack extends Sprite {\r\n  offset: number = 0;\r\n  constructor(x: number, y: number, offset: number = 0) {\r\n    super(x, y);\r\n    this.offset = offset;\r\n  }\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number; rot: number } = { x: 0, y: 0, rot: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) => {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      //console.log('rendering a removed entity!!!')\r\n    }\r\n    /** Rotated Rendering */\r\n    context.save();\r\n    context.translate(\r\n      ((pivot.x+this.x+this.w/2+camera.x) *\r\n        tilesize *\r\n        ratio) |\r\n        0,\r\n      ((pivot.y+this.y+this.h/2+camera.y ) *\r\n        tilesize *\r\n        ratio) |\r\n        0\r\n    );\r\n    context.rotate(camera.rot);\r\n    context.drawImage(\r\n      this.sheet, // source of the sprite\r\n      this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n        tilesize, // x pos of the sprite\r\n      this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n        tilesize, // y pos of the sprite\r\n      this.animations[this.animation].w * tilesize, // width of the sprite\r\n      this.animations[this.animation].h * tilesize, // height of the sprite\r\n      (-pivot.x * tilesize * ratio) | 0, // x of the entity\r\n      (-pivot.y * tilesize * ratio) | 0, // y of the entity\r\n      (this.animations[this.animation].w * tilesize * ratio) | 0, // width of the entity\r\n      (this.animations[this.animation].h * tilesize * ratio) | 0 // height of the entity\r\n    );\r\n    context.restore();\r\n  };\r\n}\r\n","import Entity from \"modules/entity/Entity\";\r\nimport { SpriteStack } from \"modules/entity/SpriteStack\";\r\n\r\nexport class Stacked extends Entity {\r\n  offSet: number = 2;\r\n  stacks: SpriteStack[] = [];\r\n  constructor(x: number, y: number) {\r\n    super(x, y);\r\n    this.stacks.push(\r\n      ...[0, 0.2, 0.4, 0.6, 0.8, 1].map((offset, i) => {\r\n        const stack = new SpriteStack(this.x, this.y, offset);\r\n        stack.setAnimation(\"idle\", [0], [i]);\r\n        return stack;\r\n      })\r\n    );\r\n  }\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number; rot: number } = { x: 0, y: 0, rot: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) => {\r\n    this.stacks.forEach((stack) => {\r\n      stack.x = this.x;\r\n      stack.y = this.y-stack.offset;\r\n      stack.render(context, tilesize, ratio, camera,pivot);\r\n    });\r\n  };\r\n}\r\n","export class Meta {\r\n  /** The rendering's unit of measurement, expressed in pixels */\r\n  tilesize = 16;\r\n  baseRatio = 2;\r\n  /** Acts on the size of each pixel */\r\n  ratio = this.baseRatio;\r\n  /** Frames per second */\r\n  fps = 0;\r\n  /** Defines whether the fps span will be initialized/displayed */\r\n  displayFps = true;\r\n  /** Game time multiplier */\r\n  deltaTime = 1;\r\n  /** Target frames per second */\r\n  targetFrames = 60;\r\n  /** Target frame time */\r\n  perfectFrameTime = 1000 / this.targetFrames;\r\n  lastTimestamp = Date.now();\r\n  timestamp = Date.now();\r\n  /** Defines the type of the game's loop, A.K.A. 'scene' */\r\n  loopType = 0;\r\n  baseTilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n  baseTilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  /** Number of tiles displayed on screen (width) */\r\n  tilesWidth = this.baseTilesWidth;\r\n  /** Number of tiles displayed on screen (height) */\r\n  tilesHeight = this.baseTilesHeight;\r\n  constructor(canvas?:HTMLCanvasElement) {\r\n    this.init(canvas);\r\n  }\r\n  /** Initializes the fps counter if displayFps == true (init is called automatically by constructor) */\r\n  init = (canvas?:HTMLCanvasElement) => {\r\n    if (this.displayFps) {\r\n      // Creates and styles the html element where the fps will be displayed\r\n      let fpsSpan = document.createElement(\"span\");\r\n      fpsSpan.style.position = \"absolute\";\r\n      fpsSpan.style.color = \"black\";\r\n      fpsSpan.style.fontSize = \"25px\";\r\n      fpsSpan.style.fontWeight = \"bold\";\r\n      fpsSpan.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\r\n      fpsSpan.style.left = \"5px\";\r\n      fpsSpan.style.top = \"5px\";\r\n      // Places it as a child of the html body\r\n      document.body.appendChild(fpsSpan);\r\n      if(canvas){\r\n        this.baseTilesWidth = canvas.width / this.tilesize / this.ratio;\r\n        this.baseTilesHeight = canvas.height / this.tilesize / this.ratio;\r\n        this.tilesWidth = this.baseTilesWidth;\r\n        this.tilesHeight = this.baseTilesHeight;\r\n      }\r\n\r\n      // Calls the fpsCounter function once every second\r\n      setInterval(() => {\r\n        this.fpsCounter(fpsSpan);\r\n      }, 1000);\r\n    }\r\n  };\r\n  changeRatio = (newValue: number) => {\r\n    this.ratio = newValue;\r\n    this.tilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n    this.tilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  };\r\n  changeBaseRatio = (newValue: number) => {\r\n    this.baseRatio = newValue;\r\n    this.baseTilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n    this.baseTilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  };\r\n  /** Updates deltaTime and the fps counter */\r\n  compute = () => {\r\n    this.fps += 1;\r\n    this.updateDeltaTime();\r\n  };\r\n  /** Calculates the difference (delta) of the time elapsed and supposed game speed  */\r\n  updateDeltaTime = () => {\r\n    this.lastTimestamp = this.timestamp;\r\n    this.timestamp = Date.now();\r\n    this.deltaTime =\r\n      (this.timestamp - this.lastTimestamp) / this.perfectFrameTime;\r\n\r\n    // Forces the time multiplication to be at max two times the norm\r\n    if (this.deltaTime > 2) {\r\n      this.deltaTime = 2;\r\n    }\r\n  };\r\n  /** Keeps count of the fps, called in a setInterval.\r\n   * @param {HTMLSpanElement} span The html element where to display the fps variable\r\n   */\r\n  fpsCounter = (span: HTMLSpanElement) => {\r\n    span.innerHTML = String(this.fps);\r\n    this.fps = 0;\r\n  };\r\n}\r\n// export const meta = new Meta();\r\nexport default Meta;\r\n","import Player from \"modules/actors/player\";\r\nimport Camera from \"modules/camera\";\r\nimport GameCanvas from \"modules/canvas\";\r\nimport debug from \"modules/debug\";\r\nimport Entity from \"modules/entity\";\r\nimport { Stacked } from \"modules/entity/Stacked\";\r\nimport Meta from \"modules/meta\";\r\nimport { distance, getAngle } from \"modules/physics\";\r\n\r\nconst canvas = new GameCanvas();\r\nconst meta = new Meta(canvas);\r\n//@ts-ignore\r\nwindow.meta = meta;\r\nconst camera = new Camera();\r\nconst player = new Player(\r\n  canvas.width / 2 / meta.tilesize / meta.ratio,\r\n  canvas.height / 2 / meta.tilesize / meta.ratio,\r\n  canvas,\r\n  meta,\r\n  camera\r\n);\r\ncamera.focus = player;\r\nexport const initializeGame = () => {\r\n  loop();\r\n};\r\nconst entities: Entity[] = [\r\n  player,\r\n  new Stacked(5, 2),\r\n  new Stacked(15, 22),\r\n  new Stacked(1, 8),\r\n  new Stacked(7, 20),\r\n  new Stacked(3, 8),\r\n  new Stacked(9, 9),\r\n  new Stacked(2, 5),\r\n  new Stacked(16, 8),\r\n  new Stacked(14, 3),\r\n  new Stacked(18, 12),\r\n];\r\nconst loop = () => {\r\n  meta.compute();\r\n  canvas.clear();\r\n  // canvas.context.save();\r\n  // canvas.context.translate(\r\n  //   (camera.x + player.x - meta.tilesWidth / 2) * meta.tilesize * meta.ratio,\r\n  //   (camera.y + player.y - meta.tilesHeight / 2) * meta.tilesize * meta.ratio\r\n  // );\r\n  // canvas.context.rotate(-player.rot);\r\n  // canvas.context.restore();\r\n  for (const e of entities) {\r\n    e.compute(meta.deltaTime, entities);\r\n  }\r\n  camera.compute(meta);\r\n  debug.render(canvas.context, meta.tilesize, meta.ratio, camera);\r\n  const pCenter = player.centerPoint;\r\n  for (const e of entities) {\r\n    const eCenter = e.centerPoint;\r\n    const angle = getAngle({\r\n      x1: pCenter.x,\r\n      y1: pCenter.y,\r\n      x2: eCenter.x,\r\n      y2: eCenter.y,\r\n    });\r\n    const dist = -distance(pCenter, eCenter);\r\n    const pivot = { x: Math.cos(angle) * dist, y: Math.sin(angle) * dist };\r\n    e !== player&&debug.drawLine(pCenter, eCenter);\r\n    \r\n    e.render(\r\n      canvas.context,\r\n      meta.tilesize,\r\n      meta.ratio,\r\n      camera,\r\n      e !== player ? pivot : undefined\r\n    );\r\n  }\r\n  requestAnimationFrame(loop);\r\n};\r\n\r\nexport default initializeGame;\r\n","\r\nimport {initializeGame} from \"./game\"\r\nimport \"./index.css\";\r\n\r\ninitializeGame()\r\nconsole.log(\"Ready\")"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_typeof","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_defineProperties","target","props","i","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","instance","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","sheet","Image","src","Sprite","x","y","w","h","_classCallCheck","animation","animations","display","left","frame","frameCounter","removed","rot","_createClass","label","context","tilesize","ratio","camera","drawImage","keyframesX","keyframesY","deltaTime","slowness","onAnimationEnd","Animation","pivot","save","translate","offsetX","offsetY","rotate","restore","console","log","fillRect","entity","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","isArray","F","s","done","_e","f","err","normalCompletion","didErr","step","next","_e2","checkCollisions","entities","solid","_step","_iterator","collisionException","collided","onCollision","resolveException","colCheck","simpleCollisionCheck","xVel","xVelExt","yVel","yVelExt","velocitiesX","velocitiesY","objHitbox","hitbox","broadHitbox","colPointsVector","ct","cp","cn","dynamicRectVsRect","push","id","sort","a","b","_i","_colPointsVector","resolveDynamicRectVsRect","rectB","contactNormal","contactTime","overlapFixMultiplier","Math","abs","rectA","contactPoint","expanded","origin","direction","timeHitNear","inverseDir","timeNear","timeFar","isNaN","temp","max","min","rayVsRect","grounded","forceSpriteBox","rect1","rect2","shapeA","shapeB","shapeAA","shapeBB","vX","vY","hWidths","hHeights","colDir","oX","oY","col","T","B","L","R","assembleChunk","chunk","assembledChunks","brokenChunk","j","k","part","firstBlock","pointRectCol","point","rectangle","rect","lineRectCol","line","sq","squareLines","getRectSides","intersect","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","ub","sides","getAngle","_ref","deltaX","deltaY","atan2","getRectsAngle","_ref2","_ref3","w2","h2","cosSin","_ref4","rotation","cos","sin","getRotation","obj1","obj2","distance","sqrt","pow","_defineProperty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","Text","color","align","baseline","content","fontSize","font","shadow","shadowColor","strokeWidth","stroke","strokeColor","round","lineWidth","strokeStyle","textBaseline","textAlign","fillStyle","canvasFont","strokeText","fillText","shadowOffsetX","shadowOffsetY","SpriteVfx","_Sprite","_super","source","_this","centerX","centerY","type","randomPos","randomAmount","random","moveAtSource","randomizePos","additionalResetOperations","updateSprite","renderSprite","DmgVfx","_SpriteVfx","_super2","_this2","setAnimation","entries","rotations","Particle","_Sprite2","_super3","_this3","particleDuration","verticalSpeed","lifeCycles","remainingCycles","randomX","randomY","ParticlesVfx","_SpriteVfx2","_super4","_this4","particlesDuration","particlesAmount","particles","initialize","reset","_step2","removedCount","_iterator2","particle","compute","_step3","_iterator3","render","TextVfx","_SpriteVfx3","_super5","_this5","text","progress","PI","VfxManager","recyclePool","environment","vfxClasses","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","Vfxs","vfxName","vfx","getRecycledVfx","splice","vfxManager","SoundManager","playbackRate","volume","sounds","playRandom","soundsArray","play","soundsBaseUrl","createSound","relativeUrl","loop","fullUrl","concat","splittedUrl","split","CustomAudio","url","audio","calledPlayPromise","customVolume","customPlaybackRate","paused","currentTime","pause","promise","catch","warn","then","Audio","soundManager","Entity","speed","friction","state","stats","Stats","background","damaged","immovable","drops","Physics","hasHpBar","hasDisplayName","hitboxOffset","createVfx","updateHitbox","atk","hp","set","collider","resolveCollisions","beginPath","strokeRect","closePath","globalAlpha","ellipse","fill","lv","maxHp","maxExp","exp","maxMana","mana","atkSpeed","expValue","Controls","up","down","right","upR","downR","leftR","rightR","spacebar","lClickDown","mClickDown","rClickDown","currentPos","lastDir","mouseX","mouseY","initListeners","document","addEventListener","handleMouseEvt","handleTouchEvt","handleKeyboardEvt","that","evt","isDown","touches","clientX","clientY","button","Mouse","canvas","meta","gui","guiRef","absolute","hoverUI","dragging","slot","lastMouseX","lastMouseY","setCanvas","updatePos","offsetLeft","offsetTop","updatePosMobile","_slicedToArray","_s","_x","_r","_arr","_n","_d","Debug","div","activateButton","window","active","times","drawLater","drawRect","drawPoint","drawLine","pointA","pointB","draw","moveTo","lineTo","printTime","innerHTML","averageTime","toFixed","inspect","reduce","acc","includes","measureTime","callback","activate","start","performance","now","_len","args","_key","createWindow","onclick","deactivate","innerText","sum","width","height","open","body","style","margin","padding","boxSizing","backgroundColor","title","appendChild","onbeforeunload","_this$window","close","createDiv","createElement","position","inset","fontFamily","createActivateButton","top","clickEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","Player","_Entity","controls","mouse","resolveInputs","updateVelocities","updatePosition","debug","centerPoint","renderSquare","Camera","focus","lockedAngles","zoom","shake","actor","smoothly","boundingSq","Infinity","boundingBox","tilesWidth","tilesHeight","changeRatio","baseRatio","xx","yy","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Map","fn","indexOf","has","Wrapper","GameCanvas","_HTMLCanvasElement","center","innerWidth","innerHeight","clear","clearRect","imageSmoothingEnabled","oncontextmenu","event","preventDefault","getContext","outline","HTMLCanvasElement","customElements","define","extends","_toConsumableArray","iter","SpriteStack","offset","Stacked","_this$stacks","offSet","stacks","stack","map","Meta","fps","displayFps","targetFrames","perfectFrameTime","lastTimestamp","Date","timestamp","loopType","baseTilesWidth","baseTilesHeight","init","fpsSpan","fontWeight","setInterval","fpsCounter","newValue","changeBaseRatio","updateDeltaTime","span","player","initializeGame","_entities","pCenter","_i2","_entities2","eCenter","angle","dist","requestAnimationFrame"],"sourceRoot":""}
{"version":3,"file":"static/js/main.ebdfff8f.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","modules/canvas/index.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","modules/meta/index.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","modules/physics/checkCollisions.ts","modules/physics/index.ts","modules/resourceManager/index.ts","modules/entity/sprite.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","modules/text/index.ts","modules/vfxManager/vfxs.ts","modules/vfxManager/index.ts","modules/soundManager/index.ts","modules/entity/index.ts","modules/controls/index.ts","modules/mouse/index.ts","modules/actors/player/scythe.ts","modules/actors/player/index.ts","index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Creates the canvas element and exports it\r\nexport const canvas = document.createElement(\"canvas\");\r\ndocument.body.appendChild(canvas);\r\n\r\ncanvas.width = 800;\r\ncanvas.height = 600;\r\n\r\n/** Prevents right clicks menu from appearing */\r\nwindow.oncontextmenu = function (event) {\r\n  event.preventDefault();\r\n};\r\n/** Moves the canvas to the center by giving it an offset to the top/left sides */\r\nfunction center(element: HTMLCanvasElement) {\r\n  element.style.position = \"absolute\";\r\n  element.style.left = (window.innerWidth - element.width) / 2 + \"px\";\r\n  element.style.top = (window.innerHeight - element.height) / 2 + \"px\";\r\n}\r\n// Center the canvas at runtime\r\ncenter(canvas);\r\n\r\n/** Calls the centerCanvas function every time the window size changes */\r\nwindow.addEventListener(\"resize\", () => center(canvas));\r\n\r\n// Exports the drawing context\r\n/** Canvas drawing context */\r\nexport const c = canvas.getContext(\"2d\")!;\r\n// Disables anti aliasing\r\nc.imageSmoothingEnabled = false;\r\n\r\n// Clears the canvas (gets called every frame before drawing)\r\nexport function clear ( ) {\r\n  c.clearRect(0, 0, canvas.width, canvas.height);\r\n};\r\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","\r\n\r\nexport class Meta {\r\n  /** The rendering's unit of measurement, expressed in pixels */\r\n  tilesize = 16;\r\n  baseRatio = 2;\r\n  /** Acts on the size of each pixel */\r\n  ratio = this.baseRatio;\r\n  /** Frames per second */\r\n  fps = 0;\r\n  /** Defines whether the fps span will be initialized/displayed */\r\n  displayFps = true;\r\n  /** Game time multiplier */\r\n  deltaTime = 1;\r\n  /** Target frames per second */\r\n  targetFrames = 60;\r\n  /** Target frame time */\r\n  perfectFrameTime = 1000 / this.targetFrames;\r\n  lastTimestamp = Date.now();\r\n  timestamp = Date.now();\r\n  /** Defines the type of the game's loop, A.K.A. 'scene' */\r\n  loopType = 0;\r\n  baseTilesWidth = 25;\r\n  baseTilesHeight = 19;\r\n  /** Number of tiles displayed on screen (width) */\r\n  tilesWidth = this.baseTilesWidth;\r\n  /** Number of tiles displayed on screen (height) */\r\n  tilesHeight = this.baseTilesHeight;\r\n  constructor() {\r\n    this.init();\r\n  }\r\n  /** Initializes the fps counter if displayFps == true */\r\n  init = () => {\r\n    if (this.displayFps) {\r\n      // Creates and styles the html element where the fps will be displayed\r\n      let fpsSpan = document.createElement(\"span\");\r\n      fpsSpan.style.position = \"absolute\";\r\n      fpsSpan.style.color = \"white\";\r\n      fpsSpan.style.left = \"5px\";\r\n      fpsSpan.style.top = \"5px\";\r\n      // Places it as a child of the html body\r\n      document.body.appendChild(fpsSpan);\r\n\r\n      // Calls the fpsCounter function once every second\r\n      setInterval(() => {\r\n        this.fpsCounter(fpsSpan);\r\n      }, 1000);\r\n    }\r\n  };\r\n  /** Updates deltaTime and the fps counter */\r\n  compute = () => {\r\n    this.fps += 1;\r\n    this.updateDeltaTime();\r\n  };\r\n  /** Calculates the difference (delta) of the time elapsed and supposed game speed  */\r\n  updateDeltaTime = () => {\r\n    this.lastTimestamp = this.timestamp;\r\n    this.timestamp = Date.now();\r\n    this.deltaTime =\r\n      (this.timestamp - this.lastTimestamp) / this.perfectFrameTime;\r\n\r\n    // Forces the time multiplication to be at max two times the norm\r\n    if (this.deltaTime > 2) {\r\n      this.deltaTime = 2;\r\n    }\r\n  };\r\n\r\n  /** Keeps count of the fps, called in a setInterval.\r\n   * @param {HTMLSpanElement} span The html element where to display the fps variable\r\n   */\r\n  fpsCounter = (span:HTMLSpanElement) => {\r\n    span.innerHTML = String(this.fps);\r\n    this.fps = 0;\r\n  };\r\n}\r\nexport const meta = new Meta();\r\nexport default meta;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/** Gets called after the velocities have been set\r\n *\r\n * Contains my own javascript implementation of the SWEPT AABB algorithm, after taking to account many resources on the matter:\r\n * @link https://www.youtube.com/watch?v=8JJ-4JgR7Dg\r\n * @link https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/swept-aabb-collision-detection-and-response-r3084/\r\n * @link https://blog.hamaluik.ca/posts/swept-aabb-collision-using-minkowski-difference/\r\n */\r\n// import { debug } from '../debug/debug.js'\r\nimport { Point, Rect, EntityLike } from \"./\";\r\n\r\nexport function checkCollisions(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[],\r\n  deltaTime = 1\r\n) {\r\n  if (!obj.solid) {\r\n    // return false if the object calling this function is not solid\r\n    return false;\r\n  }\r\n  // Decides if the col should be checked normally, without vectors\r\n  simpleCollisionCheck(obj, entities);\r\n  if (obj.xVel + obj.xVelExt === 0 && obj.yVel + obj.yVelExt === 0) {\r\n    return;\r\n  }\r\n\r\n  // Broad Phase\r\n  // Step 1: Create a broad hitbox with the added size of the velocities\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  /** If the object has an hitbox property, check collision with that */\r\n  let objHitbox = obj.hitbox ? obj.hitbox : obj;\r\n\r\n  /** Bigger hitbox for the broad phase */\r\n  let broadHitbox = {\r\n    x: velocitiesX > 0 ? objHitbox.x : objHitbox.x + velocitiesX * deltaTime,\r\n    y: velocitiesY > 0 ? objHitbox.y : objHitbox.y + velocitiesY * deltaTime,\r\n    w:\r\n      velocitiesX > 0\r\n        ? objHitbox.w + velocitiesX * deltaTime\r\n        : objHitbox.w - velocitiesX * deltaTime,\r\n    h:\r\n      velocitiesY > 0\r\n        ? objHitbox.h + velocitiesY * deltaTime\r\n        : objHitbox.h - velocitiesY * deltaTime,\r\n  };\r\n\r\n  /** debug player dir*/\r\n  //debug.drawLine({ x: obj.centerX, y: obj.centerY }, { x: obj.centerX + velocitiesX * deltaTime, y: obj.centerY + velocitiesY * deltaTime }, \"white\")\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(broadHitbox, \"cyan\")\r\n\r\n  /** Vector containing pairs of (ID, contactTime) */\r\n  let colPointsVector = [];\r\n  /** Contact Time */\r\n  const ct = { value: 0.0 };\r\n  /** Contact Point */\r\n  const cp = { x: 0, y: 0 };\r\n  /** Contact normal */\r\n  const cn = { x: 0, y: 0 };\r\n\r\n  /** Defines if the level has been changed */\r\n  let levelChange = false;\r\n  // Step 2:\r\n  for (let i = 0; i < entities.length; i++) {\r\n    let entity = entities[i];\r\n    // Skip collision exceptions\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    // BROAD\r\n    // Checks broad hitbox collisions with entities\r\n    if (collided(broadHitbox, entity)) {\r\n      // Checks corner points collisions\r\n\r\n      // NARROW\r\n      // If the entity has an hitbox, use it instead\r\n      let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n      // Swept collision check\r\n      if (\r\n        dynamicRectVsRect(\r\n          objHitbox,\r\n          entityHitbox,\r\n          velocitiesX,\r\n          velocitiesY,\r\n          deltaTime,\r\n          cp,\r\n          cn,\r\n          ct\r\n        )\r\n      ) {\r\n        // Handles eventual collision events\r\n        if (obj.onCollision) {\r\n          obj.onCollision(entity, entities);\r\n        }\r\n        if (entity.onCollision) {\r\n          if (entity.onCollision(obj, entities) === \"levelChange\") {\r\n            /** A level-changing event has been triggered */\r\n            levelChange = true;\r\n            return;\r\n          }\r\n        }\r\n        // Skip resolve exceptions\r\n        if (resolveException(obj, entity)) {\r\n          continue;\r\n        }\r\n        colPointsVector.push({ id: i, ct: ct.value });\r\n\r\n        // Compute point colliders\r\n      }\r\n    }\r\n  }\r\n  if (levelChange) {\r\n    // Entities are changed, no point in resolving\r\n    return;\r\n  }\r\n  if (colPointsVector.length === 0) {\r\n    //console.log('No colliders were found, obj xVel = ', obj.xVel)\r\n    return;\r\n  }\r\n  // Do the sort\r\n  colPointsVector.sort((a, b) => {\r\n    return a.ct - b.ct;\r\n  });\r\n  // Now resolve the collision in correct order\r\n  for (let rect of colPointsVector) {\r\n    resolveDynamicRectVsRect(obj, deltaTime, entities[rect.id]);\r\n  }\r\n\r\n  /**\r\n   * Fixes slide direction change in case velocities were initially diagonal\r\n   * (Its' implied that at least one of the velocities isn't 0)\r\n   * (Its' also implied there has been a collision at this point)\r\n   *\r\n   */\r\n  if (velocitiesX != 0 && velocitiesY != 0) {\r\n    //console.log(\"Recursion happened\");\r\n    checkCollisions(obj, entities, deltaTime);\r\n  }\r\n}\r\n\r\nclass PointsCollider {\r\n  entity: EntityLike | undefined;\r\n  offset = -0.01;\r\n  /** Top left collider */\r\n  TL = { x: 0, y: 0, col: false };\r\n  /** Top right collider */\r\n  TR = { x: 0, y: 0, col: false };\r\n  /** Bottom left collider */\r\n  BL = { x: 0, y: 0, col: false };\r\n  /** Bottom right collider */\r\n  BR = { x: 0, y: 0, col: false };\r\n\r\n  constructor() {}\r\n  /** Sets the collision points on each corner of the entity */\r\n  setColPoints(entity: EntityLike) {\r\n    this.entity = entity;\r\n    let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n    this.TL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.TR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.BL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n    this.BR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n  }\r\n  /** Checks Points collision */\r\n  checkCols(collider: EntityLike) {\r\n    if (!this.TL.col) this.TL.col = pointRectCol(this.TL, collider);\r\n    if (!this.TR.col) this.TR.col = pointRectCol(this.TR, collider);\r\n    if (!this.BL.col) this.BL.col = pointRectCol(this.BL, collider);\r\n    if (!this.BR.col) this.BR.col = pointRectCol(this.BR, collider);\r\n  }\r\n  /** Move the entity depending on the collided points */\r\n  resolveCollisions() {\r\n    if (!this.entity) {\r\n      return;\r\n    }\r\n    //debug.drawPoint(this.TL, this.TL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.TR, this.TR.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BL, this.BL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BR, this.BR.col ? 'red' : 'yellow')\r\n    if (this.TL.col || this.BL.col) {\r\n      if (this.entity.xVel < 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt < 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TR.col || this.BR.col) {\r\n      if (this.entity.xVel > 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt > 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TL.col || this.TR.col) {\r\n      if (this.entity.yVel < 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt < 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n    if (this.BL.col || this.BR.col) {\r\n      if (this.entity.yVel > 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt > 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveDynamicRectVsRect(\r\n  obj: EntityLike,\r\n  deltaTime: number,\r\n  rectB: EntityLike\r\n) {\r\n  let contactPoint = { x: 0, y: 0 };\r\n  let contactNormal = { x: 0, y: 0 };\r\n  let contactTime = { value: 0.0 };\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  let objHitbox1 = obj.hitbox ? obj.hitbox : obj;\r\n  let objHitbox2 = rectB.hitbox ? rectB.hitbox : rectB;\r\n  //debug.drawRect(objHitbox2, 'cyan')\r\n  if (\r\n    dynamicRectVsRect(\r\n      objHitbox1,\r\n      objHitbox2,\r\n      velocitiesX,\r\n      velocitiesY,\r\n      deltaTime,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //if (contactNormal.x < 0) { obj.col.R = -contactNormal.x * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n    //if (contactNormal.x > 0) { obj.col.L = contactNormal.x * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y < 0) { obj.col.B = -contactNormal.y * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y > 0) { obj.col.T = contactNormal.y * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n\r\n    // console.log('resolved a collision, old xVel = ', obj.xVel)\r\n    // To avoid weird JS numbers behaviour\r\n    let overlapFixMultiplier = 1.001;\r\n    obj.xVel +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVel +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.xVelExt +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVelExt +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n\r\n    //obj.xVel = 0;\r\n    //obj.yVel = 0;\r\n    // console.log('new xVel', obj.xVel)\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/** Swaps 2 values */\r\nfunction dynamicRectVsRect(\r\n  rectA: Rect,\r\n  rectB: Rect,\r\n  xVel: number,\r\n  yVel: number,\r\n  deltaTime: number,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  contactTime: { value: any }\r\n) {\r\n  // Check if dynamic rectangle is actually moving\r\n  // we assume rectangles are NOT in collision to start\r\n  if (xVel == 0 && yVel == 0) {\r\n    return false;\r\n  }\r\n  contactTime.value = 0;\r\n  // Expand target rectangle by source dimensions\r\n  let expanded = {\r\n    x: rectB.x - rectA.w / 2,\r\n    y: rectB.y - rectA.h / 2,\r\n    w: rectB.w + rectA.w,\r\n    h: rectB.h + rectA.h,\r\n  };\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(expanded, \"orange\")\r\n  let centerRectA = {\r\n    x: rectA.x + rectA.w / 2,\r\n    y: rectA.y + rectA.h / 2,\r\n  };\r\n  let direction = {\r\n    x: xVel * deltaTime,\r\n    y: yVel * deltaTime,\r\n  };\r\n  if (\r\n    rayVsRect(\r\n      centerRectA,\r\n      direction,\r\n      expanded,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //console.log('ray v rect returned ct', contactTime.value)\r\n    return contactTime.value >= 0 && contactTime.value < 1;\r\n  } else {\r\n    //console.log('ray v rect returned false')\r\n    return false;\r\n  }\r\n}\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox = false\r\n) {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction rayVsRect(\r\n  origin: Point,\r\n  direction: Point,\r\n  target: Rect,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  timeHitNear: { value: number }\r\n) {\r\n  contactPoint.x = 0;\r\n  contactPoint.y = 0;\r\n\r\n  contactNormal.x = 0;\r\n  contactNormal.y = 0;\r\n\r\n  // Cache division\r\n  let inverseDir = {\r\n    x: 1 / direction.x,\r\n    y: 1 / direction.y,\r\n  };\r\n  // Calculate intersections with rectangle bounding axes\r\n  let timeNear = {\r\n    x: (target.x - origin.x) * inverseDir.x,\r\n    y: (target.y - origin.y) * inverseDir.y,\r\n  };\r\n  let timeFar = {\r\n    x: (target.x + target.w - origin.x) * inverseDir.x,\r\n    y: (target.y + target.h - origin.y) * inverseDir.y,\r\n  };\r\n  if (isNaN(timeFar.y) || isNaN(timeFar.x)) {\r\n    return false;\r\n  }\r\n  if (isNaN(timeNear.y) || isNaN(timeNear.x)) {\r\n    return false;\r\n  }\r\n\r\n  // Sort distances\r\n  if (timeNear.x > timeFar.x) {\r\n    let temp = timeNear.x;\r\n    timeNear.x = timeFar.x;\r\n    timeFar.x = temp;\r\n  }\r\n  if (timeNear.y > timeFar.y) {\r\n    let temp = timeNear.y;\r\n    timeNear.y = timeFar.y;\r\n    timeFar.y = temp;\r\n  }\r\n\r\n  // Early rejection\r\n  if (timeNear.x > timeFar.y || timeNear.y > timeFar.x) {\r\n    return false;\r\n  }\r\n\r\n  // Closest 'time' will be the first contact\r\n  timeHitNear.value = Math.max(timeNear.x, timeNear.y);\r\n\r\n  // Furthest 'time' is contact on opposite side of target\r\n  let timeHitFar = Math.min(timeFar.x, timeFar.y);\r\n\r\n  // Reject if ray direction is pointing away from object\r\n  if (timeHitFar < 0) {\r\n    return false;\r\n  }\r\n\r\n  // Contact point of collision from parametric line equation\r\n  contactPoint.x = origin.x + timeHitNear.value * direction.x;\r\n  contactPoint.y = origin.y + timeHitNear.value * direction.y;\r\n\r\n  if (timeNear.x > timeNear.y) {\r\n    if (inverseDir.x < 0) {\r\n      contactNormal.x = 1;\r\n      contactNormal.y = 0;\r\n    } else {\r\n      contactNormal.x = -1;\r\n      contactNormal.y = 0;\r\n    }\r\n  } else if (timeNear.x < timeNear.y) {\r\n    if (inverseDir.y < 0) {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = 1;\r\n    } else {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = -1;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/** Defines whether the collision check is unnecessary */\r\nfunction collisionException(obj: EntityLike, entity: EntityLike) {\r\n  if (entity.removed || entity == obj) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n/** Defines whether the collision resolve should be avoided */\r\nfunction resolveException(obj: EntityLike, entity: EntityLike) {\r\n  if (\r\n    !entity.solid ||\r\n    entity.removed ||\r\n    entity == obj ||\r\n    (entity.grounded && !obj.grounded)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collided(\r\n  a: Rect,\r\n  b: Rect,\r\n  forceSpriteBox = false\r\n) {\r\n  let rect1 = a.hitbox && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = b.hitbox && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/** Gets called if a more advanced colcheck is not necessary */\r\nexport function simpleCollisionCheck(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[]\r\n) {\r\n  for (let entity of entities) {\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    if (collided(obj, entity)) {\r\n      if (obj.onCollision) {\r\n        obj.onCollision(entity);\r\n      }\r\n      if (entity.onCollision) {\r\n        entity.onCollision(obj);\r\n      }\r\n      if (resolveException(obj, entity)) {\r\n        continue;\r\n      }\r\n      colCheck(obj, entity);\r\n    }\r\n  }\r\n}\r\nexport function colCheck(\r\n  shapeA: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  shapeB: EntityLike\r\n) {\r\n  if (shapeA == null || shapeB == null) {\r\n    return true;\r\n  }\r\n  // get the vectors to check against\r\n  var shapeAA = shapeA.hitbox || shapeA,\r\n    shapeBB = shapeB.hitbox || shapeB;\r\n  var vX = shapeAA.x + shapeAA.w / 2 - (shapeBB.x + shapeBB.w / 2),\r\n    vY = shapeAA.y + shapeAA.h / 2 - (shapeBB.y + shapeBB.h / 2),\r\n    // add the half widths and half heights of the objects\r\n    hWidths = shapeAA.w / 2 + shapeBB.w / 2,\r\n    hHeights = shapeAA.h / 2 + shapeBB.h / 2,\r\n    colDir = \"\";\r\n\r\n  // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\r\n  if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\r\n    // figures out on which side we are colliding (top, bottom, left, or right)\r\n    var oX = hWidths - Math.abs(vX),\r\n      oY = hHeights - Math.abs(vY);\r\n    if (oX >= oY) {\r\n      if (vY > 0) {\r\n        colDir = \"t\";\r\n        if (shapeA.col.T < oY) {\r\n          if (oY > 0.01) shapeA.col.T += oY;\r\n        }\r\n      } else {\r\n        colDir = \"b\";\r\n        if (shapeA.col.B < oY) {\r\n          if (oY > 0.01) shapeA.col.B += oY;\r\n        }\r\n      }\r\n    } else {\r\n      if (vX > 0) {\r\n        colDir = \"l\";\r\n        if (shapeA.col.L < oX) {\r\n          if (oX > 0.01) shapeA.col.L += oX;\r\n        }\r\n      } else {\r\n        colDir = \"r\";\r\n        if (shapeA.col.R < oX) {\r\n          if (oX > 0.01) shapeA.col.R += oX;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return colDir;\r\n}\r\n","\r\nexport type Line = {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n};\r\n\r\nexport type Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nexport type Rect = Point & {\r\n  w: number;\r\n  h: number;\r\n  hitbox?: Rect;\r\n};\r\nexport type EntityLike = Rect & {\r\n  hitbox?: Rect;\r\n  grounded: boolean;\r\n  removed: boolean;\r\n  onCollision?: Function;\r\n  yVelExt: number;\r\n  yVel: number;\r\n  xVelExt: number;\r\n  xVel: number;\r\n  solid: boolean;\r\n  col?: {\r\n    L: number;\r\n    R: number;\r\n    T: number;\r\n    B: number;\r\n  };\r\n};\r\n/**\r\n *  To use this:\r\n *  - Check for all the simple collisions\r\n *  - Send the collided entities' array and the colliding object\r\n *\r\n * @returns {Rect[]} An array of the merged colliders.\r\n */\r\nexport function assembleChunk(chunk: Rect[], obj: EntityLike): Rect[] {\r\n  let assembledChunks: Rect[] = [];\r\n  let brokenChunk: Rect[] = [];\r\n  if (chunk.length == 1) {\r\n    return chunk;\r\n  }\r\n  for (let i = 0; i < chunk.length; i++) {\r\n    for (let j = 0; j < chunk[i].w; j++) {\r\n      for (let k = 0; k < chunk[i].h; k++) {\r\n        let part: Rect = {\r\n          x: chunk[i].x + j,\r\n          y: chunk[i].y + k,\r\n          w: 1,\r\n          h: 1,\r\n        };\r\n        if (collided(obj, part)) {\r\n          brokenChunk.push(part);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (brokenChunk.length == 0) {\r\n    return [] as Rect[];\r\n  }\r\n  let firstBlock = {\r\n    x: brokenChunk[0].x,\r\n    y: brokenChunk[0].y,\r\n    w: brokenChunk[0].w,\r\n    h: brokenChunk[0].h,\r\n  };\r\n  assembledChunks.push(firstBlock);\r\n  let a: Rect, b: Rect;\r\n  for (let i = 0; i < brokenChunk.length; i++) {\r\n    for (let j = 0; j < assembledChunks.length; j++) {\r\n      a =\r\n        brokenChunk[i].hitbox !== undefined\r\n          ? brokenChunk[i].hitbox!\r\n          : brokenChunk[i];\r\n      b = assembledChunks[j];\r\n      if (a.y == b.y && a.h == b.h) {\r\n        if (a.x + a.w > b.x + b.w) {\r\n          b.w = a.x + a.w - b.x;\r\n        }\r\n        if (a.x < b.x) {\r\n          b.w += b.x - a.x;\r\n          b.x = a.x;\r\n        }\r\n      } else if (a.x == b.x && a.w == b.w) {\r\n        if (a.y + a.h > b.y + b.h) {\r\n          b.h = a.y + a.h - b.y;\r\n        }\r\n        if (a.y < b.y) {\r\n          b.h += b.y - a.y;\r\n          b.y = a.y;\r\n        }\r\n      } else {\r\n        let temp = {\r\n          x: a.x,\r\n          y: a.y,\r\n          w: a.w,\r\n          h: a.h,\r\n        };\r\n        assembledChunks.push(temp);\r\n      }\r\n    }\r\n  }\r\n  return assembledChunks;\r\n}\r\n/**\r\n *  Checks whether two rect-shaped objects are colliding\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if the rects are colliding, false otherwise\r\n */\r\nexport function collided(\r\n  a: Rect,\r\n  b: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect1 = typeof a.hitbox !== \"undefined\" && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = typeof b.hitbox !== \"undefined\" && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Checks if a point is contained withing a rectangle shaped object\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if contained, false otherwise\r\n */\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n/**\r\n * Checks for intersections between a line and a rect shaped object\r\n * @returns {boolean} True if there's an intersection, false otherwise\r\n */\r\nexport function lineRectCol(line: Line, sq: Rect): boolean {\r\n  let squareLines = getRectSides(sq);\r\n  for (let i = 0; i < squareLines.length; i++) {\r\n    if (\r\n      intersect(\r\n        squareLines[i].x1,\r\n        squareLines[i].y1,\r\n        squareLines[i].x2,\r\n        squareLines[i].y2,\r\n        line.x1,\r\n        line.y1,\r\n        line.x2,\r\n        line.y2\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Given two lines(expressed in 8 coordinates of 4 points), checks whether there's an intersection between them\r\n *\r\n * @returns {Point | false} The coords of the intersection or false if there's no contact\r\n */\r\nexport function intersect(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  x4: number,\r\n  y4: number\r\n): Point | false {\r\n  // Check if none of the lines are of length 0\r\n  if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n    return false;\r\n  }\r\n\r\n  let denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n\r\n  if (denominator === 0) {\r\n    return false;\r\n  }\r\n\r\n  let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n  let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\r\n\r\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n    return false;\r\n  }\r\n\r\n  let x = x1 + ua * (x2 - x1);\r\n  let y = y1 + ua * (y2 - y1);\r\n\r\n  return {\r\n    x,\r\n    y,\r\n  };\r\n}\r\n/**\r\n *\r\n * @returns {Line[]} Array containing each line of the rect as 2 points coordinates\r\n */\r\nexport function getRectSides(rect: Rect): Line[] {\r\n  let sides = [];\r\n  let sq = rect;\r\n  if (rect.hitbox !== undefined) {\r\n    sq = rect.hitbox;\r\n  }\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y,\r\n  });\r\n\r\n  return sides;\r\n}\r\n\r\n/**\r\n * Computes the angle between the given points coordinates\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getAngle({ x1, y1, x2, y2 }: Line): number {\r\n  let deltaX = x2 - x1;\r\n  let deltaY = y2 - y1;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n/**\r\n * Computes the Cosine and Sine between 2 points\r\n *\r\n * @returns {number[]} Array containing the cosine and sine values, respectively.\r\n */\r\nexport function cosSin({ x1, y1, x2, y2 }: Line): number[] {\r\n  let rotation = getAngle({ x1, y1, x2, y2 });\r\n  let cosine = Math.cos(rotation);\r\n  let sine = Math.sin(rotation);\r\n  return [cosine, sine];\r\n}\r\n/**\r\n * Given two rectangles, returns the angle between their center point\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getRotation(obj1: Rect, obj2: Rect):number {\r\n  let x1 = obj1.x + obj1.w / 2;\r\n  let y1 = obj1.y + obj1.h / 2;\r\n  let x2 = obj2.x + obj2.w / 2;\r\n  let y2 = obj2.y + obj2.h / 2;\r\n  return getAngle({ x1, y1, x2, y2 });\r\n}\r\n\r\n/**\r\n * Returns the distance between the center of two rect shaped objects\r\n *\r\n * @returns {number} Distance between the rectangles centers.\r\n */\r\nexport function distance(\r\n  obj1: Point & { w?: number; h?: number },\r\n  obj2: Point & { w?: number; h?: number }\r\n):number {\r\n  let x1 = obj1.w ? obj1.x + obj1.w / 2 : obj1.x;\r\n  let y1 = obj1.h ? obj1.y + obj1.h / 2 : obj1.y;\r\n\r\n  let x2 = obj2.w ? obj2.x + obj2.w / 2 : obj2.x;\r\n  let y2 = obj2.h ? obj2.y + obj2.h / 2 : obj2.y;\r\n\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n}\r\n","export const spritesheet = new Image();\r\nspritesheet.src = \"images/spritesheet.png\";\r\n\r\n/** Sound fxs */","import { spritesheet } from \"../resourceManager\";\r\n/** Class representing a sprite,\r\n * i.e. an object capable of iterating through a set of image frames, creating the illusion of animation.\r\n */\r\nexport class Sprite {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  /** Each entity has the same spritesheet by default, but it can be changed */\r\n  sheet: HTMLImageElement = spritesheet;\r\n  /** The animation currently rendering (defaults to 'idle') */\r\n  animation: string = \"idle\";\r\n  /** Whenever a new animation is created, it will end up here */\r\n  animations: any = {};\r\n  /** Toggle used to skip this entity's rendering, for a reason or another */\r\n  display: boolean = true;\r\n  /** Defines if this sprite is facing to the left */\r\n  left: number = 0;\r\n  /** Represents the current frame of the current sprite animation */\r\n  frame: number = 0;\r\n  /** Counts the amount of rendering iterations since the last animation frame change */\r\n  frameCounter: number = 0;\r\n  removed: boolean = false;\r\n  rot: number = 0;\r\n  /**\r\n   * Creates a new Sprite object at the given coordinates and of the specified size.\r\n   * Commonly used as an extension to children classes, like entities or visual effects.\r\n   *\r\n   * *Note: Coordinates and sizes are expressed in tilesize units*\r\n   * @param {Number} x Horizontal coordinate relative to the drawing environment\r\n   * @param {Number} y Vertical coordinate relative to the drawing environment\r\n   * @param {Number} w Width\r\n   * @param {Number} h Height\r\n   */\r\n  constructor(x: number, y: number, w: number = 1, h: number = 1) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n    // eg. setting an animation:\r\n    //this.setAnimation(\"idle\", [0], [0]);\r\n  }\r\n  /** Returns true if the animation has changed, false otherwise\r\n   *  Usage example: this.loadAnimation('attack')\r\n   */\r\n  loadAnimation(label: string) {\r\n    if (this.animation === label) {\r\n      return false;\r\n    }\r\n    this.frameCounter = 0;\r\n    this.frame = 0;\r\n    this.animation = label;\r\n    return true;\r\n  }\r\n  /**\r\n   * What happens after the current animation ends.\r\n   * Entities/vfxs will overwrite this function when needed, to add functionalities.\r\n   * If no actions are specified, then the current animation will loop endlessly.\r\n   *\r\n   */\r\n  onAnimationEnd() {\r\n    /**\r\n     * Example code inside this function:\r\n     *\r\n     *  switch(this.animation){\r\n     *      case 'death':\r\n     *          this.removed=true;\r\n     *          break;\r\n     *      case 'attack':\r\n     *          this.loadAnimation('idle');\r\n     *          break;\r\n     *  }\r\n     *\r\n     */\r\n  }\r\n\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ): void {}\r\n  /** Renders the base sprite, not animated, as a static icon in a specific location */\r\n  renderItem(\r\n    x: number,\r\n    y: number,\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    w = 1,\r\n    h = 1\r\n  ) {\r\n    context.drawImage(\r\n      this.sheet, // source of the sprite\r\n      this.animations[\"idle\"].keyframesX[0][0] * tilesize, // x pos of the sprite\r\n      this.animations[\"idle\"].keyframesY[0][0] * tilesize, // y pos of the sprite\r\n      this.animations[\"idle\"].w * tilesize, // width of the sprite\r\n      this.animations[\"idle\"].h * tilesize, // height of the sprite\r\n      x * tilesize * ratio, // x of the entity\r\n      y * tilesize * ratio, // y of the entity\r\n      w * tilesize * ratio, // width of the entity\r\n      h * tilesize * ratio // height of the entity\r\n    );\r\n  }\r\n  /** Progresses the sprite animation\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateSprite(deltaTime: number = 1) {\r\n    this.frameCounter += deltaTime;\r\n    if (this.frameCounter >= this.animations[this.animation].slowness) {\r\n      this.frame++;\r\n      this.frameCounter = 0;\r\n    }\r\n    // If the current frame exceeded the current animation's length:\r\n    if (\r\n      this.frame >= this.animations[this.animation].keyframesX[this.left].length\r\n    ) {\r\n      this.frame = 0;\r\n      this.frameCounter = 0;\r\n      this.onAnimationEnd();\r\n    }\r\n  }\r\n  /** Adds or overwrites an animation\r\n   *\r\n   * @param {String} label The name of the animation (using an already existing name will overwrite the animation)\r\n   * @param {Number[]} keyframesX The positions of the sprite frames in the spritesheet (horizontal), expressed in tilesize\r\n   * @param {Number[]} keyframesY The positions of the sprite frames in the spritesheet (vertical), expressed in tilesize\r\n   * @param {0 | 1} left If set to 1 it will create a different animation whenever this object is facing to the left (has this.left = 1)\r\n   *\r\n   * @example\r\n   * this.setAnimation('attack',[0,0,0],[1,2,3])  // Creates an animation labeled 'attack' composed of 3 animation frames\r\n   *\r\n   * this.setAnimation('attack',[1,1,1],[1,2,3], 1) // Sets a different animation for whenever the sprite faces to the left (optional)\r\n   *\r\n   */\r\n  setAnimation(\r\n    label: string,\r\n    keyframesX: number[],\r\n    keyframesY: number[],\r\n    left: 0 | 1 = 0\r\n  ) {\r\n    if (!this.animations[label]) {\r\n      this.animations[label] = new Animation(this);\r\n    }\r\n    if (left) {\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    } else {\r\n      /** If left-facing animation was not specified use the keyframes for both ways */\r\n      this.animations[label].keyframesX[0] = keyframesX;\r\n      this.animations[label].keyframesY[0] = keyframesY;\r\n\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    }\r\n  }\r\n  /**\r\n   * Renders this sprite current animation, at the given coordinates\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSprite(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      //console.log('rendering a removed entity!!!')\r\n    }\r\n\r\n    if (this.rot) {\r\n      /** Rotated Rendering */\r\n      context.save();\r\n      context.translate(\r\n        (this.x +\r\n          this.animations[this.animation].offsetX +\r\n          pivot.x +\r\n          camera.x) *\r\n          tilesize *\r\n          ratio,\r\n        (this.y +\r\n          this.animations[this.animation].offsetY +\r\n          pivot.y +\r\n          camera.y) *\r\n          tilesize *\r\n          ratio\r\n      );\r\n      context.rotate(this.rot);\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        -pivot.x * tilesize * ratio, // x of the entity\r\n        -pivot.y * tilesize * ratio, // y of the entity\r\n        this.animations[this.animation].w * tilesize * ratio, // width of the entity\r\n        this.animations[this.animation].h * tilesize * ratio // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n      /** Default Rendering */\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        (this.x + this.animations[this.animation].offsetX + camera.x) *\r\n          tilesize *\r\n          ratio, // x of the entity\r\n        (this.y + this.animations[this.animation].offsetY + camera.y) *\r\n          tilesize *\r\n          ratio, // y of the entity\r\n        this.animations[this.animation].w * tilesize * ratio, // width of the entity\r\n        this.animations[this.animation].h * tilesize * ratio // height of the entity\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * Disregards the animation and renders an entity as a filled square,\r\n   * can be used for debugging or as a placeholder.\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {Object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {Object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSquare(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      console.log('rendering a removed entity!!!')\r\n    }\r\n    if (this.rot) {\r\n      // Rotated Rendering\r\n      context.save();\r\n      context.translate(\r\n        (this.x + pivot.x + camera.x) * tilesize * ratio,\r\n        (this.y + pivot.y + camera.y) * tilesize * ratio\r\n      );\r\n      context.rotate(this.rot);\r\n      context.fillRect(\r\n        -pivot.x * tilesize * ratio, // x of the entity\r\n        -pivot.y * tilesize * ratio, // y of the entity\r\n        this.w * tilesize * ratio, // width of the entity\r\n        this.h * tilesize * ratio // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n    // Default Rendering\r\n      context.fillRect(\r\n        (this.x + camera.x) * tilesize * ratio, // x of the entity\r\n        (this.y + camera.y) * tilesize * ratio, // y of the entity\r\n        this.w * tilesize * ratio, // width of the entity\r\n        this.h * tilesize * ratio // height of the entity\r\n      );\r\n    }\r\n  }\r\n}\r\nclass Animation {\r\n  keyframesX: never[][];\r\n  keyframesY: never[][];\r\n  slowness: number;\r\n  w: any;\r\n  h: any;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  constructor(entity: { x: number; y: number; w: number; h: number }) {\r\n    /** X positions on the spritesheet */\r\n    this.keyframesX = [[], []];\r\n    /** Y positions on the spritesheet */\r\n    this.keyframesY = [[], []];\r\n    /** Defines how many game-frames should be skipped before each next animation-frame */\r\n    this.slowness = 6;\r\n\r\n    // The size of the sprite defaults to the entity size, but can be changed\r\n    this.w = entity.w;\r\n    this.h = entity.h;\r\n\r\n    // Some Animations may need an offset relative to the Entity position\r\n    this.offsetX = (entity.w - this.w) / 2;\r\n    this.offsetY = (entity.h - this.h) / 2;\r\n  }\r\n}\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","\r\nexport class Text {\r\n    content:string | string[] = '';\r\n    x:number;\r\n    y :number;\r\n    color:string;\r\n    align:CanvasTextAlign;\r\n    baseline:CanvasTextBaseline;\r\n    fontSize = 7;\r\n    font = 'Consolas, monaco, monospace';\r\n    shadow = false;\r\n    shadowColor = '#14182e';\r\n    strokeWidth = 0.3;\r\n    stroke:boolean;\r\n    strokeColor: string | CanvasGradient | CanvasPattern;\r\n    constructor(x:number, y:number, color = '#ad2f45', align = \"center\" as CanvasTextAlign, baseline = \"middle\" as CanvasTextBaseline) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = color;\r\n        this.align = align;\r\n        this.stroke=false;\r\n        this.baseline = baseline;\r\n        this.strokeColor=\"#ffffff\"\r\n\r\n    }\r\n    get shadowOffsetX() {\r\n        return this.fontSize / 200;\r\n    }\r\n    get shadowOffsetY() {\r\n        return this.fontSize / 200;\r\n    }\r\n    canvasFont(ratio:number) {\r\n        return 'bold ' + Math.round(this.fontSize * ratio) + 'px ' + this.font\r\n    }\r\n    render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera = { x: 0, y: 0 }) {\r\n        if (this.stroke) {\r\n            context.lineWidth = this.strokeWidth * ratio;\r\n            context.strokeStyle = this.strokeColor;\r\n        }\r\n        context.textBaseline = this.baseline;\r\n        context.textAlign = this.align;\r\n        context.fillStyle = this.color;\r\n        context.font = this.canvasFont(ratio);\r\n        if (typeof this.content !== \"string\") {\r\n            // Content is split into an array of lines\r\n            for (let i = 0; i < this.content.length; i++) {\r\n                if (this.stroke) {\r\n                    context.strokeText(\r\n                        this.content[i],\r\n                        (this.x + camera.x) * tilesize * ratio,\r\n                        ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                if (this.shadow) {\r\n                    context.fillStyle = this.shadowColor;\r\n                    context.fillText(\r\n                        this.content[i],\r\n                        (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                        ((this.y + camera.y + this.shadowOffsetY) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                context.fillStyle = this.color;\r\n                context.fillText(\r\n                    this.content[i],\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                );\r\n            }\r\n\r\n        } else {\r\n            /** Stroke rendering */\r\n            if (this.stroke) {\r\n                context.strokeText(\r\n                    this.content,\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    (this.y + camera.y) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Shadow rendering */\r\n            if (this.shadow) {\r\n                context.fillStyle = this.shadowColor;\r\n                context.fillText(\r\n                    this.content,\r\n                    (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                    (this.y + camera.y + this.shadowOffsetY) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Fill rendering */\r\n            context.fillStyle = this.color;\r\n            context.fillText(\r\n                this.content,\r\n                (this.x + camera.x) * tilesize * ratio,\r\n                (this.y + camera.y) * tilesize * ratio\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Text;","import { Sprite, Entity } from \"../entity\";\r\nimport { Text } from \"../text\";\r\n/**\r\n * Basic vfx class\r\n */\r\nexport class SpriteVfx extends Sprite {\r\n  source: Entity;\r\n  type = \"vfx\";\r\n  name = \"proto\";\r\n  removed = false;\r\n  randomPos = false;\r\n  randomAmount = 0.5;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx is attached\r\n   */\r\n  constructor(source: Entity) {\r\n    super(source.centerX, source.centerY);\r\n    this.source = source;\r\n  }\r\n  resolveCollisions() {}\r\n  renderShadow() {}\r\n  /** Moves this vfx coordinates in a random direction within a range defined by this.randomAmount */\r\n  randomizePos() {\r\n    this.x += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n    this.y += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n  }\r\n  /** Returns the vfx to its original state\r\n   *\r\n   * @param {Entity} source Defines the entity to which this vfx is related to\r\n   */\r\n  reset(source: Entity) {\r\n    this.source = source;\r\n    this.moveAtSource();\r\n\r\n    if (this.randomPos) {\r\n      this.randomizePos();\r\n    }\r\n    this.removed = false;\r\n    this.frame = 0;\r\n    this.frameCounter = 0;\r\n    this.additionalResetOperations();\r\n  }\r\n  /** Each vfx may have different reset options */\r\n  additionalResetOperations() {}\r\n  moveAtSource() {\r\n    this.x = this.source.centerX - this.w / 2;\r\n    this.y = this.source.centerY - this.h / 2;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n  onAnimationEnd() {\r\n    this.removed = true;\r\n  }\r\n}\r\n/** DmgVfxs have 4 random animations and 4 random rotations */\r\nexport class DmgVfx extends SpriteVfx {\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"DmgVfx\";\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.randomPos = true;\r\n    this.randomizePos();\r\n    this.setAnimation(\"boom\", [17, 17, 17, 17], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut\", [18, 18, 18, 18], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut_long\", [20, 20, 20, 20], [0, 1, 2, 3]);\r\n    this.animations[\"cut_long\"].w = 2;\r\n    this.additionalResetOperations();\r\n  }\r\n  additionalResetOperations() {\r\n    let animations = Object.entries(this.animations);\r\n    /** Assign a random animation */\r\n    this.animation = animations[(Math.random() * animations.length) | 0][0];\r\n    let rotations = [0, 90, 180, -90];\r\n    this.rot = rotations[(Math.random() * rotations.length) | 0];\r\n  }\r\n}\r\n/** Represents a single particle */\r\nclass Particle extends Sprite {\r\n  verticalSpeed = -0.03;\r\n  x: number;\r\n  y: number;\r\n  source: Entity;\r\n  lifeCycles: number;\r\n  remainingCycles: number;\r\n  constructor(source: Entity, particleDuration = 5) {\r\n    super(source.x, source.y);\r\n    this.setAnimation(\"idle\", [19, 19, 19, 19], [0, 1, 2, 3]);\r\n    this.source = source;\r\n    this.lifeCycles = particleDuration;\r\n    this.remainingCycles = this.lifeCycles;\r\n    this.x = source.x + source.w / 2 + Math.random() * 1.5 - 0.75 - this.w / 2;\r\n    this.y = source.y + source.h / 2 + Math.random() * 1.5 - 0.75 - this.h / 2;\r\n    this.x -= this.w / 2;\r\n    this.y -= this.h / 2;\r\n  }\r\n  get randomX() {\r\n    return (\r\n      this.source.x +\r\n      this.source.w / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.w / 2\r\n    );\r\n  }\r\n  get randomY() {\r\n    return (\r\n      this.source.y +\r\n      this.source.h / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.h / 2\r\n    );\r\n  }\r\n  reset(source: Entity, lifeCycles: number) {\r\n    this.source = source;\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n    this.removed = false;\r\n    this.remainingCycles = lifeCycles || this.lifeCycles;\r\n  }\r\n  onAnimationEnd() {\r\n    this.remainingCycles--;\r\n    if (this.remainingCycles <= 0) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.y += this.verticalSpeed * deltaTime;\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: 0; y: 0 }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n/** Holds multiple Particle objects, which on death respawns for a said amount of times */\r\nexport class ParticlesVfx extends SpriteVfx {\r\n  particlesDuration = 5;\r\n  /** The numbers of particles */\r\n  particlesAmount = 5;\r\n  particles:Particle[] = [];\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"ParticlesVfx\";\r\n    /** Amount of particles lifetime */\r\n    this.particlesDuration = 5;\r\n    /** The numbers of particles */\r\n    this.particlesAmount = 5;\r\n    this.particles = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    /** Creates the particles */\r\n    for (let i = 0; i < this.particlesAmount; i++) {\r\n      this.particles.push(new Particle(this.source, this.particlesDuration));\r\n    }\r\n  }\r\n  additionalResetOperations() {\r\n    for (let particle of this.particles) {\r\n      particle.reset(this.source, this.particlesDuration);\r\n    }\r\n  }\r\n  compute(deltaTime:number) {\r\n    let removedCount = 0;\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        removedCount++;\r\n        continue;\r\n      }\r\n      particle.compute(deltaTime);\r\n    }\r\n    if (removedCount === this.particles.length) {\r\n      this.removed = true;\r\n    }\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        continue;\r\n      }\r\n      particle.render(context, tilesize, ratio, camera);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Displays text in the form of a vfx\r\n */\r\nexport class TextVfx extends SpriteVfx {\r\n    name = \"TextVfx\";\r\n    text = new Text(0, 0);\r\n    progress = 0;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx attaches\r\n   */\r\n  constructor(source:Entity) {\r\n    super(source);\r\n    this.text.content = \"\";\r\n    // Red by default\r\n    this.text.color = \"#ad2f45\";\r\n    this.text.shadow = true;\r\n    this.text.fontSize = 10;\r\n  }\r\n  reset(source:Entity, content = \"\") {\r\n    this.removed = false;\r\n    this.progress = 0;\r\n    this.text.content = content;\r\n    this.source = source;\r\n  }\r\n  compute(deltaTime:number) {\r\n    this.progress += (Math.PI / 60) * deltaTime;\r\n    if (this.progress >= Math.PI) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.source.centerX + this.progress / 10;\r\n    this.y = this.source.centerY - Math.sin(this.progress);\r\n    this.text.x = this.x;\r\n    this.text.y = this.y;\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    this.text.render(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n","/** \r\n *  Acts as intermediate between the manager and the entities,\r\n *  the entities have a reference to this class OBJECT \r\n */\r\nimport * as Vfxs from \"./vfxs\";\r\nimport { Entity} from \"../entity\"\r\nexport { vfxManager, Vfxs };\r\n\r\ntype VfxClass= keyof typeof Vfxs\r\n/** Singleton */\r\nclass VfxManager {\r\n    /** Instead of being deleted, removed Vfxs gets moved here to be reused later, gets populated by the gameDirector */\r\n    recyclePool:Vfxs.SpriteVfx[] = [];\r\n    environment:Vfxs.SpriteVfx[] = [];\r\n    /** Contains vfx classes declarations */\r\n    vfxClasses = {...Vfxs};\r\n    constructor() {\r\n    }\r\n    setEnvironment(environment:Vfxs.SpriteVfx[]) {\r\n        this.environment = environment;\r\n    }\r\n    /** Returns a recycled vfx or FALSE */\r\n    getRecycledVfx(vfxName:string, source:Entity) {\r\n        for (let i = this.recyclePool.length - 1; i >= 0; i--) {\r\n            if (this.recyclePool[i].name === vfxName) {\r\n                /** Found a matching Vfx */\r\n                this.recyclePool[i].reset(source);\r\n                return this.recyclePool.splice(i, 1)[0];\r\n            }\r\n        }\r\n        /** Matching Vfx was not found */\r\n        return false;\r\n    }\r\n    /** Returns a Vfx of the requested type and pushes it into the current level entities, this function gets imported and called by entities */\r\n    create = (vfxName:VfxClass, source:Entity) => {\r\n        let vfx = this.getRecycledVfx(vfxName, source) || new this.vfxClasses[vfxName](source);\r\n        this.environment.push(vfx);\r\n        return vfx;\r\n    }\r\n}\r\nconst vfxManager = new VfxManager();","\r\nclass SoundManager {\r\n    playbackRate:number = 1;\r\n    volume:number = 1;\r\n    sounds:any = {\r\n        playRandom: (soundsArray:string[]) => {\r\n            this.sounds[soundsArray[(Math.random() * soundsArray.length | 0)]].play()\r\n        }\r\n    };\r\n    soundsBaseUrl = 'assets/soundFxs/';\r\n    constructor() {\r\n    }\r\n    /** takes an argument the sound file name (without extension) from the relative path in soundsBaseUrl */\r\n    createSound = (relativeUrl:string, loop = false, volume = 1, playbackRate = 1) => {\r\n        let fullUrl = `${this.soundsBaseUrl}${relativeUrl}.mp3`;\r\n        let splittedUrl = relativeUrl.split('/');\r\n        /** Extrapolates the name from the url */\r\n        let name = splittedUrl[splittedUrl.length - 1];\r\n        this.sounds[name] = new CustomAudio(fullUrl, loop, volume, playbackRate);\r\n    }\r\n}\r\nclass CustomAudio {\r\n    audio:HTMLAudioElement;\r\n    loop:boolean = false;\r\n    volume:number = 1;\r\n    playbackRate:number = 1;\r\n    calledPlayPromise = false;\r\n    constructor(url:string, loop = false, volume = 1, playbackRate = 1) {\r\n        this.audio = new Audio(url);\r\n        this.loop = loop;\r\n        this.volume = volume;\r\n        this.playbackRate = playbackRate;\r\n    }\r\n    play = (customVolume = 1, customPlaybackRate = 1) => {\r\n        if (this.calledPlayPromise) {\r\n            /** A play promise has been already called, do nothing */\r\n            return false;\r\n        }\r\n        /** Sets the audio volume */\r\n        this.audio.volume = this.volume * customVolume;\r\n        /** Sets the audio volume */\r\n        this.audio.loop = this.loop;\r\n        /** Sets the audio speed */\r\n        this.audio.playbackRate = this.playbackRate * customPlaybackRate;\r\n\r\n        if (this.audio.paused) {\r\n            /** If the audio is paused, just play it */\r\n            if (!this.audio.loop) {\r\n                /** If it isn't a loop reset the time */\r\n                this.audio.currentTime = 0;\r\n            }\r\n        } else {\r\n            /** If the audio is already running */\r\n            if (this.audio.loop) {\r\n                /** If it is a loop, do nothing */\r\n                return;\r\n            }\r\n            this.audio.pause();\r\n            this.audio.currentTime = 0;\r\n        }\r\n        /** Call the play promise */\r\n        let promise = this.audio.play();\r\n        this.calledPlayPromise = true;\r\n        if (promise !== undefined) {\r\n            promise.catch((e)=>{\r\n                /** Error response */\r\n                console.warn(\"there was an audio error!\", e)\r\n                this.calledPlayPromise = false;\r\n            }).then(() => {\r\n                this.calledPlayPromise = false;\r\n            })\r\n        }\r\n    }\r\n}\r\nconst soundManager = new SoundManager();\r\nexport { soundManager };\r\nexport default soundManager;\r\n/** Player sounds */\r\n// eg. sound creation\r\n// soundManager.createSound('sword-attack');\r\n// soundManager.createSound('sword-hit');\r\n// soundManager.createSound('pick-up');\r\n// soundManager.createSound('damaged');","import { checkCollisions } from \"../physics/checkCollisions\";\r\nimport * as Physics from \"../physics\";\r\nimport { Sprite } from \"./sprite\";\r\nimport { vfxManager } from \"../vfxManager\";\r\nimport { soundManager } from \"../soundManager\";\r\nexport class Entity extends Sprite {\r\n  xVel: number = 0;\r\n  yVel: number = 0;\r\n  // External velocities (velocities acquired from external sources, like a strong hit)\r\n  xVelExt: number = 0;\r\n  yVelExt: number = 0;\r\n  speed: number = 0.1;\r\n  friction: number = 0;\r\n  type: string = \"entity\";\r\n  state: string = \"idle\";\r\n  sounds: { playRandom: (soundsArray: any[]) => void } = soundManager.sounds;\r\n  stats: Stats = new Stats();\r\n  /** Defines whether this entity has low rendering order priority */\r\n  background: boolean = false;\r\n  /** Defines whether this entity is attached to the ground*/\r\n  grounded: boolean = false;\r\n  damaged: number = 0;\r\n  shadow: boolean = false;\r\n  solid: boolean = true;\r\n  removed: boolean = false;\r\n  immovable: boolean = false;\r\n  /** The id of the room where this entity is stored */\r\n  currentRoom: number = -1;\r\n  drops: any[] = [];\r\n  offsetX: number = 0;\r\n  offsetY: number = 0;\r\n  Physics: typeof Physics = Physics;\r\n  hasHpBar: boolean = false;\r\n  hasDisplayName: boolean = false;\r\n  /** Object containing the collisions amounts */\r\n  col: {\r\n    L: number; // Left side\r\n    R: number; // Right side\r\n    T: number; // Top side\r\n    B: number;\r\n  } = { L: 0, R: 0, T: 0, B: 0 };\r\n  /** Object representing the hitbox used for collision computations */\r\n  hitbox: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n  /** Represents the offsets of the hitbox, which may change based on current animation/state */\r\n  hitboxOffset: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n  createVfx: (vfxName: any, source: any) => any = vfxManager.create;\r\n  checkCollisions: (\r\n    obj: any,\r\n    entities: any,\r\n    deltaTime?: number\r\n  ) => false | undefined = checkCollisions;\r\n  constructor(x: number=0, y: number=0) {\r\n    super(x, y);\r\n\r\n    this.updateHitbox();\r\n  }\r\n  /** Returns the stats.atk value */\r\n  get atk() {\r\n    return this.stats.atk;\r\n  }\r\n\r\n  /** Returns the stats.hp value */\r\n  get hp() {\r\n    return this.stats.hp;\r\n  }\r\n\r\n  /** Returns the stats.maxHp value */\r\n  set hp(value) {\r\n    this.stats.hp = value;\r\n  }\r\n\r\n  get centerX() {\r\n    return this.x + this.w / 2;\r\n  }\r\n  get centerY() {\r\n    return this.y + this.h / 2;\r\n  }\r\n\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties */\r\n  updateHitbox() {\r\n    this.hitbox.x = this.x + this.hitboxOffset.x;\r\n    this.hitbox.y = this.y + this.hitboxOffset.y;\r\n    this.hitbox.w = this.w + this.hitboxOffset.w;\r\n    this.hitbox.h = this.h + this.hitboxOffset.h;\r\n  }\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties\r\n   * @param {Entity} collider A reference to the entity collided to this one\r\n   */\r\n  onCollision(collider: Entity) {\r\n    // Collision events gets defined by children classes\r\n  }\r\n\r\n  /** Adjusts this entity's velocities according to collisions */\r\n  resolveCollisions() {\r\n    // Checks wether the entity is traveling against eventual colliding sides\r\n    if (this.col.L && this.xVel + this.xVelExt < 0) {\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.R && this.xVel + this.xVelExt > 0) {\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.T && this.yVel + this.yVelExt < 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    if (this.col.B && this.yVel + this.yVelExt > 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    // Resets the collision properties\r\n    this.col.L = 0;\r\n    this.col.R = 0;\r\n    this.col.T = 0;\r\n    this.col.B = 0;\r\n  }\r\n  /**\r\n   * Similar to the *onCollision* method, gets called whenever this entity collides with a damaging Entity,\r\n   * which could be a spell, an attack, or an obstacle\r\n   * @param {Entity} source The source of the attack\r\n   */\r\n  onHit(source: Entity) {\r\n    this.xVelExt = source.xVel;\r\n    this.yVelExt = source.yVel;\r\n  }\r\n  /**\r\n   * Updates the external velocities according to the friction\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateVelocities(deltaTime: number) {\r\n    if (this.xVelExt !== 0) {\r\n      this.xVelExt *= Math.pow(this.friction, deltaTime);\r\n      if (Math.abs(this.xVelExt) < 0.001) {\r\n        this.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.yVelExt !== 0) {\r\n      this.yVelExt *= Math.pow(this.friction, deltaTime);\r\n      if (Math.abs(this.yVelExt) < 0.001) {\r\n        this.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n  /** Moves this entity according to its velocities\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updatePosition(deltaTime: number) {\r\n    this.resolveCollisions();\r\n    this.x += (this.xVel + this.xVelExt) * deltaTime;\r\n    this.y += (this.yVel + this.yVelExt) * deltaTime;\r\n  }\r\n\r\n  /**\r\n   * Handles the computational aspects of the entity\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  compute(deltaTime: number) {}\r\n\r\n  /**\r\n   * Handles the rendering of this entity and eventual renderable children (e.g. Equipment, Shadow, etc..)\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ) {\r\n    //this.renderSprite(context, tilesize, ratio, camera);\r\n    this.renderSquare(context, tilesize, ratio, camera);\r\n  }\r\n\r\n  /** Used for debugging, displays the entity's hitbox\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    context.strokeStyle = \"red\";\r\n    context.beginPath();\r\n    context.strokeRect(\r\n      (this.hitbox.x + camera.x) * tilesize * ratio,\r\n      (this.hitbox.y + camera.y) * tilesize * ratio,\r\n      this.hitbox.w * tilesize * ratio,\r\n      this.hitbox.h * tilesize * ratio\r\n    );\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n\r\n  /** Casts an elliptical shadow just below this entity\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderShadow(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    if (!this.shadow || this.removed) {\r\n      return;\r\n    }\r\n    // Provisional shadow rendering\r\n    context.fillStyle = \"#14182e\";\r\n    context.globalAlpha = 0.6;\r\n    context.strokeStyle = \"#ffffff\";\r\n    context.beginPath();\r\n    context.ellipse(\r\n      (this.x + camera.x + this.w / 2) * tilesize * ratio,\r\n      (this.y + this.h + camera.y) * tilesize * ratio,\r\n      (this.w / 2) * tilesize * ratio,\r\n      (this.w / 4) * tilesize * ratio,\r\n      0,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n    context.closePath();\r\n    context.fill();\r\n    context.globalAlpha = 1;\r\n  }\r\n}\r\n\r\n/** Class representing the basic stats of an entity */\r\nclass Stats {\r\n  lv: number;\r\n  maxHp: number;\r\n  hp: any;\r\n  maxExp: number;\r\n  exp: number;\r\n  maxMana: number;\r\n  mana: any;\r\n  atk: number;\r\n  atkSpeed: number;\r\n  expValue: number;\r\n  constructor() {\r\n    /* The current level, level augments every other stat */\r\n    this.lv = 1;\r\n    /* Maximum hit points */\r\n    this.maxHp = 10;\r\n    /* Current hit points, hp <= 0 will result in an entity's death  */\r\n    this.hp = this.maxHp;\r\n    /* Threshold experience */\r\n    this.maxExp = 10;\r\n    /* Current experience, reaching the threshold will result in a level up */\r\n    this.exp = 0;\r\n    /* Maximum mana */\r\n    this.maxMana = 15;\r\n    /* Current mana, the mana is a currency used to cast spells/perform special actions */\r\n    this.mana = this.maxMana;\r\n\r\n    /* The attack stat, represents how many hit points will get subtracted to other entities when getting attacked by this one */\r\n    this.atk = 1;\r\n    /* Multiplier of the rate at which this entity attacks, the higher it is, the lower the intervals */\r\n    this.atkSpeed = 1;\r\n    /* The experience value that this entity will transfer to the killer entity */\r\n    this.expValue = 1;\r\n  }\r\n}\r\nexport { Sprite };\r\nexport default Entity;\r\n","/**\r\n * The Controls class initializes the input listeners and tracks changes.\r\n */\r\nexport class Controls {\r\n  up: boolean;\r\n  down: boolean;\r\n  left: boolean;\r\n  right: boolean;\r\n  upR: boolean;\r\n  downR: boolean;\r\n  leftR: boolean;\r\n  rightR: boolean;\r\n  spacebar: boolean;\r\n  e: boolean;\r\n  lClickDown: boolean;\r\n  mClickDown: boolean;\r\n  rClickDown: boolean;\r\n  test: string;\r\n  currentPos: number;\r\n  lastDir: number;\r\n  mouseX: number;\r\n  mouseY: number;\r\n  constructor() {\r\n    this.up = false;\r\n    this.down = false;\r\n    this.left = false;\r\n    this.right = false;\r\n    this.upR = false;\r\n    this.downR = false;\r\n    this.leftR = false;\r\n    this.rightR = false;\r\n    this.spacebar = false;\r\n    this.e = false;\r\n    this.lClickDown = false;\r\n    this.mClickDown = false;\r\n    this.rClickDown = false;\r\n    this.test = \"test\";\r\n    this.currentPos = 0;\r\n    this.lastDir = 0;\r\n    this.mouseX = 0;\r\n    this.mouseY = 0;\r\n    this.initListeners();\r\n  }\r\n  initListeners() {\r\n    document.addEventListener(\"mousedown\", handleMouseEvt);\r\n    document.addEventListener(\"mouseup\", handleMouseEvt);\r\n    document.addEventListener(\"keydown\", handleKeyboardEvt);\r\n    document.addEventListener(\"keyup\", handleKeyboardEvt);\r\n    const that = this;\r\n    function handleKeyboardEvt(evt: KeyboardEvent) {\r\n      const isDown = evt.type === \"keydown\";\r\n      switch (evt.key) {\r\n        case \"w\": //up\r\n          that.up = isDown;\r\n          break;\r\n        case \"s\": //down\r\n          that.down = isDown;\r\n          break;\r\n        case \"a\": //left\r\n          that.left = isDown;\r\n          break;\r\n        case \"d\": //right\r\n          that.right = isDown;\r\n          break;\r\n        case \"ArrowUp\": //down\r\n          that.upR = isDown;\r\n          break;\r\n        case \"ArrowDown\": //down\r\n          that.downR = isDown;\r\n          break;\r\n        case \"ArrowLeft\": //left\r\n          that.leftR = isDown;\r\n          break;\r\n        case \"ArrowRight\": //right\r\n          that.rightR = isDown;\r\n          break;\r\n        case \" \":\r\n          that.spacebar = isDown;\r\n          break;\r\n        case \"e\": //e\r\n          that.e = isDown;\r\n          break;\r\n        case \"Escape\": // Escape\r\n          break;\r\n        case \"y\": //y\r\n          //toggleFullScreen();\r\n          break;\r\n        //debug\r\n        default:\r\n          console.log(`Pressed \"${evt.key}\" key`);\r\n          break;\r\n      }\r\n    }\r\n    function handleMouseEvt(evt: MouseEvent) {\r\n      const isDown = evt.type === \"mousedown\";\r\n      switch (evt.button) {\r\n        case 0:\r\n          that.lClickDown = isDown;\r\n          break;\r\n        case 1:\r\n          that.mClickDown = isDown;\r\n          break;\r\n        case 2:\r\n          that.rClickDown = isDown;\r\n          break;\r\n      }\r\n      that.mouseX = evt.clientX;\r\n      that.mouseY = evt.clientY;\r\n    }\r\n  }\r\n}\r\n","export type MetaLike = {\r\n  tilesize: number;\r\n  ratio: number;\r\n};\r\nexport type CameraLike = {\r\n  x: number;\r\n  y: number;\r\n};\r\nexport class Mouse {\r\n  x = 0;\r\n  y = 0;\r\n  canvas: HTMLCanvasElement;\r\n  meta: MetaLike;\r\n  camera: CameraLike;\r\n  /** Absolute position of the mouse (doesn't take to account the camera offsets) */\r\n  absolute = {\r\n    x: 0,\r\n    y: 0,\r\n    /** Defines if the mouse is hovering an user interface element */\r\n    hoverUI: false,\r\n    /** Defines if the mouse is currently dragging an user interface element */\r\n    dragging: false,\r\n    /** A reference to whatever the mouse is currently dragging */\r\n    slot: {},\r\n  };\r\n  lastMouseX = 0;\r\n  lastMouseY = 0;\r\n  /**\r\n   * Creates a Mouse object\r\n   * @param {HTMLCanvasElement} canvas The canvas HTML element\r\n   * @param {Meta} meta  Meta informations\r\n   * @param {Camera | any} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  constructor(canvas: HTMLCanvasElement, meta: MetaLike, camera: CameraLike) {\r\n    this.canvas = canvas;\r\n    this.meta = meta;\r\n    this.camera = camera;\r\n    document.addEventListener(\"mousemove\", this.updatePos);\r\n  }\r\n  /**\r\n   * Translates the mouse event coordinates into canvas coordinates, relatively to the tilesize/ratio multipliers and the camera offsets\r\n   * @param {*} evt Event object containing information about the mouse pointer position within the browser\r\n   */\r\n  updatePos = (\r\n    evt: { clientX: number; clientY: number } = {\r\n      clientX: this.lastMouseX,\r\n      clientY: this.lastMouseY,\r\n    }\r\n  ) => {\r\n    this.lastMouseX = evt.clientX;\r\n    this.lastMouseY = evt.clientY;\r\n    this.x =\r\n      -this.camera.x +\r\n      (evt.clientX - this.canvas.offsetLeft) /\r\n        this.meta.tilesize /\r\n        this.meta.ratio;\r\n    this.y =\r\n      -this.camera.y +\r\n      (evt.clientY - this.canvas.offsetTop) /\r\n        this.meta.tilesize /\r\n        this.meta.ratio;\r\n\r\n    this.absolute.x =\r\n      (evt.clientX - this.canvas.offsetLeft) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n    this.absolute.y =\r\n      (evt.clientY - this.canvas.offsetTop) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n  };\r\n}\r\nexport default Mouse;","import Entity from \"../../entity\";\r\n\r\nexport class Scythe extends Entity {\r\n  source: Entity;\r\n  constructor(source: Entity) {\r\n    super(source.x, source.y);\r\n    this.rot = source.rot + 1;\r\n    this.w = 4;\r\n    this.h = 3;\r\n    this.source = source;\r\n    this.setAnimation(\"idle\",[2],[0])\r\n  }\r\n  follow(deltaTime: number) {\r\n    this.x += ((this.source.x + this.source.w / 2 - this.w / 2)-this.x)/3 * deltaTime;\r\n    this.y += ((this.source.y + this.source.h / 2 - this.h / 2)-this.y)/3 * deltaTime;\r\n    // Handle the case when the rot is back to 0\r\n    // 3.14 / -3.14\r\n    // add +1\r\n    const target=this.source.rot+1;\r\n    if(target - this.rot>Math.PI){\r\n      this.rot+=Math.PI*2;\r\n    }else if(target - this.rot<-Math.PI){      \r\n      this.rot-=Math.PI*2;\r\n\r\n    }else{\r\n      this.rot += ((target - this.rot) / 12) * deltaTime;\r\n    }\r\n  }\r\n  attack() {}\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera?: {\r\n      x: number;\r\n      y: number;\r\n    }\r\n  ) {\r\n    const pivot = {x:this.w/2,y:this.h/2}\r\n    this.renderSprite(context, tilesize, ratio, camera,pivot);\r\n  }\r\n}\r\n","import { Entity, Sprite } from \"../../entity\";\r\nimport { Controls } from \"../../controls\";\r\nimport { Mouse, MetaLike, CameraLike } from \"../../mouse\";\r\nimport { Scythe } from \"./scythe\";\r\nexport class Player extends Entity {\r\n  controls: Controls;\r\n  mouse: Mouse;\r\n  scythe: Scythe;\r\n  mantle: Sprite;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    canvas: HTMLCanvasElement,\r\n    meta: MetaLike,\r\n    camera: CameraLike\r\n  ) {\r\n    super(x, y);\r\n    this.mouse = new Mouse(canvas, meta, camera);\r\n    this.controls = new Controls();\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.setAnimation(\"idle\", [0], [0]);\r\n\r\n    this.scythe = new Scythe(this);\r\n\r\n    this.mantle = new Sprite(this.x, this.y);\r\n    this.mantle.w=2;\r\n    this.mantle.h=2;\r\n    this.mantle.setAnimation(\"idle\", [0,0,0,0], [1, 3, 5, 7]);\r\n\r\n  }\r\n  resolveInputs() {\r\n    // Moves\r\n    if (this.controls.left && !this.controls.right && !this.col.L) {\r\n      this.xVel = -this.speed;\r\n      this.left = 1;\r\n    } else if (this.xVel < 0) {\r\n      this.xVel = 0;\r\n    }\r\n    if (this.controls.right && !this.controls.left && !this.col.R) {\r\n      this.xVel = this.speed;\r\n      this.left = 0;\r\n    } else if (this.xVel > 0) {\r\n      this.xVel = 0;\r\n    }\r\n    if (this.controls.up && !this.controls.down && !this.col.B) {\r\n      this.yVel = -this.speed;\r\n    } else if (this.yVel < 0) {\r\n      this.yVel = 0;\r\n    }\r\n    if (this.controls.down && !this.controls.up && !this.col.T) {\r\n      this.yVel = this.speed;\r\n    } else if (this.yVel > 0) {\r\n      this.yVel = 0;\r\n    }\r\n    if (\r\n      !this.controls.left &&\r\n      !this.controls.right &&\r\n      !this.controls.up &&\r\n      !this.controls.down\r\n    ) {\r\n      this.xVel = 0;\r\n      this.yVel = 0;\r\n    }\r\n    if (\r\n      +this.controls.left +\r\n        +this.controls.right +\r\n        +this.controls.up +\r\n        +this.controls.down >\r\n      1\r\n    ) {\r\n      this.xVel /= 1.42;\r\n      this.yVel /= 1.42;\r\n    }\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.rot =\r\n      this.Physics.getAngle({\r\n        x1: this.x + this.w / 2,\r\n        y1: this.y + this.h / 2,\r\n        x2: this.mouse.x,\r\n        y2: this.mouse.y,\r\n      }) +\r\n      Math.PI * 2;\r\n    this.resolveInputs();\r\n    this.updateVelocities(deltaTime);\r\n    this.updatePosition(deltaTime);\r\n    this.updateHitbox();\r\n    \r\n    this.scythe.follow(deltaTime);\r\n    this.mantle.updateSprite(deltaTime);\r\n    this.mantle.x += ((this.x + this.w / 2 - this.mantle.w / 2)-this.mantle.x)/5 * deltaTime;\r\n    this.mantle.y += ((this.y + this.h / 2 - this.mantle.h / 2)-this.mantle.y)/5 * deltaTime;\r\n    this.mantle.rot=this.rot;\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera?: {\r\n      x: number;\r\n      y: number;\r\n    }\r\n  ) {\r\n    this.mantle.renderSprite(context, tilesize, ratio, camera);\r\n    this.scythe.render(context, tilesize, ratio, camera);\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n}\r\nexport default Player;\r\n","import \"./styles/index.css\";\r\nimport { canvas, c, clear } from \"./modules/canvas\";\r\nimport { Entity } from \"./modules/entity\";\r\nimport { Controls } from \"./modules/controls\";\r\nimport { meta, Meta } from \"./modules/meta\";\r\nimport {Player} from \"./modules/actors/player\"\r\n\r\nconst entities: EntityLike[] = [];\r\nconsole.log(entities)\r\n// configuring meta variables\r\nmeta.tilesize=32;\r\nmeta.ratio=1;\r\nconst camera = { x: 0, y: 0 };\r\n\r\nentities.push(new Player(5, 5,canvas,meta,camera));\r\n\r\nconst loop = (meta: Meta) => {\r\n  clear();\r\n  meta.compute()\r\n  for (const entity of entities) {\r\n    entity.compute(meta.deltaTime);\r\n  }\r\n  for (const entity of entities) {\r\n    entity.render(c, meta.tilesize, meta.ratio, camera);\r\n  }\r\n  meta.compute();\r\n  requestAnimationFrame(() => loop(meta));\r\n};\r\n\r\nloop(meta)\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","canvas","document","createElement","center","element","style","position","left","window","innerWidth","width","top","innerHeight","height","body","appendChild","oncontextmenu","event","preventDefault","addEventListener","c","getContext","_typeof","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_defineProperties","target","props","i","length","descriptor","configurable","writable","Constructor","protoProps","staticProps","instance","imageSmoothingEnabled","meta","_createClass","Meta","_this","_classCallCheck","tilesize","baseRatio","ratio","this","fps","displayFps","deltaTime","targetFrames","perfectFrameTime","lastTimestamp","Date","now","timestamp","loopType","baseTilesWidth","baseTilesHeight","tilesWidth","tilesHeight","init","fpsSpan","color","setInterval","fpsCounter","compute","updateDeltaTime","span","innerHTML","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","arguments","apply","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","allowArrayLike","it","isArray","minLen","n","toString","slice","name","from","test","F","s","done","_e","f","err","normalCompletion","didErr","step","next","_e2","checkCollisions","entities","solid","_step","_iterator","entity","collisionException","collided","onCollision","resolveException","colCheck","simpleCollisionCheck","xVel","xVelExt","yVel","yVelExt","velocitiesX","velocitiesY","objHitbox","hitbox","broadHitbox","x","y","w","h","colPointsVector","ct","cp","cn","levelChange","dynamicRectVsRect","push","id","sort","a","b","_i","_colPointsVector","resolveDynamicRectVsRect","rectB","contactNormal","contactTime","overlapFixMultiplier","Math","abs","rectA","contactPoint","expanded","origin","direction","timeHitNear","inverseDir","timeNear","timeFar","isNaN","temp","max","min","rayVsRect","removed","grounded","forceSpriteBox","rect1","rect2","shapeA","shapeB","shapeAA","shapeBB","vX","vY","hWidths","hHeights","colDir","oX","oY","col","T","B","L","R","assembleChunk","chunk","assembledChunks","brokenChunk","j","k","part","firstBlock","pointRectCol","point","rectangle","rect","lineRectCol","line","sq","squareLines","getRectSides","intersect","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","ub","sides","getAngle","_ref","deltaX","deltaY","atan2","cosSin","_ref2","rotation","cos","sin","getRotation","obj1","obj2","distance","sqrt","pow","spritesheet","Image","src","Sprite","sheet","animation","animations","display","frame","frameCounter","rot","label","context","camera","drawImage","keyframesX","keyframesY","slowness","onAnimationEnd","Animation","pivot","save","translate","offsetX","offsetY","rotate","restore","console","log","fillRect","_defineProperty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","Text","align","baseline","content","fontSize","font","shadow","shadowColor","strokeWidth","stroke","strokeColor","round","lineWidth","strokeStyle","textBaseline","textAlign","fillStyle","canvasFont","strokeText","fillText","shadowOffsetX","shadowOffsetY","SpriteVfx","_Sprite","_super","source","centerX","centerY","type","randomPos","randomAmount","random","moveAtSource","randomizePos","additionalResetOperations","updateSprite","renderSprite","DmgVfx","_SpriteVfx","_super2","_this2","setAnimation","entries","rotations","Particle","_Sprite2","_super3","_this3","particleDuration","verticalSpeed","lifeCycles","remainingCycles","randomX","randomY","ParticlesVfx","_SpriteVfx2","_super4","_this4","particlesDuration","particlesAmount","particles","initialize","reset","_step2","removedCount","_iterator2","particle","_step3","_iterator3","render","TextVfx","_SpriteVfx3","_super5","_this5","text","progress","PI","VfxManager","recyclePool","environment","vfxClasses","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","Vfxs","vfxName","vfx","getRecycledVfx","splice","vfxManager","SoundManager","playbackRate","volume","sounds","playRandom","soundsArray","play","soundsBaseUrl","createSound","relativeUrl","loop","fullUrl","concat","splittedUrl","split","CustomAudio","url","audio","calledPlayPromise","customVolume","customPlaybackRate","paused","currentTime","pause","promise","catch","warn","then","Audio","soundManager","Entity","speed","friction","state","stats","Stats","background","damaged","immovable","currentRoom","drops","Physics","hasHpBar","hasDisplayName","hitboxOffset","createVfx","updateHitbox","atk","hp","set","collider","resolveCollisions","renderSquare","beginPath","strokeRect","closePath","globalAlpha","ellipse","fill","lv","maxHp","maxExp","exp","maxMana","mana","atkSpeed","expValue","Controls","up","down","right","upR","downR","leftR","rightR","spacebar","lClickDown","mClickDown","rClickDown","currentPos","lastDir","mouseX","mouseY","initListeners","handleMouseEvt","handleKeyboardEvt","that","evt","isDown","button","clientX","clientY","Mouse","absolute","hoverUI","dragging","slot","lastMouseX","lastMouseY","updatePos","offsetLeft","offsetTop","Scythe","_Entity","Player","controls","mouse","scythe","mantle","resolveInputs","updateVelocities","updatePosition","follow","clearRect","_entities","_i2","_entities2","requestAnimationFrame"],"sourceRoot":""}
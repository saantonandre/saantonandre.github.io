{"version":3,"file":"static/js/main.b5a40406.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","modules/entity/Sprite.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","modules/physics/checkCollisions.ts","modules/physics/index.ts","modules/text/Text.ts","modules/vfxManager/vfxs.ts","modules/vfxManager/VfxManager.ts","modules/soundManager/SoundManager.ts","modules/entity/Entity.ts","modules/controls/Controls.ts","modules/mouse/Mouse.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","modules/debug/Debug.ts","modules/actors/player/Sword.ts","modules/actors/player/Player.ts","modules/camera/Camera.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","modules/canvas/GameCanvas.ts","modules/meta/Meta.ts","game/game.ts","index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","// Default spritesheet\r\nimport spritesheet from \"assets/sheet.png\";\r\nconst sheet = new Image();\r\nsheet.src = spritesheet;\r\n\r\n/** Class representing a sprite,\r\n * i.e. an object capable of iterating through a set of image frames, creating the illusion of animation.\r\n */\r\nexport class Sprite {\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  /** Each entity has the same spritesheet by default, but it can be changed */\r\n  sheet: HTMLImageElement = sheet;\r\n  /** Whenever a new animation is created, it will end up here */\r\n  animations: Record<string, Animation> = {};\r\n  /** The animation currently rendering (defaults to 'idle') */\r\n  animation: keyof typeof this.animations = \"idle\";\r\n  /** Toggle used to skip this entity's rendering, for a reason or another */\r\n  display: boolean = true;\r\n  /** Defines if this sprite is facing to the left */\r\n  left: number = 0;\r\n  /** Represents the current frame of the current sprite animation */\r\n  frame: number = 0;\r\n  /** Counts the amount of rendering iterations since the last animation frame change */\r\n  frameCounter: number = 0;\r\n  removed: boolean = false;\r\n  rot: number = 0;\r\n  trackPos: boolean = false;\r\n  prevPos: { x: number; y: number; rot: number; opacity: number }[] = [];\r\n  addPos = () => {\r\n    this.prevPos.unshift({\r\n      x: this.x,\r\n      y: this.y,\r\n      rot: this.rot,\r\n      opacity: 0.6,\r\n    });\r\n  };\r\n  /**\r\n   * Creates a new Sprite object at the given coordinates and of the specified size.\r\n   * Commonly used as an extension to children classes, like entities or visual effects.\r\n   *\r\n   * *Note: Coordinates and sizes are expressed in tilesize units*\r\n   * @param {Number} x Horizontal coordinate relative to the drawing environment\r\n   * @param {Number} y Vertical coordinate relative to the drawing environment\r\n   * @param {Number} w Width\r\n   * @param {Number} h Height\r\n   */\r\n  constructor(x: number, y: number, w: number = 1, h: number = 1) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = w;\r\n    this.h = h;\r\n    // eg. setting an animation:\r\n    //this.setAnimation(\"idle\", [0], [0]);\r\n  }\r\n  get centerX() {\r\n    return this.x + this.w / 2;\r\n  }\r\n  get centerY() {\r\n    return this.y + this.h / 2;\r\n  }\r\n  get centerPoint() {\r\n    return { x: this.centerX, y: this.centerY };\r\n  }\r\n  /** Returns true if the animation has changed, false otherwise\r\n   *  Usage example: this.loadAnimation('attack')\r\n   */\r\n  loadAnimation(label: string) {\r\n    if (this.animation === label) {\r\n      return false;\r\n    }\r\n    this.frameCounter = 0;\r\n    this.frame = 0;\r\n    this.animation = label;\r\n    return true;\r\n  }\r\n  /**\r\n   * What happens after the current animation ends.\r\n   * Entities/vfxs will overwrite this function when needed, to add functionalities.\r\n   * If no actions are specified, then the current animation will loop endlessly.\r\n   *\r\n   */\r\n  onAnimationEnd() {\r\n    /**\r\n     * Example code inside this function:\r\n     *\r\n     *  switch(this.animation){\r\n     *      case 'death':\r\n     *          this.removed=true;\r\n     *          break;\r\n     *      case 'attack':\r\n     *          this.loadAnimation('idle');\r\n     *          break;\r\n     *  }\r\n     *\r\n     */\r\n  }\r\n\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ): void {}\r\n  /** Renders the base sprite, not animated, as a static icon in a specific location */\r\n  renderItem(\r\n    x: number,\r\n    y: number,\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    w = 1,\r\n    h = 1\r\n  ) {\r\n    context.drawImage(\r\n      this.sheet, // source of the sprite\r\n      this.animations[\"idle\"].keyframesX[0][0] * tilesize, // x pos of the sprite\r\n      this.animations[\"idle\"].keyframesY[0][0] * tilesize, // y pos of the sprite\r\n      this.animations[\"idle\"].w * tilesize, // width of the sprite\r\n      this.animations[\"idle\"].h * tilesize, // height of the sprite\r\n      x * tilesize * ratio, // x of the entity\r\n      y * tilesize * ratio, // y of the entity\r\n      w * tilesize * ratio, // width of the entity\r\n      h * tilesize * ratio // height of the entity\r\n    );\r\n  }\r\n  /** Progresses the sprite animation\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateSprite(deltaTime: number = 1) {\r\n    this.frameCounter += deltaTime;\r\n    if (this.frameCounter >= this.animations[this.animation].slowness) {\r\n      this.frame++;\r\n      this.frameCounter = 0;\r\n    }\r\n    // If the current frame exceeded the current animation's length:\r\n    if (\r\n      this.frame >= this.animations[this.animation].keyframesX[this.left].length\r\n    ) {\r\n      this.frame = 0;\r\n      this.frameCounter = 0;\r\n      this.onAnimationEnd();\r\n    }\r\n  }\r\n  /** Adds or overwrites an animation\r\n   *\r\n   * @param {String} label The name of the animation (using an already existing name will overwrite the animation)\r\n   * @param {Number[]} keyframesX The positions of the sprite frames in the spritesheet (horizontal), expressed in tilesize\r\n   * @param {Number[]} keyframesY The positions of the sprite frames in the spritesheet (vertical), expressed in tilesize\r\n   * @param {0 | 1} left If set to 1 it will create a different animation whenever this object is facing to the left (has this.left = 1)\r\n   *\r\n   * @example\r\n   * this.setAnimation('attack',[0,0,0],[1,2,3])  // Creates an animation labeled 'attack' composed of 3 animation frames\r\n   *\r\n   * this.setAnimation('attack',[1,1,1],[1,2,3], 1) // Sets a different animation for whenever the sprite faces to the left (optional)\r\n   *\r\n   */\r\n  setAnimation(\r\n    label: string,\r\n    keyframesX: number[],\r\n    keyframesY: number[],\r\n    left: 0 | 1 = 0\r\n  ) {\r\n    if (!this.animations[label]) {\r\n      this.animations[label] = new Animation(this);\r\n    }\r\n    if (left) {\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    } else {\r\n      /** If left-facing animation was not specified use the keyframes for both ways */\r\n      this.animations[label].keyframesX[0] = keyframesX;\r\n      this.animations[label].keyframesY[0] = keyframesY;\r\n\r\n      this.animations[label].keyframesX[1] = keyframesX;\r\n      this.animations[label].keyframesY[1] = keyframesY;\r\n    }\r\n  }\r\n  /**\r\n   * Renders this sprite current animation, at the given coordinates\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSprite(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 },\r\n    ref: { x: number; y: number; rot: number; opacity?: number } = this\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      //console.log('rendering a removed entity!!!')\r\n    }\r\n\r\n    if (ref.rot) {\r\n      ref === this && this.trackPos && this.addPos();\r\n      /** Rotated Rendering */\r\n      context.save();\r\n      if (ref.opacity) {\r\n        context.globalAlpha = ref.opacity;\r\n        context.filter=\"brightness(0)\"\r\n      }\r\n      context.translate(\r\n        ((ref.x +\r\n          this.animations[this.animation].offsetX +\r\n          pivot.x +\r\n          camera.x) *\r\n          tilesize *\r\n          ratio) |\r\n          0,\r\n        ((ref.y +\r\n          this.animations[this.animation].offsetY +\r\n          pivot.y +\r\n          camera.y) *\r\n          tilesize *\r\n          ratio) |\r\n          0\r\n      );\r\n      context.rotate(ref.rot);\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        (-pivot.x * tilesize * ratio) | 0, // x of the entity\r\n        (-pivot.y * tilesize * ratio) | 0, // y of the entity\r\n        (this.animations[this.animation].w * tilesize * ratio) | 0, // width of the entity\r\n        (this.animations[this.animation].h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n      /** Default Rendering */\r\n      context.drawImage(\r\n        this.sheet, // source of the sprite\r\n        this.animations[this.animation].keyframesX[this.left][this.frame] *\r\n          tilesize, // x pos of the sprite\r\n        this.animations[this.animation].keyframesY[this.left][this.frame] *\r\n          tilesize, // y pos of the sprite\r\n        this.animations[this.animation].w * tilesize, // width of the sprite\r\n        this.animations[this.animation].h * tilesize, // height of the sprite\r\n        ((ref.x + this.animations[this.animation].offsetX + camera.x) *\r\n          tilesize *\r\n          ratio) |\r\n          0, // x of the entity\r\n        ((ref.y + this.animations[this.animation].offsetY + camera.y) *\r\n          tilesize *\r\n          ratio) |\r\n          0, // y of the entity\r\n        (this.animations[this.animation].w * tilesize * ratio) | 0, // width of the entity\r\n        (this.animations[this.animation].h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * Disregards the animation and renders an entity as a filled square,\r\n   * can be used for debugging or as a placeholder.\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {Object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   * @param {Object} pivot The pivot of the rotation (defaults to the center of the current animation)\r\n   */\r\n  renderSquare(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n    pivot: { x: number; y: number } = { x: this.w / 2, y: this.h / 2 }\r\n  ) {\r\n    if (!this.display) {\r\n      // Skips rendering\r\n      return;\r\n    }\r\n    if (this.removed) {\r\n      console.log(\"rendering a removed entity!!!\");\r\n    }\r\n    if (this.rot) {\r\n      // Rotated Rendering\r\n      context.save();\r\n      context.translate(\r\n        ((this.x + pivot.x + camera.x) * tilesize * ratio) | 0,\r\n        ((this.y + pivot.y + camera.y) * tilesize * ratio) | 0\r\n      );\r\n      context.rotate(this.rot);\r\n      context.fillRect(\r\n        (-pivot.x * tilesize * ratio) | 0, // x of the entity\r\n        (-pivot.y * tilesize * ratio) | 0, // y of the entity\r\n        (this.w * tilesize * ratio) | 0, // width of the entity\r\n        (this.h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n      context.restore();\r\n    } else {\r\n      // Default Rendering\r\n      console.log(\r\n        \"rendering player\",\r\n        ((this.x + camera.x) * tilesize * ratio) | 0, // x of the entity\r\n        ((this.y + camera.y) * tilesize * ratio) | 0, // y of the entity\r\n        (this.w * tilesize * ratio) | 0, // width of the entity\r\n        (this.h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n      context.fillRect(\r\n        ((this.x + camera.x) * tilesize * ratio) | 0, // x of the entity\r\n        ((this.y + camera.y) * tilesize * ratio) | 0, // y of the entity\r\n        (this.w * tilesize * ratio) | 0, // width of the entity\r\n        (this.h * tilesize * ratio) | 0 // height of the entity\r\n      );\r\n    }\r\n  }\r\n}\r\nclass Animation {\r\n  keyframesX: number[][];\r\n  keyframesY: number[][];\r\n  slowness: number;\r\n  w: number;\r\n  h: number;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  constructor(entity: { x: number; y: number; w: number; h: number }) {\r\n    /** X positions on the spritesheet */\r\n    this.keyframesX = [[], []];\r\n    /** Y positions on the spritesheet */\r\n    this.keyframesY = [[], []];\r\n    /** Defines how many game-frames should be skipped before each next animation-frame */\r\n    this.slowness = 6;\r\n\r\n    // The size of the sprite defaults to the entity size, but can be changed\r\n    this.w = entity.w;\r\n    this.h = entity.h;\r\n\r\n    // Some Animations may need an offset relative to the Entity position\r\n    this.offsetX = (entity.w - this.w) / 2;\r\n    this.offsetY = (entity.h - this.h) / 2;\r\n  }\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/** Gets called after the velocities have been set\r\n *\r\n * Contains my own javascript implementation of the SWEPT AABB algorithm, after taking to account many resources on the matter:\r\n * @link https://www.youtube.com/watch?v=8JJ-4JgR7Dg\r\n * @link https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/swept-aabb-collision-detection-and-response-r3084/\r\n * @link https://blog.hamaluik.ca/posts/swept-aabb-collision-using-minkowski-difference/\r\n */\r\n// import { debug } from '../debug/debug.js'\r\nimport { Point, Rect, EntityLike } from \"./\";\r\n\r\nexport function checkCollisions(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[],\r\n  deltaTime = 1\r\n) {\r\n  if (!obj.solid) {\r\n    // return false if the object calling this function is not solid\r\n    return false;\r\n  }\r\n  // Decides if the col should be checked normally, without vectors\r\n  simpleCollisionCheck(obj, entities);\r\n  if (obj.xVel + obj.xVelExt === 0 && obj.yVel + obj.yVelExt === 0) {\r\n    return;\r\n  }\r\n\r\n  // Broad Phase\r\n  // Step 1: Create a broad hitbox with the added size of the velocities\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  /** If the object has an hitbox property, check collision with that */\r\n  let objHitbox = obj.hitbox ? obj.hitbox : obj;\r\n\r\n  /** Bigger hitbox for the broad phase */\r\n  let broadHitbox = {\r\n    x: velocitiesX > 0 ? objHitbox.x : objHitbox.x + velocitiesX * deltaTime,\r\n    y: velocitiesY > 0 ? objHitbox.y : objHitbox.y + velocitiesY * deltaTime,\r\n    w:\r\n      velocitiesX > 0\r\n        ? objHitbox.w + velocitiesX * deltaTime\r\n        : objHitbox.w - velocitiesX * deltaTime,\r\n    h:\r\n      velocitiesY > 0\r\n        ? objHitbox.h + velocitiesY * deltaTime\r\n        : objHitbox.h - velocitiesY * deltaTime,\r\n  };\r\n\r\n  /** debug player dir*/\r\n  //debug.drawLine({ x: obj.centerX, y: obj.centerY }, { x: obj.centerX + velocitiesX * deltaTime, y: obj.centerY + velocitiesY * deltaTime }, \"white\")\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(broadHitbox, \"cyan\")\r\n\r\n  /** Vector containing pairs of (ID, contactTime) */\r\n  let colPointsVector = [];\r\n  /** Contact Time */\r\n  const ct = { value: 0.0 };\r\n  /** Contact Point */\r\n  const cp = { x: 0, y: 0 };\r\n  /** Contact normal */\r\n  const cn = { x: 0, y: 0 };\r\n\r\n  /** Defines if the level has been changed */\r\n  let levelChange = false;\r\n  // Step 2:\r\n  for (let i = 0; i < entities.length; i++) {\r\n    let entity = entities[i];\r\n    // Skip collision exceptions\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    // BROAD\r\n    // Checks broad hitbox collisions with entities\r\n    if (collided(broadHitbox, entity)) {\r\n      // Checks corner points collisions\r\n\r\n      // NARROW\r\n      // If the entity has an hitbox, use it instead\r\n      let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n      // Swept collision check\r\n      if (\r\n        dynamicRectVsRect(\r\n          objHitbox,\r\n          entityHitbox,\r\n          velocitiesX,\r\n          velocitiesY,\r\n          deltaTime,\r\n          cp,\r\n          cn,\r\n          ct\r\n        )\r\n      ) {\r\n        // Handles eventual collision events\r\n        if (obj.onCollision) {\r\n          obj.onCollision(entity, entities);\r\n        }\r\n        // Skip resolve exceptions\r\n        if (resolveException(obj, entity)) {\r\n          continue;\r\n        }\r\n        colPointsVector.push({ id: i, ct: ct.value });\r\n\r\n        // Compute point colliders\r\n      }\r\n    }\r\n  }\r\n  if (levelChange) {\r\n    // Entities are changed, no point in resolving\r\n    return;\r\n  }\r\n  if (colPointsVector.length === 0) {\r\n    //console.log('No colliders were found, obj xVel = ', obj.xVel)\r\n    return;\r\n  }\r\n  // Do the sort\r\n  colPointsVector.sort((a, b) => {\r\n    return a.ct - b.ct;\r\n  });\r\n  // Now resolve the collision in correct order\r\n  for (let rect of colPointsVector) {\r\n    resolveDynamicRectVsRect(obj, deltaTime, entities[rect.id]);\r\n  }\r\n\r\n  /**\r\n   * Fixes slide direction change in case velocities were initially diagonal\r\n   * (Its' implied that at least one of the velocities isn't 0)\r\n   * (Its' also implied there has been a collision at this point)\r\n   *\r\n   */\r\n  if (velocitiesX !== 0 && velocitiesY !== 0) {\r\n    //console.log(\"Recursion happened\");\r\n    // checkCollisions(obj, entities, deltaTime);\r\n  }\r\n}\r\n\r\nclass PointsCollider {\r\n  entity: EntityLike | undefined;\r\n  offset = -0.01;\r\n  /** Top left collider */\r\n  TL = { x: 0, y: 0, col: false };\r\n  /** Top right collider */\r\n  TR = { x: 0, y: 0, col: false };\r\n  /** Bottom left collider */\r\n  BL = { x: 0, y: 0, col: false };\r\n  /** Bottom right collider */\r\n  BR = { x: 0, y: 0, col: false };\r\n\r\n  constructor() {}\r\n  /** Sets the collision points on each corner of the entity */\r\n  setColPoints(entity: EntityLike) {\r\n    this.entity = entity;\r\n    let entityHitbox = entity.hitbox ? entity.hitbox : entity;\r\n    this.TL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.TR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y - this.offset,\r\n      col: false,\r\n    };\r\n    this.BL = {\r\n      x: entityHitbox.x - this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n    this.BR = {\r\n      x: entityHitbox.x + entityHitbox.w + this.offset,\r\n      y: entityHitbox.y + entityHitbox.h + this.offset,\r\n      col: false,\r\n    };\r\n  }\r\n  /** Checks Points collision */\r\n  checkCols(collider: EntityLike) {\r\n    if (!this.TL.col) this.TL.col = pointRectCol(this.TL, collider);\r\n    if (!this.TR.col) this.TR.col = pointRectCol(this.TR, collider);\r\n    if (!this.BL.col) this.BL.col = pointRectCol(this.BL, collider);\r\n    if (!this.BR.col) this.BR.col = pointRectCol(this.BR, collider);\r\n  }\r\n  /** Move the entity depending on the collided points */\r\n  resolveCollisions() {\r\n    if (!this.entity) {\r\n      return;\r\n    }\r\n    //debug.drawPoint(this.TL, this.TL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.TR, this.TR.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BL, this.BL.col ? 'red' : 'yellow')\r\n    //debug.drawPoint(this.BR, this.BR.col ? 'red' : 'yellow')\r\n    if (this.TL.col || this.BL.col) {\r\n      if (this.entity.xVel < 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt < 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TR.col || this.BR.col) {\r\n      if (this.entity.xVel > 0) {\r\n        this.entity.xVel = 0;\r\n      }\r\n      if (this.entity.xVelExt > 0) {\r\n        this.entity.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.TL.col || this.TR.col) {\r\n      if (this.entity.yVel < 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt < 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n    if (this.BL.col || this.BR.col) {\r\n      if (this.entity.yVel > 0) {\r\n        this.entity.yVel = 0;\r\n      }\r\n      if (this.entity.yVelExt > 0) {\r\n        this.entity.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveDynamicRectVsRect(\r\n  obj: EntityLike,\r\n  deltaTime: number,\r\n  rectB: EntityLike\r\n) {\r\n  let contactPoint = { x: 0, y: 0 };\r\n  let contactNormal = { x: 0, y: 0 };\r\n  let contactTime = { value: 0.0 };\r\n  let velocitiesX = obj.xVel + obj.xVelExt;\r\n  let velocitiesY = obj.yVel + obj.yVelExt;\r\n\r\n  let objHitbox1 = obj.hitbox ? obj.hitbox : obj;\r\n  let objHitbox2 = rectB.hitbox ? rectB.hitbox : rectB;\r\n  //debug.drawRect(objHitbox2, 'cyan')\r\n  if (\r\n    dynamicRectVsRect(\r\n      objHitbox1,\r\n      objHitbox2,\r\n      velocitiesX,\r\n      velocitiesY,\r\n      deltaTime,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //if (contactNormal.x < 0) { obj.col.R = -contactNormal.x * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n    //if (contactNormal.x > 0) { obj.col.L = contactNormal.x * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y < 0) { obj.col.B = -contactNormal.y * Math.abs(velocitiesX) * (1 - contactTime.value); }\r\n    //if (contactNormal.y > 0) { obj.col.T = contactNormal.y * Math.abs(velocitiesY) * (1 - contactTime.value); }\r\n\r\n    // console.log('resolved a collision, old xVel = ', obj.xVel)\r\n    // To avoid weird JS numbers behaviour\r\n    let overlapFixMultiplier = 1.001;\r\n    obj.xVel +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVel +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVel) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.xVelExt +=\r\n      contactNormal.x *\r\n      Math.abs(obj.xVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n    obj.yVelExt +=\r\n      contactNormal.y *\r\n      Math.abs(obj.yVelExt) *\r\n      (1.0 - contactTime.value) *\r\n      overlapFixMultiplier;\r\n\r\n    //obj.xVel = 0;\r\n    //obj.yVel = 0;\r\n    // console.log('new xVel', obj.xVel)\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/** Swaps 2 values */\r\nfunction dynamicRectVsRect(\r\n  rectA: Rect,\r\n  rectB: Rect,\r\n  xVel: number,\r\n  yVel: number,\r\n  deltaTime: number,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  contactTime: { value: any }\r\n) {\r\n  // Check if dynamic rectangle is actually moving\r\n  // we assume rectangles are NOT in collision to start\r\n  if (xVel == 0 && yVel == 0) {\r\n    return false;\r\n  }\r\n  contactTime.value = 0;\r\n  // Expand target rectangle by source dimensions\r\n  let expanded = {\r\n    x: rectB.x - rectA.w / 2,\r\n    y: rectB.y - rectA.h / 2,\r\n    w: rectB.w + rectA.w,\r\n    h: rectB.h + rectA.h,\r\n  };\r\n  /** debug broadHitbox*/\r\n  //debug.drawRect(expanded, \"orange\")\r\n  let centerRectA = {\r\n    x: rectA.x + rectA.w / 2,\r\n    y: rectA.y + rectA.h / 2,\r\n  };\r\n  let direction = {\r\n    x: xVel * deltaTime,\r\n    y: yVel * deltaTime,\r\n  };\r\n  if (\r\n    rayVsRect(\r\n      centerRectA,\r\n      direction,\r\n      expanded,\r\n      contactPoint,\r\n      contactNormal,\r\n      contactTime\r\n    )\r\n  ) {\r\n    //console.log('ray v rect returned ct', contactTime.value)\r\n    return contactTime.value >= 0 && contactTime.value < 1;\r\n  } else {\r\n    //console.log('ray v rect returned false')\r\n    return false;\r\n  }\r\n}\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox = false\r\n) {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction rayVsRect(\r\n  origin: Point,\r\n  direction: Point,\r\n  target: Rect,\r\n  contactPoint: Point,\r\n  contactNormal: Point,\r\n  timeHitNear: { value: number }\r\n) {\r\n  contactPoint.x = 0;\r\n  contactPoint.y = 0;\r\n\r\n  contactNormal.x = 0;\r\n  contactNormal.y = 0;\r\n\r\n  // Cache division\r\n  let inverseDir = {\r\n    x: 1 / direction.x,\r\n    y: 1 / direction.y,\r\n  };\r\n  // Calculate intersections with rectangle bounding axes\r\n  let timeNear = {\r\n    x: (target.x - origin.x) * inverseDir.x,\r\n    y: (target.y - origin.y) * inverseDir.y,\r\n  };\r\n  let timeFar = {\r\n    x: (target.x + target.w - origin.x) * inverseDir.x,\r\n    y: (target.y + target.h - origin.y) * inverseDir.y,\r\n  };\r\n  if (isNaN(timeFar.y) || isNaN(timeFar.x)) {\r\n    return false;\r\n  }\r\n  if (isNaN(timeNear.y) || isNaN(timeNear.x)) {\r\n    return false;\r\n  }\r\n\r\n  // Sort distances\r\n  if (timeNear.x > timeFar.x) {\r\n    let temp = timeNear.x;\r\n    timeNear.x = timeFar.x;\r\n    timeFar.x = temp;\r\n  }\r\n  if (timeNear.y > timeFar.y) {\r\n    let temp = timeNear.y;\r\n    timeNear.y = timeFar.y;\r\n    timeFar.y = temp;\r\n  }\r\n\r\n  // Early rejection\r\n  if (timeNear.x > timeFar.y || timeNear.y > timeFar.x) {\r\n    return false;\r\n  }\r\n\r\n  // Closest 'time' will be the first contact\r\n  timeHitNear.value = Math.max(timeNear.x, timeNear.y);\r\n\r\n  // Furthest 'time' is contact on opposite side of target\r\n  let timeHitFar = Math.min(timeFar.x, timeFar.y);\r\n\r\n  // Reject if ray direction is pointing away from object\r\n  if (timeHitFar < 0) {\r\n    return false;\r\n  }\r\n\r\n  // Contact point of collision from parametric line equation\r\n  contactPoint.x = origin.x + timeHitNear.value * direction.x;\r\n  contactPoint.y = origin.y + timeHitNear.value * direction.y;\r\n\r\n  if (timeNear.x > timeNear.y) {\r\n    if (inverseDir.x < 0) {\r\n      contactNormal.x = 1;\r\n      contactNormal.y = 0;\r\n    } else {\r\n      contactNormal.x = -1;\r\n      contactNormal.y = 0;\r\n    }\r\n  } else if (timeNear.x < timeNear.y) {\r\n    if (inverseDir.y < 0) {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = 1;\r\n    } else {\r\n      contactNormal.x = 0;\r\n      contactNormal.y = -1;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/** Defines whether the collision check is unnecessary */\r\nfunction collisionException(obj: EntityLike, entity: EntityLike) {\r\n  if (entity.removed || entity == obj) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n/** Defines whether the collision resolve should be avoided */\r\nfunction resolveException(obj: EntityLike, entity: EntityLike) {\r\n  if (\r\n    !entity.solid ||\r\n    entity.removed ||\r\n    entity == obj ||\r\n    (entity.grounded && !obj.grounded)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collided(a: Rect, b: Rect, forceSpriteBox = false) {\r\n  let rect1 = a.hitbox && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = b.hitbox && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/** Gets called if a more advanced colcheck is not necessary */\r\nexport function simpleCollisionCheck(\r\n  obj: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  entities: EntityLike[]\r\n) {\r\n  for (let entity of entities) {\r\n    if (collisionException(obj, entity)) {\r\n      continue;\r\n    }\r\n    if (collided(obj, entity)) {\r\n      if (obj.onCollision) {\r\n        obj.onCollision(entity);\r\n      }\r\n      if (entity.onCollision) {\r\n        entity.onCollision(obj);\r\n      }\r\n      if (resolveException(obj, entity)) {\r\n        continue;\r\n      }\r\n      colCheck(obj, entity);\r\n    }\r\n  }\r\n}\r\nexport function colCheck(\r\n  shapeA: EntityLike & { col: { L: number; R: number; T: number; B: number } },\r\n  shapeB: EntityLike\r\n) {\r\n  if (shapeA == null || shapeB == null) {\r\n    return true;\r\n  }\r\n  // get the vectors to check against\r\n  var shapeAA = shapeA.hitbox || shapeA,\r\n    shapeBB = shapeB.hitbox || shapeB;\r\n  var vX = shapeAA.x + shapeAA.w / 2 - (shapeBB.x + shapeBB.w / 2),\r\n    vY = shapeAA.y + shapeAA.h / 2 - (shapeBB.y + shapeBB.h / 2),\r\n    // add the half widths and half heights of the objects\r\n    hWidths = shapeAA.w / 2 + shapeBB.w / 2,\r\n    hHeights = shapeAA.h / 2 + shapeBB.h / 2,\r\n    colDir = \"\";\r\n\r\n  // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\r\n  if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\r\n    // figures out on which side we are colliding (top, bottom, left, or right)\r\n    var oX = hWidths - Math.abs(vX),\r\n      oY = hHeights - Math.abs(vY);\r\n    if (oX >= oY) {\r\n      if (vY > 0) {\r\n        colDir = \"t\";\r\n        if (shapeA.col.T < oY) {\r\n          if (oY > 0.01) shapeA.col.T += oY;\r\n        }\r\n      } else {\r\n        colDir = \"b\";\r\n        if (shapeA.col.B < oY) {\r\n          if (oY > 0.01) shapeA.col.B += oY;\r\n        }\r\n      }\r\n    } else {\r\n      if (vX > 0) {\r\n        colDir = \"l\";\r\n        if (shapeA.col.L < oX) {\r\n          if (oX > 0.01) shapeA.col.L += oX;\r\n        }\r\n      } else {\r\n        colDir = \"r\";\r\n        if (shapeA.col.R < oX) {\r\n          if (oX > 0.01) shapeA.col.R += oX;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return colDir;\r\n}\r\n","export type Line = {\r\n  x1: number;\r\n  y1: number;\r\n  x2: number;\r\n  y2: number;\r\n};\r\n\r\nexport type Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nexport type Rect = Point & {\r\n  w: number;\r\n  h: number;\r\n  hitbox?: Rect;\r\n};\r\nexport type EntityLike = Rect & {\r\n  hitbox?: Rect;\r\n  grounded: boolean;\r\n  removed: boolean;\r\n  onCollision?: Function;\r\n  yVelExt: number;\r\n  yVel: number;\r\n  xVelExt: number;\r\n  xVel: number;\r\n  solid: boolean;\r\n  col?: {\r\n    L: number;\r\n    R: number;\r\n    T: number;\r\n    B: number;\r\n  };\r\n};\r\n/**\r\n *  To use this:\r\n *  - Check for all the simple collisions\r\n *  - Send the collided entities' array and the colliding object\r\n *\r\n * @returns {Rect[]} An array of the merged colliders.\r\n */\r\nexport function assembleChunk(chunk: Rect[], obj: EntityLike): Rect[] {\r\n  let assembledChunks: Rect[] = [];\r\n  let brokenChunk: Rect[] = [];\r\n  if (chunk.length == 1) {\r\n    return chunk;\r\n  }\r\n  for (let i = 0; i < chunk.length; i++) {\r\n    for (let j = 0; j < chunk[i].w; j++) {\r\n      for (let k = 0; k < chunk[i].h; k++) {\r\n        let part: Rect = {\r\n          x: chunk[i].x + j,\r\n          y: chunk[i].y + k,\r\n          w: 1,\r\n          h: 1,\r\n        };\r\n        if (collided(obj, part)) {\r\n          brokenChunk.push(part);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (brokenChunk.length == 0) {\r\n    return [] as Rect[];\r\n  }\r\n  let firstBlock = {\r\n    x: brokenChunk[0].x,\r\n    y: brokenChunk[0].y,\r\n    w: brokenChunk[0].w,\r\n    h: brokenChunk[0].h,\r\n  };\r\n  assembledChunks.push(firstBlock);\r\n  let a: Rect, b: Rect;\r\n  for (let i = 0; i < brokenChunk.length; i++) {\r\n    for (let j = 0; j < assembledChunks.length; j++) {\r\n      a =\r\n        brokenChunk[i].hitbox !== undefined\r\n          ? brokenChunk[i].hitbox!\r\n          : brokenChunk[i];\r\n      b = assembledChunks[j];\r\n      if (a.y == b.y && a.h == b.h) {\r\n        if (a.x + a.w > b.x + b.w) {\r\n          b.w = a.x + a.w - b.x;\r\n        }\r\n        if (a.x < b.x) {\r\n          b.w += b.x - a.x;\r\n          b.x = a.x;\r\n        }\r\n      } else if (a.x == b.x && a.w == b.w) {\r\n        if (a.y + a.h > b.y + b.h) {\r\n          b.h = a.y + a.h - b.y;\r\n        }\r\n        if (a.y < b.y) {\r\n          b.h += b.y - a.y;\r\n          b.y = a.y;\r\n        }\r\n      } else {\r\n        let temp = {\r\n          x: a.x,\r\n          y: a.y,\r\n          w: a.w,\r\n          h: a.h,\r\n        };\r\n        assembledChunks.push(temp);\r\n      }\r\n    }\r\n  }\r\n  return assembledChunks;\r\n}\r\n/**\r\n *  Checks whether two rect-shaped objects are colliding\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if the rects are colliding, false otherwise\r\n */\r\nexport function collided(\r\n  a: Rect,\r\n  b: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect1 = typeof a.hitbox !== \"undefined\" && !forceSpriteBox ? a.hitbox : a;\r\n  let rect2 = typeof b.hitbox !== \"undefined\" && !forceSpriteBox ? b.hitbox : b;\r\n  if (rect1.x < rect2.x + rect2.w) {\r\n    if (rect1.x + rect1.w > rect2.x) {\r\n      if (rect1.y < rect2.y + rect2.h) {\r\n        if (rect1.y + rect1.h > rect2.y) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Checks if a point is contained withing a rectangle shaped object\r\n * @param {Boolean} forceSpriteBox Defines whether the computation has to ignore the rectange hitbox and use it's absolute sizes\r\n *\r\n * @returns {Boolean} True if contained, false otherwise\r\n */\r\nexport function pointRectCol(\r\n  point: Point,\r\n  rectangle: Rect,\r\n  forceSpriteBox: boolean = false\r\n): boolean {\r\n  let rect = rectangle.hitbox && !forceSpriteBox ? rectangle.hitbox : rectangle;\r\n  if (point.x >= rect.x) {\r\n    if (point.x <= rect.x + rect.w) {\r\n      if (point.y >= rect.y) {\r\n        if (point.y <= rect.y + rect.h) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n/**\r\n * Checks for intersections between a line and a rect shaped object\r\n * @returns {boolean} True if there's an intersection, false otherwise\r\n */\r\nexport function lineRectCol(line: Line, sq: Rect): boolean {\r\n  let squareLines = getRectSides(sq);\r\n  for (let i = 0; i < squareLines.length; i++) {\r\n    if (\r\n      intersect(\r\n        squareLines[i].x1,\r\n        squareLines[i].y1,\r\n        squareLines[i].x2,\r\n        squareLines[i].y2,\r\n        line.x1,\r\n        line.y1,\r\n        line.x2,\r\n        line.y2\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Given two lines(expressed in 8 coordinates of 4 points), checks whether there's an intersection between them\r\n *\r\n * @returns {Point | false} The coords of the intersection or false if there's no contact\r\n */\r\nexport function intersect(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  x4: number,\r\n  y4: number\r\n): Point | false {\r\n  // Check if none of the lines are of length 0\r\n  if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) {\r\n    return false;\r\n  }\r\n\r\n  let denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n\r\n  if (denominator === 0) {\r\n    return false;\r\n  }\r\n\r\n  let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\r\n  let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator;\r\n\r\n  if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\r\n    return false;\r\n  }\r\n\r\n  let x = x1 + ua * (x2 - x1);\r\n  let y = y1 + ua * (y2 - y1);\r\n\r\n  return {\r\n    x,\r\n    y,\r\n  };\r\n}\r\n/**\r\n *\r\n * @returns {Line[]} Array containing each line of the rect as 2 points coordinates\r\n */\r\nexport function getRectSides(rect: Rect): Line[] {\r\n  let sides = [];\r\n  let sq = rect;\r\n  if (rect.hitbox !== undefined) {\r\n    sq = rect.hitbox;\r\n  }\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y,\r\n    x2: sq.x + sq.w,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x + sq.w,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y + sq.h,\r\n  });\r\n  sides.push({\r\n    x1: sq.x,\r\n    y1: sq.y + sq.h,\r\n    x2: sq.x,\r\n    y2: sq.y,\r\n  });\r\n\r\n  return sides;\r\n}\r\n\r\n/**\r\n * Computes the angle between the given points coordinates\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getAngle({ x1, y1, x2, y2 }: Line): number {\r\n  let deltaX = x2 - x1;\r\n  let deltaY = y2 - y1;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n/**\r\n * Computes the angle between the centers of two rectangles\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getRectsAngle(\r\n  { x: x1, w: w1, y: y1, h: h1 }: Rect,\r\n  { x: x2, w: w2, y: y2, h: h2 }: Rect\r\n): number {\r\n  let deltaX = x2 + w2 / 2 - (x1 + w2 / 2);\r\n  let deltaY = y2 + h2 / 2 - (y1 + h2 / 2);\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n/**\r\n * Computes the Cosine and Sine between 2 points\r\n *\r\n * @returns {number[]} Array containing the cosine and sine values, respectively.\r\n */\r\nexport function cosSin({ x1, y1, x2, y2 }: Line): number[] {\r\n  let rotation = getAngle({ x1, y1, x2, y2 });\r\n  let cosine = Math.cos(rotation);\r\n  let sine = Math.sin(rotation);\r\n  return [cosine, sine];\r\n}\r\n/**\r\n * Given two rectangles, returns the angle between their center point\r\n *\r\n * @returns {number} Rotation expressed in radians\r\n */\r\nexport function getRotation(obj1: Rect, obj2: Rect): number {\r\n  let x1 = obj1.x + obj1.w / 2;\r\n  let y1 = obj1.y + obj1.h / 2;\r\n  let x2 = obj2.x + obj2.w / 2;\r\n  let y2 = obj2.y + obj2.h / 2;\r\n  return getAngle({ x1, y1, x2, y2 });\r\n}\r\n\r\n/**\r\n * Returns the distance between the center of two rect shaped objects\r\n *\r\n * @returns {number} Distance between the rectangles centers.\r\n */\r\nexport function distance(\r\n  obj1: Point & { w?: number; h?: number },\r\n  obj2: Point & { w?: number; h?: number }\r\n): number {\r\n  let x1 = obj1.w ? obj1.x + obj1.w / 2 : obj1.x;\r\n  let y1 = obj1.h ? obj1.y + obj1.h / 2 : obj1.y;\r\n\r\n  let x2 = obj2.w ? obj2.x + obj2.w / 2 : obj2.x;\r\n  let y2 = obj2.h ? obj2.y + obj2.h / 2 : obj2.y;\r\n\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n}\r\n","\r\nexport class Text {\r\n    content:string | string[] = '';\r\n    x:number;\r\n    y :number;\r\n    color:string;\r\n    align:CanvasTextAlign;\r\n    baseline:CanvasTextBaseline;\r\n    fontSize = 7;\r\n    font = 'Consolas, monaco, monospace';\r\n    shadow = false;\r\n    shadowColor = '#14182e';\r\n    strokeWidth = 0.3;\r\n    stroke:boolean;\r\n    strokeColor: string | CanvasGradient | CanvasPattern;\r\n    constructor(x:number, y:number, color = '#ad2f45', align = \"center\" as CanvasTextAlign, baseline = \"middle\" as CanvasTextBaseline) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = color;\r\n        this.align = align;\r\n        this.stroke=false;\r\n        this.baseline = baseline;\r\n        this.strokeColor=\"#ffffff\"\r\n\r\n    }\r\n    get shadowOffsetX() {\r\n        return this.fontSize / 200;\r\n    }\r\n    get shadowOffsetY() {\r\n        return this.fontSize / 200;\r\n    }\r\n    canvasFont(ratio:number) {\r\n        return 'bold ' + Math.round(this.fontSize * ratio) + 'px ' + this.font\r\n    }\r\n    render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera = { x: 0, y: 0 }) {\r\n        if (this.stroke) {\r\n            context.lineWidth = this.strokeWidth * ratio;\r\n            context.strokeStyle = this.strokeColor;\r\n        }\r\n        context.textBaseline = this.baseline;\r\n        context.textAlign = this.align;\r\n        context.fillStyle = this.color;\r\n        context.font = this.canvasFont(ratio);\r\n        if (typeof this.content !== \"string\") {\r\n            // Content is split into an array of lines\r\n            for (let i = 0; i < this.content.length; i++) {\r\n                if (this.stroke) {\r\n                    context.strokeText(\r\n                        this.content[i],\r\n                        (this.x + camera.x) * tilesize * ratio,\r\n                        ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                if (this.shadow) {\r\n                    context.fillStyle = this.shadowColor;\r\n                    context.fillText(\r\n                        this.content[i],\r\n                        (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                        ((this.y + camera.y + this.shadowOffsetY) * tilesize + this.fontSize * i) * ratio\r\n                    );\r\n                }\r\n                context.fillStyle = this.color;\r\n                context.fillText(\r\n                    this.content[i],\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    ((this.y + camera.y) * tilesize + this.fontSize * i) * ratio\r\n                );\r\n            }\r\n\r\n        } else {\r\n            /** Stroke rendering */\r\n            if (this.stroke) {\r\n                context.strokeText(\r\n                    this.content,\r\n                    (this.x + camera.x) * tilesize * ratio,\r\n                    (this.y + camera.y) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Shadow rendering */\r\n            if (this.shadow) {\r\n                context.fillStyle = this.shadowColor;\r\n                context.fillText(\r\n                    this.content,\r\n                    (this.x + camera.x + this.shadowOffsetX) * tilesize * ratio,\r\n                    (this.y + camera.y + this.shadowOffsetY) * tilesize * ratio\r\n                );\r\n            }\r\n            /** Fill rendering */\r\n            context.fillStyle = this.color;\r\n            context.fillText(\r\n                this.content,\r\n                (this.x + camera.x) * tilesize * ratio,\r\n                (this.y + camera.y) * tilesize * ratio\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Text;","import { Sprite, Entity } from \"../entity\";\r\nimport { Text } from \"../text\";\r\n/**\r\n * Basic vfx class\r\n */\r\nexport class SpriteVfx extends Sprite {\r\n  source: Entity;\r\n  type = \"vfx\";\r\n  name = \"proto\";\r\n  removed = false;\r\n  randomPos = false;\r\n  randomAmount = 0.5;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx is attached\r\n   */\r\n  constructor(source: Entity) {\r\n    super(source.centerX, source.centerY);\r\n    this.source = source;\r\n  }\r\n  resolveCollisions() {}\r\n  renderShadow() {}\r\n  /** Moves this vfx coordinates in a random direction within a range defined by this.randomAmount */\r\n  randomizePos() {\r\n    this.x += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n    this.y += Math.random() * this.randomAmount - this.randomAmount / 2;\r\n  }\r\n  /** Returns the vfx to its original state\r\n   *\r\n   * @param {Entity} source Defines the entity to which this vfx is related to\r\n   */\r\n  reset(source: Entity) {\r\n    this.source = source;\r\n    this.moveAtSource();\r\n\r\n    if (this.randomPos) {\r\n      this.randomizePos();\r\n    }\r\n    this.removed = false;\r\n    this.frame = 0;\r\n    this.frameCounter = 0;\r\n    this.additionalResetOperations();\r\n  }\r\n  /** Each vfx may have different reset options */\r\n  additionalResetOperations() {}\r\n  moveAtSource() {\r\n    this.x = this.source.centerX - this.w / 2;\r\n    this.y = this.source.centerY - this.h / 2;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n  onAnimationEnd() {\r\n    this.removed = true;\r\n  }\r\n}\r\n/** DmgVfxs have 4 random animations and 4 random rotations */\r\nexport class DmgVfx extends SpriteVfx {\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"DmgVfx\";\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.randomPos = true;\r\n    this.randomizePos();\r\n    this.setAnimation(\"boom\", [17, 17, 17, 17], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut\", [18, 18, 18, 18], [0, 1, 2, 3]);\r\n    this.setAnimation(\"cut_long\", [20, 20, 20, 20], [0, 1, 2, 3]);\r\n    this.animations[\"cut_long\"].w = 2;\r\n    this.additionalResetOperations();\r\n  }\r\n  additionalResetOperations() {\r\n    let animations = Object.entries(this.animations);\r\n    /** Assign a random animation */\r\n    this.animation = animations[(Math.random() * animations.length) | 0][0];\r\n    let rotations = [0, 90, 180, -90];\r\n    this.rot = rotations[(Math.random() * rotations.length) | 0];\r\n  }\r\n}\r\n/** Represents a single particle */\r\nclass Particle extends Sprite {\r\n  verticalSpeed = -0.03;\r\n  x: number;\r\n  y: number;\r\n  source: Entity;\r\n  lifeCycles: number;\r\n  remainingCycles: number;\r\n  constructor(source: Entity, particleDuration = 5) {\r\n    super(source.x, source.y);\r\n    this.setAnimation(\"idle\", [19, 19, 19, 19], [0, 1, 2, 3]);\r\n    this.source = source;\r\n    this.lifeCycles = particleDuration;\r\n    this.remainingCycles = this.lifeCycles;\r\n    this.x = source.x + source.w / 2 + Math.random() * 1.5 - 0.75 - this.w / 2;\r\n    this.y = source.y + source.h / 2 + Math.random() * 1.5 - 0.75 - this.h / 2;\r\n    this.x -= this.w / 2;\r\n    this.y -= this.h / 2;\r\n  }\r\n  get randomX() {\r\n    return (\r\n      this.source.x +\r\n      this.source.w / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.w / 2\r\n    );\r\n  }\r\n  get randomY() {\r\n    return (\r\n      this.source.y +\r\n      this.source.h / 2 +\r\n      Math.random() * 1.5 -\r\n      0.75 -\r\n      this.h / 2\r\n    );\r\n  }\r\n  reset(source: Entity, lifeCycles: number) {\r\n    this.source = source;\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n    this.removed = false;\r\n    this.remainingCycles = lifeCycles || this.lifeCycles;\r\n  }\r\n  onAnimationEnd() {\r\n    this.remainingCycles--;\r\n    if (this.remainingCycles <= 0) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.randomX;\r\n    this.y = this.randomY;\r\n  }\r\n  compute(deltaTime: number) {\r\n    this.y += this.verticalSpeed * deltaTime;\r\n    this.updateSprite(deltaTime);\r\n  }\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: 0; y: 0 }\r\n  ) {\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n/** Holds multiple Particle objects, which on death respawns for a said amount of times */\r\nexport class ParticlesVfx extends SpriteVfx {\r\n  particlesDuration = 5;\r\n  /** The numbers of particles */\r\n  particlesAmount = 5;\r\n  particles:Particle[] = [];\r\n  constructor(source: Entity) {\r\n    super(source);\r\n    this.name = \"ParticlesVfx\";\r\n    /** Amount of particles lifetime */\r\n    this.particlesDuration = 5;\r\n    /** The numbers of particles */\r\n    this.particlesAmount = 5;\r\n    this.particles = [];\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    /** Creates the particles */\r\n    for (let i = 0; i < this.particlesAmount; i++) {\r\n      this.particles.push(new Particle(this.source, this.particlesDuration));\r\n    }\r\n  }\r\n  additionalResetOperations() {\r\n    for (let particle of this.particles) {\r\n      particle.reset(this.source, this.particlesDuration);\r\n    }\r\n  }\r\n  compute(deltaTime:number) {\r\n    let removedCount = 0;\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        removedCount++;\r\n        continue;\r\n      }\r\n      particle.compute(deltaTime);\r\n    }\r\n    if (removedCount === this.particles.length) {\r\n      this.removed = true;\r\n    }\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    for (let particle of this.particles) {\r\n      if (particle.removed) {\r\n        continue;\r\n      }\r\n      particle.render(context, tilesize, ratio, camera);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Displays text in the form of a vfx\r\n */\r\nexport class TextVfx extends SpriteVfx {\r\n    name = \"TextVfx\";\r\n    text = new Text(0, 0);\r\n    progress = 0;\r\n  /**\r\n   * @param {Entity} source The entity to which this vfx attaches\r\n   */\r\n  constructor(source:Entity) {\r\n    super(source);\r\n    this.text.content = \"\";\r\n    // Red by default\r\n    this.text.color = \"#ad2f45\";\r\n    this.text.shadow = true;\r\n    this.text.fontSize = 10;\r\n  }\r\n  reset(source:Entity, content = \"\") {\r\n    this.removed = false;\r\n    this.progress = 0;\r\n    this.text.content = content;\r\n    this.source = source;\r\n  }\r\n  compute(deltaTime:number) {\r\n    this.progress += (Math.PI / 60) * deltaTime;\r\n    if (this.progress >= Math.PI) {\r\n      this.removed = true;\r\n      return;\r\n    }\r\n    this.x = this.source.centerX + this.progress / 10;\r\n    this.y = this.source.centerY - Math.sin(this.progress);\r\n    this.text.x = this.x;\r\n    this.text.y = this.y;\r\n  }\r\n  render(context:CanvasRenderingContext2D, tilesize:number, ratio:number, camera:{x:0,y:0}) {\r\n    this.text.render(context, tilesize, ratio, camera);\r\n  }\r\n}\r\n","/** \r\n *  Acts as intermediate between the manager and the entities,\r\n *  the entities have a reference to this class OBJECT \r\n */\r\nimport * as Vfxs from \"./vfxs\";\r\nimport { Entity} from \"../entity\"\r\n\r\ntype VfxClass= keyof typeof Vfxs\r\n/** Singleton */\r\nclass VfxManager {\r\n    /** Instead of being deleted, removed Vfxs gets moved here to be reused later, gets populated by the gameDirector */\r\n    recyclePool:Vfxs.SpriteVfx[] = [];\r\n    environment:Vfxs.SpriteVfx[] = [];\r\n    /** Contains vfx classes declarations */\r\n    vfxClasses = {...Vfxs};\r\n    constructor() {\r\n    }\r\n    setEnvironment(environment:Vfxs.SpriteVfx[]) {\r\n        this.environment = environment;\r\n    }\r\n    /** Returns a recycled vfx or FALSE */\r\n    getRecycledVfx(vfxName:string, source:Entity) {\r\n        for (let i = this.recyclePool.length - 1; i >= 0; i--) {\r\n            if (this.recyclePool[i].name === vfxName) {\r\n                /** Found a matching Vfx */\r\n                this.recyclePool[i].reset(source);\r\n                return this.recyclePool.splice(i, 1)[0];\r\n            }\r\n        }\r\n        /** Matching Vfx was not found */\r\n        return false;\r\n    }\r\n    /** Returns a Vfx of the requested type and pushes it into the current level entities, this function gets imported and called by entities */\r\n    create = (vfxName:VfxClass, source:Entity) => {\r\n        let vfx = this.getRecycledVfx(vfxName, source) || new this.vfxClasses[vfxName](source);\r\n        this.environment.push(vfx);\r\n        return vfx;\r\n    }\r\n}\r\nconst vfxManager = new VfxManager();\r\nexport { vfxManager, Vfxs };","\r\nclass SoundManager {\r\n    playbackRate:number = 1;\r\n    volume:number = 1;\r\n    sounds:any = {\r\n        playRandom: (soundsArray:string[]) => {\r\n            this.sounds[soundsArray[(Math.random() * soundsArray.length | 0)]].play()\r\n        }\r\n    };\r\n    soundsBaseUrl = 'assets/soundFxs/';\r\n    constructor() {\r\n    }\r\n    /** takes an argument the sound file name (without extension) from the relative path in soundsBaseUrl */\r\n    createSound = (relativeUrl:string, loop = false, volume = 1, playbackRate = 1) => {\r\n        let fullUrl = `${this.soundsBaseUrl}${relativeUrl}.mp3`;\r\n        let splittedUrl = relativeUrl.split('/');\r\n        /** Extrapolates the name from the url */\r\n        let name = splittedUrl[splittedUrl.length - 1];\r\n        this.sounds[name] = new CustomAudio(fullUrl, loop, volume, playbackRate);\r\n    }\r\n}\r\nclass CustomAudio {\r\n    audio:HTMLAudioElement;\r\n    loop:boolean = false;\r\n    volume:number = 1;\r\n    playbackRate:number = 1;\r\n    calledPlayPromise = false;\r\n    constructor(url:string, loop = false, volume = 1, playbackRate = 1) {\r\n        this.audio = new Audio(url);\r\n        this.loop = loop;\r\n        this.volume = volume;\r\n        this.playbackRate = playbackRate;\r\n    }\r\n    play = (customVolume = 1, customPlaybackRate = 1) => {\r\n        if (this.calledPlayPromise) {\r\n            /** A play promise has been already called, do nothing */\r\n            return false;\r\n        }\r\n        /** Sets the audio volume */\r\n        this.audio.volume = this.volume * customVolume;\r\n        /** Sets the audio volume */\r\n        this.audio.loop = this.loop;\r\n        /** Sets the audio speed */\r\n        this.audio.playbackRate = this.playbackRate * customPlaybackRate;\r\n\r\n        if (this.audio.paused) {\r\n            /** If the audio is paused, just play it */\r\n            if (!this.audio.loop) {\r\n                /** If it isn't a loop reset the time */\r\n                this.audio.currentTime = 0;\r\n            }\r\n        } else {\r\n            /** If the audio is already running */\r\n            if (this.audio.loop) {\r\n                /** If it is a loop, do nothing */\r\n                return;\r\n            }\r\n            this.audio.pause();\r\n            this.audio.currentTime = 0;\r\n        }\r\n        /** Call the play promise */\r\n        let promise = this.audio.play();\r\n        this.calledPlayPromise = true;\r\n        if (promise !== undefined) {\r\n            promise.catch((e)=>{\r\n                /** Error response */\r\n                console.warn(\"there was an audio error!\", e)\r\n                this.calledPlayPromise = false;\r\n            }).then(() => {\r\n                this.calledPlayPromise = false;\r\n            })\r\n        }\r\n    }\r\n}\r\nconst soundManager = new SoundManager();\r\nexport { soundManager };\r\nexport default soundManager;\r\n/** Player sounds */\r\n// eg. sound creation\r\n// soundManager.createSound('sword-attack');\r\n// soundManager.createSound('sword-hit');\r\n// soundManager.createSound('pick-up');\r\n// soundManager.createSound('damaged');","import { checkCollisions } from \"../physics/checkCollisions\";\r\nimport * as Physics from \"../physics\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { vfxManager } from \"../vfxManager\";\r\nimport { soundManager } from \"../soundManager\";\r\nexport class Entity extends Sprite {\r\n  xVel: number = 0;\r\n  yVel: number = 0;\r\n  // External velocities (velocities acquired from external sources, like a strong hit)\r\n  xVelExt: number = 0;\r\n  yVelExt: number = 0;\r\n  speed: number = 0.1;\r\n  // higher inertia => faster deceleration\r\n  inertia: number = 0;\r\n  type: string = \"entity\";\r\n  state: string = \"idle\";\r\n  sounds: { playRandom: (soundsArray: any[]) => void } = soundManager.sounds;\r\n  stats: Stats = new Stats();\r\n  /** Defines whether this entity has low rendering order priority */\r\n  background: boolean = false;\r\n  /** Defines whether this entity is attached to the ground*/\r\n  grounded: boolean = false;\r\n  damaged: number = 0;\r\n  shadow: boolean = false;\r\n  solid: boolean = true;\r\n  /** Ignores computing and rendering of this entity */\r\n  removed: boolean = false;\r\n  /** Cannot be moved by other entities */\r\n  immovable: boolean = false;\r\n  /** The id of the room where this entity is stored */\r\n  // currentRoom: number = -1;\r\n  drops: any[] = [];\r\n  offsetX: number = 0;\r\n  offsetY: number = 0;\r\n  Physics: typeof Physics = Physics;\r\n  hasHpBar: boolean = false;\r\n  hasDisplayName: boolean = false;\r\n  /** Object containing the collisions amounts */\r\n  col: {\r\n    L: number; // Left side\r\n    R: number; // Right side\r\n    T: number; // Top side\r\n    B: number;\r\n  } = { L: 0, R: 0, T: 0, B: 0 };\r\n  /** Object representing the hitbox used for collision computations */\r\n  hitbox: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n  /** Represents the offsets of the hitbox, which may change based on current animation/state */\r\n  hitboxOffset: { x: number; y: number; w: number; h: number } = {\r\n    x: 0,\r\n    y: 0,\r\n    w: 0,\r\n    h: 0,\r\n  };\r\n\r\n  createVfx: (vfxName: any, source: any) => any = vfxManager.create;\r\n  checkCollisions: (\r\n    obj: any,\r\n    entities: any,\r\n    deltaTime?: number\r\n  ) => false | undefined = checkCollisions;\r\n  constructor(x: number = 0, y: number = 0) {\r\n    super(x, y);\r\n\r\n    this.updateHitbox();\r\n  }\r\n  /** Returns the stats.atk value */\r\n  get atk() {\r\n    return this.stats.atk;\r\n  }\r\n\r\n  /** Returns the stats.hp value */\r\n  get hp() {\r\n    return this.stats.hp;\r\n  }\r\n\r\n  /** Returns the stats.maxHp value */\r\n  set hp(value) {\r\n    this.stats.hp = value;\r\n  }\r\n\r\n\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties */\r\n  updateHitbox() {\r\n    this.hitbox.x = this.x + this.hitboxOffset.x;\r\n    this.hitbox.y = this.y + this.hitboxOffset.y;\r\n    this.hitbox.w = this.w + this.hitboxOffset.w;\r\n    this.hitbox.h = this.h + this.hitboxOffset.h;\r\n  }\r\n  /** Updates the hitbox's positions and size, relative to this absolute properties and the hitboxOffset properties\r\n   * @param {Entity} collider A reference to the entity collided to this one\r\n   */\r\n  onCollision(collider: Entity) {\r\n    // Collision events gets defined by children classes\r\n  }\r\n\r\n  /** Adjusts this entity's velocities according to collisions */\r\n  resolveCollisions() {\r\n    // Checks wether the entity is traveling against eventual colliding sides\r\n    if (this.col.L && this.xVel + this.xVelExt < 0) {\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.R && this.xVel + this.xVelExt > 0) {\r\n      this.xVel = 0;\r\n      this.xVelExt = 0;\r\n    }\r\n    if (this.col.T && this.yVel + this.yVelExt < 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    if (this.col.B && this.yVel + this.yVelExt > 0) {\r\n      this.yVel = 0;\r\n      this.yVelExt = 0;\r\n    }\r\n    // Resets the collision properties\r\n    this.col.L = 0;\r\n    this.col.R = 0;\r\n    this.col.T = 0;\r\n    this.col.B = 0;\r\n  }\r\n  /**\r\n   * Similar to the *onCollision* method, gets called whenever this entity collides with a damaging Entity,\r\n   * which could be a spell, an attack, or an obstacle\r\n   * @param {Entity} source The source of the attack\r\n   */\r\n  onHit(source: Entity) {\r\n    this.xVelExt = source.xVel;\r\n    this.yVelExt = source.yVel;\r\n  }\r\n  /**\r\n   * Updates the external velocities according to the inertia\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updateVelocities(deltaTime: number) {\r\n    if (this.xVelExt !== 0) {\r\n      this.xVelExt *= Math.pow(this.inertia, deltaTime);\r\n      if (Math.abs(this.xVelExt) < 0.001) {\r\n        this.xVelExt = 0;\r\n      }\r\n    }\r\n    if (this.yVelExt !== 0) {\r\n      this.yVelExt *= Math.pow(this.inertia, deltaTime);\r\n      if (Math.abs(this.yVelExt) < 0.001) {\r\n        this.yVelExt = 0;\r\n      }\r\n    }\r\n  }\r\n  /** Moves this entity according to its velocities\r\n   * @param {Number} deltaTime Time multiplier\r\n   */\r\n  updatePosition(deltaTime: number) {\r\n    this.resolveCollisions();\r\n    this.x += (this.xVel + this.xVelExt) * deltaTime;\r\n    this.y += (this.yVel + this.yVelExt) * deltaTime;\r\n  }\r\n\r\n  /**\r\n   * Handles the computational aspects of the entity\r\n   * @param {Number} deltaTime Time multiplier\r\n   * @param {Entity[]} deltaTime Time multiplier\r\n   */\r\n  compute(deltaTime: number, environment: Entity[] = []) {}\r\n\r\n  /**\r\n   * Handles the rendering of this entity and eventual renderable children (e.g. Equipment, Shadow, etc..)\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {object} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    //this.renderSprite(context, tilesize, ratio, camera);\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n  }\r\n\r\n  /** Used for debugging, displays the entity's hitbox\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderHitbox(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    context.strokeStyle = \"red\";\r\n    context.beginPath();\r\n    context.strokeRect(\r\n      (this.hitbox.x + camera.x) * tilesize * ratio,\r\n      (this.hitbox.y + camera.y) * tilesize * ratio,\r\n      this.hitbox.w * tilesize * ratio,\r\n      this.hitbox.h * tilesize * ratio\r\n    );\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n\r\n  /** Casts an elliptical shadow just below this entity\r\n   *\r\n   * @param {CanvasRenderingContext2D} context The canvas drawing context\r\n   * @param {Number} tilesize  The size of a single tile\r\n   * @param {Number} ratio The scaling of each pixel\r\n   * @param {obj} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  renderShadow(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 }\r\n  ) {\r\n    if (!this.shadow || this.removed) {\r\n      return;\r\n    }\r\n    // Provisional shadow rendering\r\n    context.fillStyle = \"#14182e\";\r\n    context.globalAlpha = 0.6;\r\n    context.strokeStyle = \"#ffffff\";\r\n    context.beginPath();\r\n    context.ellipse(\r\n      (this.x + camera.x + this.w / 2) * tilesize * ratio,\r\n      (this.y + this.h + camera.y) * tilesize * ratio,\r\n      (this.w / 2) * tilesize * ratio,\r\n      (this.w / 4) * tilesize * ratio,\r\n      0,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n    context.closePath();\r\n    context.fill();\r\n    context.globalAlpha = 1;\r\n  }\r\n}\r\n\r\n/** Class representing the basic stats of an entity */\r\nclass Stats {\r\n  lv: number;\r\n  maxHp: number;\r\n  hp: any;\r\n  maxExp: number;\r\n  exp: number;\r\n  maxMana: number;\r\n  mana: any;\r\n  atk: number;\r\n  atkSpeed: number;\r\n  expValue: number;\r\n  constructor() {\r\n    /* The current level, level augments every other stat */\r\n    this.lv = 1;\r\n    /* Maximum hit points */\r\n    this.maxHp = 10;\r\n    /* Current hit points, hp <= 0 will result in an entity's death  */\r\n    this.hp = this.maxHp;\r\n    /* Threshold experience */\r\n    this.maxExp = 10;\r\n    /* Current experience, reaching the threshold will result in a level up */\r\n    this.exp = 0;\r\n    /* Maximum mana */\r\n    this.maxMana = 15;\r\n    /* Current mana, the mana is a currency used to cast spells/perform special actions */\r\n    this.mana = this.maxMana;\r\n\r\n    /* The attack stat, represents how many hit points will get subtracted to other entities when getting attacked by this one */\r\n    this.atk = 1;\r\n    /* Multiplier of the rate at which this entity attacks, the higher it is, the lower the intervals */\r\n    this.atkSpeed = 1;\r\n    /* The experience value that this entity will transfer to the killer entity */\r\n    this.expValue = 1;\r\n  }\r\n}\r\nexport default Entity;\r\n","/**\r\n * The Controls class initializes the input listeners and tracks changes.\r\n */\r\nexport class Controls {\r\n  up: boolean;\r\n  down: boolean;\r\n  left: boolean;\r\n  right: boolean;\r\n  upR: boolean;\r\n  downR: boolean;\r\n  leftR: boolean;\r\n  rightR: boolean;\r\n  spacebar: boolean;\r\n  e: boolean;\r\n  r: boolean;\r\n  lClickDown: boolean;\r\n  mClickDown: boolean;\r\n  rClickDown: boolean;\r\n  test: string;\r\n  currentPos: number;\r\n  lastDir: number;\r\n  mouseX: number;\r\n  mouseY: number;\r\n  constructor() {\r\n    this.up = false;\r\n    this.down = false;\r\n    this.left = false;\r\n    this.right = false;\r\n    this.upR = false;\r\n    this.downR = false;\r\n    this.leftR = false;\r\n    this.rightR = false;\r\n    this.spacebar = false;\r\n    this.e = false;\r\n    this.r = false;\r\n    this.lClickDown = false;\r\n    this.mClickDown = false;\r\n    this.rClickDown = false;\r\n    this.test = \"test\";\r\n    this.currentPos = 0;\r\n    this.lastDir = 0;\r\n    this.mouseX = 0;\r\n    this.mouseY = 0;\r\n    this.initListeners();\r\n  }\r\n  initListeners() {\r\n    document.addEventListener(\"mousedown\", handleMouseEvt);\r\n    document.addEventListener(\"mouseup\", handleMouseEvt);\r\n    document.addEventListener(\"touchstart\", handleTouchEvt);\r\n    document.addEventListener(\"touchend\", handleTouchEvt);\r\n    document.addEventListener(\"keydown\", handleKeyboardEvt);\r\n    document.addEventListener(\"keyup\", handleKeyboardEvt);\r\n    const that = this;\r\n    function handleKeyboardEvt(evt: KeyboardEvent) {\r\n      const isDown = evt.type === \"keydown\";\r\n      switch (evt.key) {\r\n        case \"w\": //up\r\n          that.up = isDown;\r\n          break;\r\n        case \"s\": //down\r\n          that.down = isDown;\r\n          break;\r\n        case \"a\": //left\r\n          that.left = isDown;\r\n          break;\r\n        case \"d\": //right\r\n          that.right = isDown;\r\n          break;\r\n        case \"ArrowUp\": //down\r\n          that.upR = isDown;\r\n          break;\r\n        case \"ArrowDown\": //down\r\n          that.downR = isDown;\r\n          break;\r\n        case \"ArrowLeft\": //left\r\n          that.leftR = isDown;\r\n          break;\r\n        case \"ArrowRight\": //right\r\n          that.rightR = isDown;\r\n          break;\r\n        case \" \":\r\n          that.spacebar = isDown;\r\n          break;\r\n        case \"e\": //e\r\n          that.e = isDown;\r\n          break;\r\n        case \"r\": //r\r\n          that.r = isDown;\r\n          break;\r\n        case \"Escape\": // Escape\r\n          break;\r\n        case \"y\": //y\r\n          //toggleFullScreen();\r\n          break;\r\n        //debug\r\n        default:\r\n          console.log(`Pressed \"${evt.key}\" key`);\r\n          break;\r\n      }\r\n    }\r\n    function handleTouchEvt(evt: TouchEvent) {\r\n      console.log(evt);\r\n      const isDown = evt.type === \"touchstart\";\r\n      that.lClickDown = isDown;\r\n      if (!isDown) {\r\n        return;\r\n      }\r\n      that.mouseX = evt.touches[0].clientX;\r\n      that.mouseY = evt.touches[0].clientY;\r\n    }\r\n    function handleMouseEvt(evt: MouseEvent) {\r\n      const isDown = evt.type === \"mousedown\";\r\n      switch (evt.button) {\r\n        case 0:\r\n          that.lClickDown = isDown;\r\n          break;\r\n        case 1:\r\n          that.mClickDown = isDown;\r\n          break;\r\n        case 2:\r\n          that.rClickDown = isDown;\r\n          break;\r\n      }\r\n      that.mouseX = evt.clientX;\r\n      that.mouseY = evt.clientY;\r\n    }\r\n  }\r\n}\r\nexport default Controls;\r\n","export type MetaLike = {\r\n  tilesize: number;\r\n  ratio: number;\r\n};\r\nexport type CameraLike = {\r\n  x: number;\r\n  y: number;\r\n};\r\nexport class Mouse {\r\n  x = 0;\r\n  y = 0;\r\n  gui = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n  guiRef = {\r\n    ratio: 1,\r\n  };\r\n  canvas: HTMLCanvasElement | undefined;\r\n  meta: MetaLike;\r\n  camera: CameraLike;\r\n  /** Absolute position of the mouse (doesn't take to account the camera offsets) */\r\n  absolute = {\r\n    x: 0,\r\n    y: 0,\r\n    /** Defines if the mouse is hovering an user interface element */\r\n    hoverUI: false,\r\n    /** Defines if the mouse is currently dragging an user interface element */\r\n    dragging: false,\r\n    /** A reference to whatever the mouse is currently dragging */\r\n    slot: {},\r\n  };\r\n  lastMouseX = 0;\r\n  lastMouseY = 0;\r\n  /**\r\n   * Creates a Mouse object\r\n   * @param {HTMLCanvasElement} canvas The canvas HTML element\r\n   * @param {Meta} meta  Meta informations\r\n   * @param {Camera | any} camera Optional Camera abstraction representing an offset relative to the map (0,0) coordinates\r\n   */\r\n  constructor(\r\n    canvas: HTMLCanvasElement | undefined,\r\n    meta: MetaLike,\r\n    camera: CameraLike\r\n  ) {\r\n    this.canvas = canvas;\r\n    this.meta = meta;\r\n    this.camera = camera;\r\n    document.addEventListener(\"mousemove\", this.updatePos);\r\n    document.addEventListener(\"touchstart\", this.updatePosMobile);\r\n  }\r\n  setCanvas = (canvas: HTMLCanvasElement) => {\r\n    this.canvas = canvas;\r\n  };\r\n  /**\r\n   * Translates the mouse event coordinates into canvas coordinates, relatively to the tilesize/ratio multipliers and the camera offsets\r\n   * @param {*} evt Event object containing information about the mouse pointer position within the browser\r\n   */\r\n  updatePos = (\r\n    evt: { clientX: number; clientY: number } = {\r\n      clientX: this.lastMouseX,\r\n      clientY: this.lastMouseY,\r\n    }\r\n  ) => {\r\n    if (!this.canvas) {\r\n      // Needs a canvas to be specified\r\n      return;\r\n    }\r\n    this.lastMouseX = evt.clientX;\r\n    this.lastMouseY = evt.clientY;\r\n    this.absolute.x =\r\n      (evt.clientX - this.canvas.offsetLeft) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n    this.absolute.y =\r\n      (evt.clientY - this.canvas.offsetTop) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n\r\n    this.x = this.absolute.x - this.camera.x;\r\n    this.y = this.absolute.y - this.camera.y;\r\n\r\n    this.gui.x = (this.absolute.x * this.meta.ratio) / this.guiRef.ratio;\r\n    this.gui.y = (this.absolute.y * this.meta.ratio) / this.guiRef.ratio;\r\n  };\r\n  /**\r\n   * Translates the mouse event coordinates into canvas coordinates, relatively to the tilesize/ratio multipliers and the camera offsets\r\n   * @param {*} evt Event object containing information about the mouse pointer position within the browser\r\n   */\r\n  updatePosMobile = (evt: TouchEvent) => {\r\n    if (!this.canvas) {\r\n      // Needs a canvas to be specified\r\n      return;\r\n    }\r\n    if (evt.touches.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.lastMouseX = evt.touches[0].clientX;\r\n    this.lastMouseY = evt.touches[0].clientY;\r\n    this.absolute.x =\r\n      (evt.touches[0].clientX - this.canvas.offsetLeft) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n    this.absolute.y =\r\n      (evt.touches[0].clientY - this.canvas.offsetTop) /\r\n      this.meta.tilesize /\r\n      this.meta.ratio;\r\n\r\n    this.x = this.absolute.x - this.camera.x;\r\n    this.y = this.absolute.y - this.camera.y;\r\n\r\n    this.gui.x = (this.absolute.x * this.meta.ratio) / this.guiRef.ratio;\r\n    this.gui.y = (this.absolute.y * this.meta.ratio) / this.guiRef.ratio;\r\n  };\r\n}\r\nexport default Mouse;\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","class Debug {\r\n  div: HTMLDivElement;\r\n  activateButton: HTMLButtonElement;\r\n  window: Window | null;\r\n  active: boolean;\r\n  times: number[];\r\n  drawLater: (ColoredPoint | ColoredRect | ColoredLine)[];\r\n  constructor() {\r\n    this.div = this.createDiv();\r\n    this.active = false;\r\n    this.times = [];\r\n    this.drawLater = [];\r\n    this.window = null;\r\n    this.activateButton = this.createActivateButton();\r\n    // this.activate();\r\n  }\r\n  drawRect = (rect: Rect, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"rect\",\r\n      x: rect.x,\r\n      y: rect.y,\r\n      w: rect.w,\r\n      h: rect.h,\r\n    });\r\n  };\r\n  drawPoint = (point: Point, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"point\",\r\n      x: point.x - 0.1,\r\n      y: point.y - 0.1,\r\n      w: 0.2,\r\n      h: 0.2,\r\n    });\r\n  };\r\n  drawLine = (pointA: Point, pointB: Point, color = \"red\") => {\r\n    if (!this.active) return;\r\n    this.drawLater.push({\r\n      color,\r\n      type: \"line\",\r\n      x1: pointA.x,\r\n      y1: pointA.y,\r\n      x2: pointB.x,\r\n      y2: pointB.y,\r\n    });\r\n  };\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: Point\r\n  ) => {\r\n    if (!this.active) return;\r\n    for (let draw of this.drawLater) {\r\n      context.beginPath();\r\n      context.strokeStyle = draw.color;\r\n      switch (draw.type) {\r\n        case \"point\":\r\n        case \"rect\":\r\n          context.rect(\r\n            (draw.x + camera.x) * tilesize * ratio,\r\n            (draw.y + camera.y) * tilesize * ratio,\r\n            draw.w * tilesize * ratio,\r\n            draw.h * tilesize * ratio\r\n          );\r\n          break;\r\n        case \"line\":\r\n          context.moveTo(\r\n            (draw.x1 + camera.x) * tilesize * ratio,\r\n            (draw.y1 + camera.y) * tilesize * ratio\r\n          );\r\n          context.lineTo(\r\n            (draw.x2 + camera.x) * tilesize * ratio,\r\n            (draw.y2 + camera.y) * tilesize * ratio\r\n          );\r\n          break;\r\n      }\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n    this.drawLater.length = 0;\r\n  };\r\n  printTime = () => {\r\n    if (!this.active) return;\r\n    this.div.innerHTML = `Function time: ${this.averageTime().toFixed(4)}ms`;\r\n    this.times.length = 0;\r\n  };\r\n  /** Used to view the content of an object in the debugger window */\r\n  inspect = (obj: object) => {\r\n    if (!this.active) return;\r\n    this.div.innerHTML = `<table style=\"color:white;\">\r\n        ${Object.entries(obj).reduce<string>((acc, [name, value]) => {\r\n          if ([\"object\", \"function\"].includes(typeof value)) return acc;\r\n          return acc + `<tr><td>${name}</td><td>${value}</td></tr>`;\r\n        }, \"\")}\r\n      </table>\r\n      `;\r\n  };\r\n  // Measures the time a function takes to complete(ms)\r\n  measureTime = (callback: Function, ...args: any[]) => {\r\n    if (!this.active) return;\r\n    if (!this.active) {\r\n      this.activate();\r\n    }\r\n    let start = performance.now();\r\n    callback(...args);\r\n    this.times.push(performance.now() - start);\r\n  };\r\n  private activate = () => {\r\n    this.createWindow(600, 600);\r\n    this.active = true;\r\n    this.activateButton.onclick = this.deactivate;\r\n    this.activateButton.innerText = \"DEACTIVATE DEBUG\";\r\n  };\r\n  private deactivate = () => {\r\n    if (this.window) {\r\n      this.window.close();\r\n      this.window = null;\r\n    }\r\n    this.active = false;\r\n    this.activateButton.onclick = this.activate;\r\n    this.activateButton.innerText = \"ACTIVATE DEBUG\";\r\n  };\r\n  private averageTime = () => {\r\n    let sum = 0;\r\n    for (let time of this.times) {\r\n      sum += time;\r\n    }\r\n    return sum / this.times.length;\r\n  };\r\n  /** Creates a window attached to this Debug instance */\r\n  private createWindow = (width: number, height: number) => {\r\n    this.window = window.open(\r\n      \"\",\r\n      \"targetWindow\",\r\n      `noopener=false,noreferrer=false,popup,width=${width},height=${height}`\r\n    );\r\n    if (this.window) {\r\n      this.active = true;\r\n      this.window.document.body.style.margin = \"0\";\r\n      this.window.document.body.style.padding = \"0\";\r\n      this.window.window.document.body.style.boxSizing = \"border-box\";\r\n      this.window.window.document.body.style.backgroundColor = \"black\";\r\n      this.window.window.document.body.style.color = \"white\";\r\n      this.window.window.document.body.style.padding = \"10px\";\r\n      this.window.document.title = \"debugger\";\r\n      this.window.document.body.innerHTML = \"\";\r\n      this.window.document.body.appendChild(this.div);\r\n      this.window.onbeforeunload = this.deactivate;\r\n      this.window.addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"F2\") {\r\n          this.window?.close();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  /** Creates a div which will eventually display data */\r\n  private createDiv = () => {\r\n    let div = document.createElement(\"div\");\r\n    div.style.position = \"absolute\";\r\n    div.style.inset = \"0\";\r\n    div.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\r\n    return div;\r\n  };\r\n  /** Creates a button used to activate/deactivate debug mode */\r\n  private createActivateButton = () => {\r\n    let button = document.createElement(\"button\");\r\n    button.innerText = \"ACTIVATE DEBUG\";\r\n    button.style.position = \"absolute\";\r\n    button.style.top = \"20px\";\r\n    button.style.right = \"20px\";\r\n    button.onclick = () => this.activate();\r\n    window.document.body.appendChild(button);\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"F2\") {\r\n        const clickEvent = new MouseEvent(\"click\", {\r\n          view: window,\r\n          bubbles: true,\r\n          cancelable: true,\r\n        });\r\n        button.dispatchEvent(clickEvent);\r\n      }\r\n    });\r\n    return button;\r\n  };\r\n}\r\nexport const debug = new Debug();\r\nexport default debug;\r\n","import Entity from \"../../entity\";\r\n\r\nexport type OffsetPositioning = {\r\n  x: () => number;\r\n  y: () => number;\r\n  rot: () => number;\r\n  delay:()=>number\r\n};\r\nexport class Sword extends Entity {\r\n  source: Entity;\r\n  offsetPositioning: OffsetPositioning;\r\n  constructor(\r\n    source: Entity,\r\n    offsetPositioning: OffsetPositioning = {\r\n      x: () => 0,\r\n      y: () => 0,\r\n      rot: () => 0,\r\n      delay:()=>12\r\n    }\r\n  ) {\r\n    super(source.x, source.y);\r\n    this.rot = source.rot;\r\n    this.w = 1;\r\n    this.h = 1;\r\n    this.source = source;\r\n    this.offsetPositioning = offsetPositioning;\r\n    this.setAnimation(\"idle\", [4], [0]);\r\n    this.setAnimation(\"attack\", [4], [1]);\r\n    this.setAnimation(\"defend\", [4], [2]);\r\n  }\r\n  //Math.cos(this.source.rot+1.5)\r\n  //Math.sin(this.source.rot+1.5)\r\n  follow(deltaTime: number) {\r\n    const relativePositioning = {\r\n      x: this.source.x + this.offsetPositioning.x(),\r\n      y: this.source.y + this.offsetPositioning.y(),\r\n    };\r\n    this.x +=\r\n      ((relativePositioning.x + this.source.w / 2 - this.w / 2 - this.x) / this.offsetPositioning.delay()) *\r\n      deltaTime;\r\n\r\n    this.y +=\r\n      ((relativePositioning.y + this.source.h / 2 - this.h / 2 - this.y) / this.offsetPositioning.delay()) *\r\n      deltaTime;\r\n    // Handle the case when the rot is back to 0\r\n    // 3.14 / -3.14\r\n    // add +1\r\n    const target = this.source.rot + this.offsetPositioning.rot();\r\n    if (target - this.rot > Math.PI) {\r\n      this.rot += Math.PI * 2;\r\n    } else if (target - this.rot < -Math.PI) {\r\n      this.rot -= Math.PI * 2;\r\n    } else {\r\n      this.rot += ((target - this.rot) / this.offsetPositioning.delay()) * deltaTime;\r\n    }\r\n  }\r\n  attack() {}\r\n  render(\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera?: {\r\n      x: number;\r\n      y: number;\r\n    }\r\n  ) {\r\n    const pivot = { x: this.w / 2, y: this.h / 2 };\r\n    this.renderSprite(context, tilesize, ratio, camera, pivot);\r\n  }\r\n}\r\n\r\nexport default Sword;\r\n","import { Entity, Sprite } from \"../../entity\";\r\nimport { Controls } from \"../../controls\";\r\nimport { Mouse, MetaLike, CameraLike } from \"../../mouse\";\r\nimport debug from \"modules/debug\";\r\nimport Sword, { OffsetPositioning } from \"modules/actors/player/Sword\";\r\nexport class Player extends Entity {\r\n  controls: Controls;\r\n  mouse: Mouse;\r\n  mantle: Sprite;\r\n  skirt: Sprite;\r\n  swords: Sword[];\r\n  swordsOffsets: ReturnType<typeof swordOffsets>;\r\n  stance: string;\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    canvas: HTMLCanvasElement,\r\n    meta: MetaLike,\r\n    camera: CameraLike\r\n  ) {\r\n    super(x, y);\r\n    this.stance = \"idle\";\r\n    this.inertia = 0.8;\r\n    this.swordsOffsets = swordOffsets(this);\r\n    this.swords = [\r\n      new Sword(this, { ...this.swordsOffsets[\"idle\"][0] }),\r\n      new Sword(this, { ...this.swordsOffsets[\"idle\"][1] }),\r\n    ];\r\n    this.mouse = new Mouse(canvas, meta, camera);\r\n    this.controls = new Controls();\r\n    this.w = 2;\r\n    this.h = 2;\r\n    this.setAnimation(\"idle\", [0], [0]);\r\n    this.prevPos = [];\r\n    this.mantle = new Sprite(this.x, this.y);\r\n    this.mantle.w = 2;\r\n    this.mantle.h = 2;\r\n    this.mantle.setAnimation(\"idle\", [0], [2]);\r\n\r\n    this.skirt = new Sprite(this.x, this.y);\r\n    this.skirt.w = 2;\r\n    this.skirt.h = 2;\r\n    this.skirt.setAnimation(\"idle\", [0], [4]);\r\n  }\r\n  resolveInputs = () => {\r\n    this.stance = \"idle\";\r\n    this.swords.forEach((s) => s.loadAnimation(\"idle\"));\r\n    if (this.controls.rClickDown && this.stance !== \"defend\") {\r\n      this.swords[0].offsetPositioning = {\r\n        ...this.swordsOffsets[\"attack0\"][0],\r\n      };\r\n      this.swords[1].offsetPositioning = {\r\n        ...this.swordsOffsets[\"attack0\"][1],\r\n      };\r\n      this.swords[0].loadAnimation(\"attack\");\r\n      this.stance = \"attack0\";\r\n    }\r\n    if (this.controls.lClickDown && this.stance !== \"defend\") {\r\n      this.swords[0].offsetPositioning = {\r\n        ...this.swordsOffsets[\"attack1\"][0],\r\n      };\r\n      this.swords[1].offsetPositioning = {\r\n        ...this.swordsOffsets[\"attack1\"][1],\r\n      };\r\n      this.swords[1].loadAnimation(\"attack\");\r\n      this.stance = \"attack1\";\r\n    }\r\n    if (this.controls.lClickDown && this.controls.rClickDown) {\r\n      this.swords[0].offsetPositioning = { ...this.swordsOffsets[\"defend\"][0] };\r\n      this.swords[1].offsetPositioning = { ...this.swordsOffsets[\"defend\"][1] };\r\n      this.swords.forEach((s) => s.loadAnimation(\"defend\"));\r\n      this.stance = \"defend\";\r\n    }\r\n    if (\r\n      this.stance === \"idle\" &&\r\n      this.swords[0].offsetPositioning.x() !== this.swordsOffsets[\"idle\"][1].x()\r\n    ) {\r\n      this.swords[0].offsetPositioning = {\r\n        ...this.swordsOffsets[\"idle\"][0],\r\n      };\r\n      this.swords[1].offsetPositioning = {\r\n        ...this.swordsOffsets[\"idle\"][1],\r\n      };\r\n    }\r\n    [this, this.mantle, this.swords[0], this.swords[1], this.skirt].forEach(\r\n      (e) => (e.trackPos = false)\r\n    );\r\n    if (this.controls.e) {\r\n      [this, this.mantle, this.swords[0], this.swords[1], this.skirt].forEach(\r\n        (e) => (e.trackPos = true)\r\n      );\r\n      this.xVelExt = Math.cos(this.rot) * 0.6;\r\n      this.yVelExt = Math.sin(this.rot) * 0.6;\r\n    } else if (!this.xVelExt && !this.yVelExt) {\r\n      [this, this.mantle, this.swords[0], this.swords[1], this.skirt].forEach(\r\n        (e) => {\r\n          e.trackPos = false;\r\n        }\r\n      );\r\n    }\r\n\r\n    // Moves\r\n    if (this.controls.left && !this.controls.right && !this.col.L) {\r\n      this.xVel = -this.speed;\r\n      this.left = 1;\r\n    } else if (this.xVel < 0) {\r\n      this.xVel = 0;\r\n    }\r\n    if (this.controls.right && !this.controls.left && !this.col.R) {\r\n      this.xVel = this.speed;\r\n      this.left = 0;\r\n    } else if (this.xVel > 0) {\r\n      this.xVel = 0;\r\n    }\r\n    if (this.controls.up && !this.controls.down && !this.col.B) {\r\n      this.yVel = -this.speed;\r\n    } else if (this.yVel < 0) {\r\n      this.yVel = 0;\r\n    }\r\n    if (this.controls.down && !this.controls.up && !this.col.T) {\r\n      this.yVel = this.speed;\r\n    } else if (this.yVel > 0) {\r\n      this.yVel = 0;\r\n    }\r\n    if (\r\n      !this.controls.left &&\r\n      !this.controls.right &&\r\n      !this.controls.up &&\r\n      !this.controls.down\r\n    ) {\r\n      this.xVel = 0;\r\n      this.yVel = 0;\r\n    }\r\n    if (\r\n      +this.controls.left +\r\n        +this.controls.right +\r\n        +this.controls.up +\r\n        +this.controls.down >\r\n      1\r\n    ) {\r\n      this.xVel /= 1.42;\r\n      this.yVel /= 1.42;\r\n    }\r\n  };\r\n  compute = (deltaTime: number) => {\r\n    this.rot =\r\n      this.Physics.getAngle({\r\n        x1: this.x + this.w / 2,\r\n        y1: this.y + this.h / 2,\r\n        x2: this.mouse.x,\r\n        y2: this.mouse.y,\r\n      }) +\r\n      Math.PI * 2;\r\n    this.resolveInputs();\r\n    this.updateVelocities(deltaTime);\r\n    this.updatePosition(deltaTime);\r\n    this.updateHitbox();\r\n\r\n    this.swords[0].follow(deltaTime);\r\n    this.swords[1].follow(deltaTime);\r\n    this.updatePropPosition(this.mantle, deltaTime, 3);\r\n    this.updatePropPosition(this.skirt, deltaTime, 5);\r\n\r\n    debug.inspect(this);\r\n    debug.drawPoint(this.centerPoint);\r\n    debug.drawPoint(this.mouse, \"green\");\r\n    debug.drawLine(this.centerPoint, this.mouse, \"pink\");\r\n  };\r\n  render = (\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera?: {\r\n      x: number;\r\n      y: number;\r\n    }\r\n  ) => {\r\n    if (this.prevPos.length) {\r\n      if(this.controls.e){\r\n        context.filter=\"brightness(50%)\"\r\n      }\r\n      const pivot = { x: this.w / 2, y: this.h / 2 };\r\n      [this.skirt, this.mantle, this.swords[0], this.swords[1], this].forEach(\r\n        (sprite) => {\r\n          sprite.prevPos.forEach((pos,i) => {\r\n            sprite.renderSprite(context, tilesize, ratio, camera, pivot, pos);\r\n            pos.opacity-=0.03\r\n            if(pos.opacity<=0){\r\n              sprite.prevPos.splice(i,1)\r\n            }\r\n          });\r\n        }\r\n      );\r\n    }\r\n    this.skirt.renderSprite(context, tilesize, ratio, camera);\r\n    this.mantle.renderSprite(context, tilesize, ratio, camera);\r\n    this.renderArm(this.swords[0],context, tilesize, ratio, camera)\r\n    this.renderArm(this.swords[1],context, tilesize, ratio, camera)\r\n    this.swords[0].renderSprite(context, tilesize, ratio, camera);\r\n    this.swords[1].renderSprite(context, tilesize, ratio, camera);\r\n    this.renderSprite(context, tilesize, ratio, camera);\r\n    context.fillStyle = \"red\";\r\n    context.fillStyle = \"black\";\r\n    context.filter=\"none\"\r\n  };\r\n  private updatePropPosition = (\r\n    sprite: Sprite,\r\n    deltaTime: number,\r\n    offset: number = 5\r\n  ) => {\r\n    sprite.updateSprite(deltaTime);\r\n    sprite.x +=\r\n      ((this.x + this.w / 2 - sprite.w / 2 - sprite.x) / offset) * deltaTime;\r\n    sprite.y +=\r\n      ((this.y + this.h / 2 - sprite.h / 2 - sprite.y) / offset) * deltaTime;\r\n    const target = this.rot;\r\n    if (target - sprite.rot > Math.PI) {\r\n      sprite.rot += Math.PI * 2;\r\n    } else if (target - sprite.rot < -Math.PI) {\r\n      sprite.rot -= Math.PI * 2;\r\n    } else {\r\n      sprite.rot += ((target - sprite.rot) / offset) * deltaTime;\r\n    }\r\n  };\r\n  private renderArm = (\r\n    sword:Sword,\r\n    context: CanvasRenderingContext2D,\r\n    tilesize: number,\r\n    ratio: number,\r\n    camera: { x: number; y: number } = { x: 0, y: 0 },\r\n  ) => {\r\n    context.beginPath();\r\n    const prot=sword===this.swords[0]?Math.PI-Math.PI/4:-Math.PI+Math.PI/4;\r\n    const pcos=Math.cos(this.rot+prot)*0.5;\r\n    const psin=Math.sin(this.rot+prot)*0.5;\r\n    context.moveTo(\r\n      (this.centerPoint.x +pcos + camera.x) * tilesize * ratio,\r\n      (this.centerPoint.y +psin  + camera.y) * tilesize * ratio\r\n    );\r\n    const srot=Math.PI-Math.PI/4\r\n    const scos=Math.cos(sword.rot+srot)*0.5;\r\n    const ssin=Math.sin(sword.rot+srot)*0.5;\r\n    context.lineTo(\r\n      (sword.centerPoint.x +scos + camera.x) * tilesize * ratio,\r\n      (sword.centerPoint.y +ssin + camera.y) * tilesize * ratio\r\n    );\r\n    context.closePath();\r\n    context.strokeStyle = \"#f5a097\";\r\n    context.lineWidth=8;\r\n    context.stroke();\r\n    context.strokeStyle = \"#fef3c0\";\r\n    context.lineWidth=4;\r\n    context.stroke();\r\n\r\n  };\r\n}\r\nexport default Player;\r\nconst swordOffsets = (source: Entity) =>\r\n  ({\r\n    idle: [\r\n      {\r\n        x: () => Math.cos(source.rot + 1.5),\r\n        y: () => Math.sin(source.rot + 1.5),\r\n        rot: () => Math.PI / 2,\r\n        delay: () => 8,\r\n      },\r\n      {\r\n        x: () => Math.cos(source.rot - 1.5),\r\n        y: () => Math.sin(source.rot - 1.5),\r\n        rot: () => Math.PI * 2,\r\n        delay: () => 8,\r\n      },\r\n    ],\r\n    defend: [\r\n      {\r\n        x: () => Math.cos(source.rot + 0.3) * 0.9,\r\n        y: () => Math.sin(source.rot + 0.3) * 0.9,\r\n        rot: () => -0.3,\r\n        delay: () => 3,\r\n      },\r\n      {\r\n        x: () => Math.cos(source.rot - 0.3) * 0.9,\r\n        y: () => Math.sin(source.rot - 0.3) * 0.9,\r\n        rot: () => Math.PI / 2 + 0.3,\r\n        delay: () => 3,\r\n      },\r\n    ],\r\n    attack0: [\r\n      {\r\n        x: () => Math.cos(source.rot) * 1.7,\r\n        y: () => Math.sin(source.rot) * 1.7,\r\n        rot: () => Math.PI / 4,\r\n        delay: () => 3,\r\n      },\r\n      {\r\n        x: () => Math.cos(source.rot - 2) * 0.8,\r\n        y: () => Math.sin(source.rot - 2) * 0.8,\r\n        rot: () => Math.PI * 2,\r\n        delay: () => 5,\r\n      },\r\n    ],\r\n    attack1: [\r\n      {\r\n        x: () => Math.cos(source.rot + 2) * 0.8,\r\n        y: () => Math.sin(source.rot + 2) * 0.8,\r\n        rot: () => Math.PI / 2,\r\n        delay: () => 5,\r\n      },\r\n      {\r\n        x: () => Math.cos(source.rot) * 1.7,\r\n        y: () => Math.sin(source.rot) * 1.7,\r\n        rot: () => Math.PI / 4,\r\n        delay: () => 3,\r\n      },\r\n    ],\r\n  } as const);\r\n","import Entity from \"modules/entity\";\r\nimport { Meta } from \"modules/meta\";\r\nexport class Camera {\r\n  focus: Rect | Entity;\r\n  lockedAngles = true;\r\n  zoom = true;\r\n  x: number;\r\n  y: number;\r\n  shake = 0;\r\n  constructor(focus = { x: 0, y: 0, w: 0, h: 0 }) {\r\n    this.focus = focus;\r\n    this.x = focus.x;\r\n    this.y = focus.y;\r\n  }\r\n  changeFocus(actor: Rect, smoothly = false) {\r\n    this.focus = actor;\r\n    if (!smoothly) {\r\n      this.x = -this.focus.x;\r\n      this.y = -this.focus.y;\r\n    }\r\n  }\r\n  /**\r\n   * Updates the camera position\r\n   *\r\n   * @param {MetaLike} meta\r\n   * @param {Object} boundingSq A square defining the map boundaries\r\n   */\r\n  compute(meta: Meta, boundingSq: Rect) {\r\n    let boundingBox = boundingSq;\r\n    if (boundingBox.w < meta.tilesWidth + 1) {\r\n      boundingBox.x -= (meta.tilesWidth + 1 - boundingBox.w) / 2;\r\n      boundingBox.w = meta.tilesWidth + 1;\r\n    }\r\n    if (boundingBox.h < meta.tilesHeight + 1) {\r\n      boundingBox.y -= (meta.tilesHeight + 1 - boundingBox.h) / 2;\r\n      boundingBox.h = meta.tilesHeight + 1;\r\n    }\r\n    // Compute the ratio\r\n    if (this.zoom) {\r\n      meta.changeRatio(\r\n        meta.ratio + ((meta.baseRatio - meta.ratio) / 22) * meta.deltaTime\r\n      );\r\n    } else {\r\n      /*\r\n      if (meta.ratio !== meta.baseRatio) {\r\n        meta.ratio = meta.baseRatio;\r\n        meta.tilesWidth = meta.baseTilesWidth;\r\n        meta.tilesHeight = meta.baseTilesHeight;\r\n      }\r\n      */\r\n    }\r\n    // Updates meta pos\r\n\r\n    /** Target new x position */\r\n    let xx = 0;\r\n    /** Target new y position */\r\n    let yy = 0;\r\n    if (this.focus) {\r\n      xx = -(this.focus.x + this.focus.w / 2 - meta.tilesWidth / 2);\r\n      yy = -(this.focus.y + this.focus.h / 2 - meta.tilesHeight / 2);\r\n      this.x += ((xx - this.x) / 15) * meta.deltaTime;\r\n      this.y += ((yy - this.y) / 15) * meta.deltaTime;\r\n    }\r\n    if (this.lockedAngles) {\r\n      // left boundary\r\n      let xChanged = false;\r\n      let yChanged = false;\r\n      if (-this.x < boundingBox.x) {\r\n        xx = -boundingBox.x;\r\n        xChanged = true;\r\n      }\r\n      // top boundary\r\n\r\n      if (-this.y < boundingBox.y) {\r\n        yy = -boundingBox.y;\r\n        yChanged = true;\r\n      }\r\n\r\n      // Right boundary\r\n      if (-this.x > boundingBox.x + boundingBox.w - meta.tilesWidth) {\r\n        xx = -(boundingBox.x + boundingBox.w - meta.tilesWidth);\r\n        xChanged = true;\r\n      }\r\n      // Down boundary\r\n      if (-this.y > boundingBox.y + boundingBox.h - meta.tilesHeight) {\r\n        yy = -(boundingBox.y + boundingBox.h - meta.tilesHeight);\r\n        yChanged = true;\r\n      }\r\n      /* Describe what does this do\r\n      if (xChanged) {\r\n        this.x += ((xx - this.x) / 6) * meta.deltaTime;\r\n      }\r\n      if (yChanged) {\r\n        this.y += ((yy - this.y) / 6) * meta.deltaTime;\r\n      }\r\n      */\r\n    }\r\n\r\n    if (this.shake > 0) {\r\n      this.x += Math.random() / 2 - 0.25;\r\n      this.y += Math.random() / 2 - 0.25;\r\n      this.shake -= meta.deltaTime;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Camera;\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","// Creates the canvas element and exports it\r\n\r\nexport class GameCanvas extends HTMLCanvasElement {\r\n    context: CanvasRenderingContext2D;\r\n    constructor(width: number = 800, height: number = 600) {\r\n      super();\r\n      this.width = width;\r\n      this.height = height;\r\n      this.context = this.getContext(\"2d\")!;\r\n      this.style.outline=\"22px inset black\"\r\n      this.initialize();\r\n    }\r\n    /** Moves the canvas to the center by giving it an offset to the top/left sides */\r\n    center = () => {\r\n      this.style.position = \"absolute\";\r\n      this.style.left = (window.innerWidth - this.width) / 2 + \"px\";\r\n      this.style.top = (window.innerHeight - this.height) / 2 + \"px\";\r\n    };\r\n    clear = () => {\r\n      this.context.clearRect(0, 0, this.width, this.height);\r\n    };\r\n    initialize = () => {\r\n      /* Calls the centerCanvas function every time the window size changes */\r\n      window.addEventListener(\"resize\", () => this.center());\r\n      this.center();\r\n      document.body.appendChild(this);\r\n      // Disables anti aliasing\r\n      this.context.imageSmoothingEnabled = false;\r\n    };\r\n    /** Right clicks menu are prevented from appearing on the canvas */\r\n    oncontextmenu = (event: MouseEvent) => {\r\n      event.preventDefault();\r\n    };\r\n  }\r\n\r\n  // Mandatory define\r\n  customElements.define('game-canvas', GameCanvas, {extends: 'canvas'});\r\n\r\n  export default GameCanvas;\r\n  ","export class Meta {\r\n  /** The rendering's unit of measurement, expressed in pixels */\r\n  tilesize = 16;\r\n  baseRatio = 2;\r\n  /** Acts on the size of each pixel */\r\n  ratio = this.baseRatio;\r\n  /** Frames per second */\r\n  fps = 0;\r\n  /** Defines whether the fps span will be initialized/displayed */\r\n  displayFps = true;\r\n  /** Game time multiplier */\r\n  deltaTime = 1;\r\n  /** Target frames per second */\r\n  targetFrames = 60;\r\n  /** Target frame time */\r\n  perfectFrameTime = 1000 / this.targetFrames;\r\n  lastTimestamp = Date.now();\r\n  timestamp = Date.now();\r\n  /** Defines the type of the game's loop, A.K.A. 'scene' */\r\n  loopType = 0;\r\n  baseTilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n  baseTilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  /** Number of tiles displayed on screen (width) */\r\n  tilesWidth = this.baseTilesWidth;\r\n  /** Number of tiles displayed on screen (height) */\r\n  tilesHeight = this.baseTilesHeight;\r\n  constructor() {\r\n    this.init();\r\n  }\r\n  /** Initializes the fps counter if displayFps == true (init is called automatically by constructor) */\r\n  init = () => {\r\n    if (this.displayFps) {\r\n      // Creates and styles the html element where the fps will be displayed\r\n      let fpsSpan = document.createElement(\"span\");\r\n      fpsSpan.style.position = \"absolute\";\r\n      fpsSpan.style.color = \"black\";\r\n      fpsSpan.style.fontSize = \"25px\";\r\n      fpsSpan.style.fontWeight = \"bold\";\r\n      fpsSpan.style.fontFamily = '\"Lucida Console\", \"Courier New\", monospace';\r\n      fpsSpan.style.left = \"5px\";\r\n      fpsSpan.style.top = \"5px\";\r\n      // Places it as a child of the html body\r\n      document.body.appendChild(fpsSpan);\r\n\r\n      // Calls the fpsCounter function once every second\r\n      setInterval(() => {\r\n        this.fpsCounter(fpsSpan);\r\n      }, 1000);\r\n    }\r\n  };\r\n  changeRatio = (newValue: number) => {\r\n    this.ratio = newValue;\r\n    this.tilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n    this.tilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  };\r\n  changeBaseRatio = (newValue: number) => {\r\n    this.baseRatio = newValue;\r\n    this.baseTilesWidth = window.innerWidth / this.tilesize / this.ratio;\r\n    this.baseTilesHeight = window.innerHeight / this.tilesize / this.ratio;\r\n  };\r\n  /** Updates deltaTime and the fps counter */\r\n  compute = () => {\r\n    this.fps += 1;\r\n    this.updateDeltaTime();\r\n  };\r\n  /** Calculates the difference (delta) of the time elapsed and supposed game speed  */\r\n  updateDeltaTime = () => {\r\n    this.lastTimestamp = this.timestamp;\r\n    this.timestamp = Date.now();\r\n    this.deltaTime =\r\n      (this.timestamp - this.lastTimestamp) / this.perfectFrameTime;\r\n\r\n    // Forces the time multiplication to be at max two times the norm\r\n    if (this.deltaTime > 2) {\r\n      this.deltaTime = 2;\r\n    }\r\n  };\r\n\r\n  /** Keeps count of the fps, called in a setInterval.\r\n   * @param {HTMLSpanElement} span The html element where to display the fps variable\r\n   */\r\n  fpsCounter = (span: HTMLSpanElement) => {\r\n    span.innerHTML = String(this.fps);\r\n    this.fps = 0;\r\n  };\r\n}\r\n// export const meta = new Meta();\r\nexport default Meta;\r\n","import Player from \"modules/actors/player\";\r\nimport Camera from \"modules/camera\";\r\nimport GameCanvas from \"modules/canvas\";\r\nimport debug from \"modules/debug\";\r\nimport Entity from \"modules/entity\";\r\nimport Meta from \"modules/meta\";\r\n\r\nconst canvas = new GameCanvas();\r\nconst meta = new Meta();\r\nconst camera = new Camera();\r\nconst player = new Player(\r\n  canvas.width / 2 / meta.tilesize / meta.ratio,\r\n  canvas.height / 2 / meta.tilesize / meta.ratio,\r\n  canvas,\r\n  meta,\r\n  camera\r\n);\r\nmeta.ratio=3\r\nexport const initializeGame = () => {\r\n  loop();\r\n};\r\nconst entities: Entity[] = [player];\r\nconst renderBackground = (context: CanvasRenderingContext2D) => {\r\n  for (let i = 0; i < meta.tilesWidth; i += 2) {\r\n    for (let j = 0; j < meta.tilesWidth; j += 2) {\r\n      context.drawImage(\r\n        player.sheet,\r\n        0 * meta.tilesize, // x pos of the sprite\r\n        8 * meta.tilesize, // y pos of the sprite\r\n        2 * meta.tilesize, // width of the sprite\r\n        2 * meta.tilesize, // height of the sprite\r\n        i * meta.tilesize * meta.ratio,\r\n        j * meta.tilesize * meta.ratio,\r\n        2 * meta.tilesize * meta.ratio,\r\n        2 * meta.tilesize * meta.ratio\r\n      );\r\n    }\r\n  }\r\n};\r\nconst renderUi = (context: CanvasRenderingContext2D) => {\r\n  context.drawImage(\r\n    player.sheet,\r\n    2 * meta.tilesize, // x pos of the sprite\r\n    8 * meta.tilesize, // y pos of the sprite\r\n    6 * meta.tilesize, // width of the sprite\r\n    2 * meta.tilesize, // height of the sprite\r\n    1 * meta.tilesize * meta.ratio,\r\n    0.5 * meta.tilesize * meta.ratio,\r\n    6 * meta.tilesize * meta.ratio,\r\n    2 * meta.tilesize * meta.ratio\r\n  );\r\n};\r\nconst renderVed = (context: CanvasRenderingContext2D) => {\r\n  context.drawImage(\r\n    player.sheet,\r\n    8 * meta.tilesize, // x pos of the sprite\r\n    8 * meta.tilesize, // y pos of the sprite\r\n    2 * meta.tilesize, // width of the sprite\r\n    2 * meta.tilesize, // height of the sprite\r\n    9 * meta.tilesize * meta.ratio,\r\n    9 * meta.tilesize * meta.ratio,\r\n    2 * meta.tilesize * meta.ratio,\r\n    2 * meta.tilesize * meta.ratio\r\n  );\r\n};\r\nconst loop = () => {\r\n  meta.compute();\r\n  canvas.clear();\r\n  for (const e of entities) {\r\n    e.compute(meta.deltaTime, entities);\r\n  }\r\n  renderBackground(canvas.context);\r\n  renderVed(canvas.context);\r\n  for (const e of entities) {\r\n    e.render(canvas.context, meta.tilesize, meta.ratio, camera);\r\n  }\r\n  renderUi(canvas.context);\r\n  debug.render(canvas.context, meta.tilesize, meta.ratio, camera);\r\n  requestAnimationFrame(loop);\r\n};\r\n\r\nexport default initializeGame;\r\n","\r\nimport {initializeGame} from \"./game\"\r\nimport \"./index.css\";\r\n\r\ninitializeGame()\r\nconsole.log(\"Ready\")"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_typeof","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_defineProperty","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","Constructor","protoProps","staticProps","instance","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","sheet","Image","src","Sprite","x","y","_this","w","h","_classCallCheck","animations","animation","display","left","frame","frameCounter","removed","rot","trackPos","prevPos","addPos","unshift","opacity","_createClass","centerX","centerY","label","context","tilesize","ratio","camera","drawImage","keyframesX","keyframesY","deltaTime","slowness","onAnimationEnd","Animation","pivot","ref","save","globalAlpha","translate","offsetX","offsetY","rotate","restore","console","log","fillRect","entity","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","isArray","F","s","done","_e","f","err","normalCompletion","didErr","step","next","_e2","checkCollisions","entities","solid","_step","_iterator","collisionException","collided","onCollision","resolveException","colCheck","simpleCollisionCheck","xVel","xVelExt","yVel","yVelExt","velocitiesX","velocitiesY","objHitbox","hitbox","broadHitbox","colPointsVector","ct","cp","cn","dynamicRectVsRect","id","sort","a","b","_i","_colPointsVector","resolveDynamicRectVsRect","rectB","contactNormal","contactTime","overlapFixMultiplier","Math","abs","rectA","contactPoint","expanded","origin","direction","timeHitNear","inverseDir","timeNear","timeFar","isNaN","temp","max","min","rayVsRect","grounded","forceSpriteBox","rect1","rect2","shapeA","shapeB","shapeAA","shapeBB","vX","vY","hWidths","hHeights","colDir","oX","oY","col","T","B","L","R","assembleChunk","chunk","assembledChunks","brokenChunk","j","k","part","firstBlock","pointRectCol","point","rectangle","rect","lineRectCol","line","sq","squareLines","getRectSides","intersect","x1","y1","x2","y2","x3","y3","x4","y4","denominator","ua","ub","sides","getAngle","_ref","deltaX","deltaY","atan2","getRectsAngle","_ref2","_ref3","w2","h2","cosSin","_ref4","rotation","cos","sin","getRotation","obj1","obj2","distance","sqrt","pow","Text","color","align","baseline","content","fontSize","font","shadow","shadowColor","strokeWidth","stroke","strokeColor","round","lineWidth","strokeStyle","textBaseline","textAlign","fillStyle","canvasFont","strokeText","fillText","shadowOffsetX","shadowOffsetY","SpriteVfx","_Sprite","_super","type","randomPos","randomAmount","random","moveAtSource","randomizePos","additionalResetOperations","updateSprite","renderSprite","DmgVfx","_SpriteVfx","_super2","_this2","setAnimation","entries","rotations","Particle","_Sprite2","_super3","_this3","particleDuration","verticalSpeed","lifeCycles","remainingCycles","randomX","randomY","ParticlesVfx","_SpriteVfx2","_super4","_this4","particlesDuration","particlesAmount","particles","initialize","reset","_step2","removedCount","_iterator2","particle","compute","_step3","_iterator3","render","TextVfx","_SpriteVfx3","_super5","_this5","text","progress","PI","vfxManager","VfxManager","recyclePool","environment","vfxClasses","_objectSpread","Vfxs","vfxName","vfx","getRecycledVfx","splice","SoundManager","playbackRate","volume","sounds","playRandom","soundsArray","play","soundsBaseUrl","createSound","relativeUrl","loop","fullUrl","concat","splittedUrl","split","CustomAudio","url","audio","calledPlayPromise","customVolume","customPlaybackRate","paused","currentTime","pause","promise","catch","warn","then","Audio","soundManager","Entity","speed","inertia","state","stats","Stats","background","damaged","immovable","drops","Physics","hasHpBar","hasDisplayName","hitboxOffset","createVfx","updateHitbox","atk","hp","set","collider","resolveCollisions","beginPath","strokeRect","closePath","ellipse","fill","lv","maxHp","maxExp","exp","maxMana","mana","atkSpeed","expValue","Controls","up","down","right","upR","downR","leftR","rightR","spacebar","r","lClickDown","mClickDown","rClickDown","currentPos","lastDir","mouseX","mouseY","initListeners","document","addEventListener","handleMouseEvt","handleTouchEvt","handleKeyboardEvt","that","evt","isDown","touches","clientX","clientY","button","Mouse","canvas","meta","gui","guiRef","absolute","hoverUI","dragging","slot","lastMouseX","lastMouseY","setCanvas","updatePos","offsetLeft","offsetTop","updatePosMobile","_slicedToArray","_s","_x","_r","_arr","_n","_d","Debug","div","activateButton","window","active","times","drawLater","drawRect","drawPoint","drawLine","pointA","pointB","draw","moveTo","lineTo","printTime","innerHTML","averageTime","toFixed","inspect","reduce","acc","includes","measureTime","callback","activate","start","performance","now","_len","args","_key","createWindow","onclick","deactivate","innerText","close","sum","width","height","open","body","style","margin","padding","boxSizing","backgroundColor","title","appendChild","onbeforeunload","_this$window","createDiv","createElement","position","inset","fontFamily","createActivateButton","top","clickEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","Sword","_Entity","offsetPositioning","delay","relativePositioning","Player","controls","mouse","mantle","skirt","swords","swordsOffsets","stance","resolveInputs","loadAnimation","updateVelocities","updatePosition","follow","updatePropPosition","debug","centerPoint","sprite","pos","renderArm","offset","sword","prot","pcos","psin","srot","scos","ssin","swordOffsets","idle","defend","attack0","attack1","Camera","focus","lockedAngles","zoom","shake","actor","smoothly","boundingSq","boundingBox","tilesWidth","tilesHeight","changeRatio","baseRatio","xx","yy","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Map","fn","indexOf","has","Wrapper","GameCanvas","_HTMLCanvasElement","center","innerWidth","innerHeight","clear","clearRect","imageSmoothingEnabled","oncontextmenu","event","preventDefault","getContext","outline","HTMLCanvasElement","customElements","define","extends","Meta","fps","displayFps","targetFrames","perfectFrameTime","lastTimestamp","Date","timestamp","loopType","baseTilesWidth","baseTilesHeight","init","fpsSpan","fontWeight","setInterval","fpsCounter","newValue","changeBaseRatio","updateDeltaTime","span","player","initializeGame","_entities","renderBackground","_i2","_entities2","renderUi","requestAnimationFrame"],"sourceRoot":""}